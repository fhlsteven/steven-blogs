import{_ as e,o as r,c as i,a}from"./app-d9da1b6d.js";const t={},l=a('<h1 id="撰写优秀的需求" tabindex="-1"><a class="header-anchor" href="#撰写优秀的需求" aria-hidden="true">#</a> 撰写优秀的需求</h1><p>作者：Karl Wiegers.(Bear缩译)</p><p>文章来源：http://delphideveloper.myrice.com/docs/requirements/writing_good_requirements_t.htm</p><hr><p>软件需求常常被写得很糟且难于遵循。清楚地阐明你的需求将使每位项目参与者获益。</p><hr><h2 id="需求说明总的特点" tabindex="-1"><a class="header-anchor" href="#需求说明总的特点" aria-hidden="true">#</a> 需求说明总的特点</h2><p>1、它们必须是正确的。<br> 2、它们必须是可行的<br> 3、它们必须是对项目来说是必不可少的。<br> 4、它们必须是被标明优先次序的。<br> 5、它们必须是不含糊的。<br> 6、它们必须是能被证实的。</p><p>每一条需求说明的特点</p><p>1、它是完整的。<br> 2、它是一致的。<br> 3、它是可修改的。<br> 4、它是可跟踪的。</p><h2 id="需求写作指南" tabindex="-1"><a class="header-anchor" href="#需求写作指南" aria-hidden="true">#</a> 需求写作指南</h2><p>撰写优秀的需求没有一个简单的公式。很大程度上，它是从过去的需求问题中得来的教训与经验。这儿有几条当你写作软件需求时应记在心上的原则：</p><ul><li>保持句子和段落简短。</li><li>从开发者的立场来看，检查需求陈述是否足够明确。</li><li>努力找到一个适当的粒度层次来写作。</li><li>检查是否有一个陈述表达了多个需求，将它们分开。</li><li>整个需求文档的写作都保持在一个一致的细节层次上。</li><li>避免陈述冗余的需求。</li></ul>',13),h=[l];function n(c,d){return r(),i("div",null,h)}const s=e(t,[["render",n],["__file","reqmng1.html.vue"]]);export{s as default};
