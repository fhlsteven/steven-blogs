import{_ as n,r as a,o as i,c as o,a as e,b as t,e as s,d as l}from"./app-35fb03de.js";const h={},d=e("h1",{id:"前言",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),t(" 前言")],-1),C={href:"https://www.doc88.com/p-186788607809.html",target:"_blank",rel:"noopener noreferrer"},c=l('<h2 id="_0-1-提要" tabindex="-1"><a class="header-anchor" href="#_0-1-提要" aria-hidden="true">#</a> 0.1 提要</h2><p>欢迎阅读《展现 C#》(Presenting C#)。这本书是你提高企业编程语言的一条捷径。这种企业编程语言带有下一代编程语言服务运行时(NGWS Runtime)：C#(发音&quot;C sharp&quot;)。</p><p>NGWS Runtime 是一个不仅管理执行代码、同时也提供使编程更加容易的动态环境。编译器产生受管代码以指向这种受管理执行环境。你获得跨平台语言集成、跨平台语言异常处理、增强安全性、版本控制、安排支持和查错服务。</p><p>支持NGWS Runtime 的主要语言是C#。支持NGWS框架的很多程序是用C#写的，因此，在一些带有NGWS Runtime的编译器中，它的编译器可以被认为是非常经得起测试且是经过优化的。C#语言借鉴了C++，但是具备现代化和新增的类型安全——使C#成为企业解决方案的首选语言。</p><h2 id="_0-2-谁应该读这本书" tabindex="-1"><a class="header-anchor" href="#_0-2-谁应该读这本书" aria-hidden="true">#</a> 0.2 谁应该读这本书</h2><p>如果你对编程很陌生，这本书不适合你。这本书企图让程序员解脱并使用C#，基于他们已经拥有的知识。《展现 C#》的目标瞄准了已经具有如C/C++、VB、Java或其它编程经验的程序员。</p><p>如果你具有C++的背景，转向C#会很容易，但是，如果你精通于其它不同的语言，这本书也会耗掉你的一些日子。如果你有一点COM编程的知识，这本会更有趣，但会COM编程不再是必要的。</p><h2 id="_0-3-这本书如何组织" tabindex="-1"><a class="header-anchor" href="#_0-3-这本书如何组织" aria-hidden="true">#</a> 0.3 这本书如何组织</h2><ul><li><strong>第一章 C#简介</strong>——这一章把你带到C#逛一回，同时回答了有关你应该考虑学习C#的问题。</li><li><strong>第二章 NGWS Runtime 的技术基础</strong>——介绍NGWS Runtime为运行的C#代码所提供的低层架构。</li><li><strong>第三章 第一个C#应用程序</strong>——创建真正第一个C#应用程序(否则它是什么呢?)，它就是一个&quot;Hello World&quot;应用程序。</li><li><strong>第四章 C#类型</strong>——可以看到用在C#应用程序中的各种类型。探索值型和引用型的区别，还有如何加框和消框。</li><li><strong>第五章 类</strong>——C#功能真正强大的标志，它是具有类的面向对象的编程。你会学到好多好多的东西，如构造函数、析构函数、方法、属性、索引和事件等。</li><li><strong>第六章 控制语句</strong>——对应用程序实行流程控制。探索C#提供的各种选择和陈述语句。</li><li><strong>第七章 异常处理</strong>——获得了编写实现异常处理的应用程序技巧，拥有这种技巧，在NGWS Runtime世界，你是一个好的公民</li><li><strong>第八章 用C#写组件</strong>——用C#构建组件，因为支持NGWS Runtime，它可以被不同语言平台的客户使用。</li><li><strong>第九章 配置和安排</strong>——学到如何用C#有条件地进行编译工作，和如何为你的C#源码自动地创建文档。另外，这一章将介绍到NGWS的版本技术问题。</li><li><strong>第十章 用非受管代码交互操作</strong>——发现你如何使用C#内部的非受管代码，且非受管代码如何与你的C#组件一起交互操作。</li><li><strong>第十一章 C#代码查错</strong>——获得使用SDK查错工具的技巧，可以在应用程序中准确地找到错误并修改它们。</li><li><strong>第十二章 安全</strong>——探索NGWS Runtime的安全概念。学到代码访问安全性和基于角色的安全性。</li></ul><h2 id="_0-4-使用这本书你需要什么" tabindex="-1"><a class="header-anchor" href="#_0-4-使用这本书你需要什么" aria-hidden="true">#</a> 0.4 使用这本书你需要什么?</h2><p>从这本书的观点看，你所需要的就是下一代windows服务软件开发包(NGWS SDK)。尽管至少只要有NGWS Runtime 和C#编译器就可以，但当探索这些激动人心的新技术功能 时，在一台机器上装有说明文件档和所有的SDK工具(包括debugger)，将是一个极好的主意。</p><p>这本书不需要你装在机器上的Visual Studio 7的任何工具。我仅建议你要有一个优秀的支持行数的程序编辑器，用以编辑C#源文件。</p><p>……</p><p>(省略掉一些有关出版过程和表示感谢的段落)</p><h2 id="_0-5-关于作者" tabindex="-1"><a class="header-anchor" href="#_0-5-关于作者" aria-hidden="true">#</a> 0.5 关于作者</h2><p>Christoph Wille，微软系统工程师(MCSE)、微软系统开发师(MCSD)、Netware网络管理员(CNA)和MCP-IT，作为一个网络咨询人员和程序员，特别精通Windows DNA。微软认为他是ASP方面最有价值的人(MVP)，他是和微软在一起使用早期的C#版本的少数开发者之一。</p><p>Christoph 独自或参与了几本书的写作，包括Sams出版社的《自学ADO2.5 21天》、《自学ASP 24小时》、《自学MCSE TCP/IP 14天》和《MCSE 训练指南：SQL Server 7管理》。</p>',17);function p(_,u){const r=a("ExternalLinkIcon");return i(),o("div",null,[d,e("p",null,[t("相关书籍："),e("a",C,[t("《presenting c#》"),s(r)])]),c])}const S=n(h,[["render",p],["__file","cspcls2_0.html.vue"]]);export{S as default};
