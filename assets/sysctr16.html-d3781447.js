import{_ as n,o as s,c as a,a as t}from"./app-a2b6e588.js";const p={},o=t(`<h1 id="在c-获取ie临时文件" tabindex="-1"><a class="header-anchor" href="#在c-获取ie临时文件" aria-hidden="true">#</a> 在C#获取IE临时文件</h1><p>大家知道，在我们访问一个网站的时候。系统会把这个网站上的图片，动画等内容全部缓存到Internet临时文件夹中。</p><p>我们可以通过 <code>&lt;Drives&gt;:\\Documents and Settings\\&lt;user&gt;\\Local Settings\\Temporary Internet Files</code>访问。但是可能我们都没有想到，里面的文件实际却不同于我们系统中其他的文件夹和文件的关系。</p><p>举例说明，我们在VS.net下写一个函数来返回指定文件夹中的文件夹和所有文件时，但我们把Internet临时文件夹的地址传进去时，系统只会返回一个文件，那就是desktop.ini（每个文件夹都有）,还有一个隐藏的文件夹。所以这就证明了在临时文件夹中的文件并不是按照普通的文件夹与文件的方式存在的。</p><p>其实windows是把临时文件全部存在一个隐藏的文件夹中，这个文件夹是我们都看不到的，然后靠一个index.dat的索引把内容全部读出来回显给用户。</p><p>那我们怎么用程序来读取其中的内容呢? 因为这几天在帮同学完成他的毕业设计，所以研究了一下。 首先要引用一个user.dll,在系统文件夹中。然后利用它其中的一些函数就可以遍历整个文件夹，并获得其中每个文件的信息。</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;wininet.dll&quot;</span><span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">FindFirstUrlCacheEntry</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>LPTStr<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span> <span class="token class-name"><span class="token keyword">string</span></span> lpszUrlSearchPattern<span class="token punctuation">,</span>
    <span class="token class-name">IntPtr</span> lpFirstCacheEntryInfo<span class="token punctuation">,</span>
    <span class="token keyword">ref</span> <span class="token class-name"><span class="token keyword">int</span></span> lpdwFirstCacheEntryInfoBufferSize<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;wininet.dll&quot;</span><span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">FindNextUrlCacheEntry</span><span class="token punctuation">(</span>
    <span class="token class-name">IntPtr</span> hEnumHandle<span class="token punctuation">,</span>
    <span class="token class-name">IntPtr</span> lpNextCacheEntryInfo<span class="token punctuation">,</span>
    <span class="token keyword">ref</span> <span class="token class-name"><span class="token keyword">int</span></span> lpdwNextCacheEntryInfoBufferSize<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;wininet.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">FindCloseUrlCache</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hEnumHandle<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>引入以上三个函数来遍历临时文件夹，然后再引用</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;kernel32.dll&quot;</span><span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">FileTimeToSystemTime</span><span class="token punctuation">(</span>
    <span class="token class-name">IntPtr</span> lpFileTime<span class="token punctuation">,</span>
    <span class="token class-name">IntPtr</span> lpSystemTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>用来把 FileTime时间格式转化成c#中的string类型，以便我们进一步操作。</p><p>主体程序如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code>
<span class="token preprocessor property">#<span class="token directive keyword">region</span> 引入dll</span>

<span class="token punctuation">[</span><span class="token function">StructLayout</span><span class="token punctuation">(</span>LayoutKind<span class="token punctuation">.</span>Sequential<span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">struct</span> <span class="token class-name">INTERNET_CACHE_ENTRY_INFO</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> dwStructSize<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">IntPtr</span> lpszSourceUrlName<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">IntPtr</span> lpszLocalFileName<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> CacheEntryType<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> dwUseCount<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> dwHitRate<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> dwSizeLow<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> dwSizeHigh<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">FILETIME</span> LastModifiedTime<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">FILETIME</span> ExpireTime<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">FILETIME</span> LastAccessTime<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">FILETIME</span> LastSyncTime<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">IntPtr</span> lpHeaderInfo<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> dwHeaderInfoSize<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">IntPtr</span> lpszFileExtension<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> dwExemptDelta<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">StructLayout</span><span class="token attribute-arguments"><span class="token punctuation">(</span>LayoutKind<span class="token punctuation">.</span>Sequential<span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">struct</span> <span class="token class-name">SYSTEMTIME</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">short</span></span> wYear<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">short</span></span> wMonth<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">short</span></span> wDayOfWeek<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">short</span></span> wDay<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">short</span></span> wHour<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">short</span></span> wMinute<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">short</span></span> wSecond<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">short</span></span> wMilliseconds<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;kernel32.dll&quot;</span><span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">FileTimeToSystemTime</span><span class="token punctuation">(</span>
    <span class="token class-name">IntPtr</span> lpFileTime<span class="token punctuation">,</span>
    <span class="token class-name">IntPtr</span> lpSystemTime<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;wininet.dll&quot;</span><span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">FindFirstUrlCacheEntry</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>LPTStr<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span> <span class="token class-name"><span class="token keyword">string</span></span> lpszUrlSearchPattern<span class="token punctuation">,</span>
    <span class="token class-name">IntPtr</span> lpFirstCacheEntryInfo<span class="token punctuation">,</span>
    <span class="token keyword">ref</span> <span class="token class-name"><span class="token keyword">int</span></span> lpdwFirstCacheEntryInfoBufferSize<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;wininet.dll&quot;</span><span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">FindNextUrlCacheEntry</span><span class="token punctuation">(</span>
    <span class="token class-name">IntPtr</span> hEnumHandle<span class="token punctuation">,</span>
    <span class="token class-name">IntPtr</span> lpNextCacheEntryInfo<span class="token punctuation">,</span>
    <span class="token keyword">ref</span> <span class="token class-name"><span class="token keyword">int</span></span> lpdwNextCacheEntryInfoBufferSize<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;wininet.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">FindCloseUrlCache</span><span class="token punctuation">(</span>
    <span class="token class-name">IntPtr</span> hEnumHandle<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> ERROR_NO_MORE_ITEMS <span class="token operator">=</span> <span class="token number">259</span><span class="token punctuation">;</span>

<span class="token preprocessor property">#<span class="token directive keyword">endregion</span></span>

<span class="token preprocessor property">#<span class="token directive keyword">region</span> FileTimeToSystemTime</span>

<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">FILETIMEtoDataTime</span><span class="token punctuation">(</span><span class="token class-name">FILETIME</span> time<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">IntPtr</span> filetime <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">AllocHGlobal</span><span class="token punctuation">(</span>Marshal<span class="token punctuation">.</span><span class="token function">SizeOf</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">FILETIME</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IntPtr</span> systime <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">AllocHGlobal</span><span class="token punctuation">(</span>Marshal<span class="token punctuation">.</span><span class="token function">SizeOf</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">SYSTEMTIME</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Marshal<span class="token punctuation">.</span><span class="token function">StructureToPtr</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> filetime<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">FileTimeToSystemTime</span><span class="token punctuation">(</span>filetime<span class="token punctuation">,</span> systime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">SYSTEMTIME</span> st <span class="token operator">=</span> <span class="token punctuation">(</span>SYSTEMTIME<span class="token punctuation">)</span>Marshal<span class="token punctuation">.</span><span class="token function">PtrToStructure</span><span class="token punctuation">(</span>systime<span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">SYSTEMTIME</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">string</span></span> Time <span class="token operator">=</span> st<span class="token punctuation">.</span>wYear<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> st<span class="token punctuation">.</span>wMonth<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> st<span class="token punctuation">.</span>wDay<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> st<span class="token punctuation">.</span>wHour<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> st<span class="token punctuation">.</span>wMinute<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> st<span class="token punctuation">.</span>wSecond<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Time<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token preprocessor property">#<span class="token directive keyword">endregion</span></span>

<span class="token preprocessor property">#<span class="token directive keyword">region</span> 加载数据</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">FileOk_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">int</span></span> nNeeded <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> nBufSize<span class="token punctuation">;</span>
    <span class="token class-name">IntPtr</span> buf<span class="token punctuation">;</span>
    <span class="token class-name">INTERNET_CACHE_ENTRY_INFO</span> CacheItem<span class="token punctuation">;</span>
    <span class="token class-name">IntPtr</span> hEnum<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">bool</span></span> r<span class="token punctuation">;</span>

    <span class="token function">FindFirstUrlCacheEntry</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">,</span> <span class="token keyword">ref</span> nNeeded<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>Marshal<span class="token punctuation">.</span><span class="token function">GetLastWin32Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> ERROR_NO_MORE_ITEMS<span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>

    nBufSize <span class="token operator">=</span> nNeeded<span class="token punctuation">;</span>
    buf <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">AllocHGlobal</span><span class="token punctuation">(</span>nBufSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hEnum <span class="token operator">=</span> <span class="token function">FindFirstUrlCacheEntry</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token keyword">ref</span> nNeeded<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        CacheItem <span class="token operator">=</span> <span class="token punctuation">(</span>INTERNET_CACHE_ENTRY_INFO<span class="token punctuation">)</span>Marshal<span class="token punctuation">.</span><span class="token function">PtrToStructure</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span>
            <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">INTERNET_CACHE_ENTRY_INFO</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">string</span></span> modifiedTime <span class="token operator">=</span> <span class="token function">FILETIMEtoDataTime</span><span class="token punctuation">(</span>CacheItem<span class="token punctuation">.</span>LastModifiedTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> expireTime <span class="token operator">=</span> <span class="token function">FILETIMEtoDataTime</span><span class="token punctuation">(</span>CacheItem<span class="token punctuation">.</span>ExpireTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> accessTime <span class="token operator">=</span> <span class="token function">FILETIMEtoDataTime</span><span class="token punctuation">(</span>CacheItem<span class="token punctuation">.</span>LastAccessTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> syncTime <span class="token operator">=</span> <span class="token function">FILETIMEtoDataTime</span><span class="token punctuation">(</span>CacheItem<span class="token punctuation">.</span>LastSyncTime<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token preprocessor property">#<span class="token directive keyword">region</span> 获得数据，存入数据库</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//此處遍歷CacheItem即可</span>
            <span class="token comment">//例如</span>
            <span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">PtrToStringAuto</span><span class="token punctuation">(</span>CacheItem<span class="token punctuation">.</span>lpszSourceUrlName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//異常處理</span>
        <span class="token punctuation">}</span>
        <span class="token preprocessor property">#<span class="token directive keyword">endregion</span></span>

        <span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">PtrToStringAuto</span><span class="token punctuation">(</span>CacheItem<span class="token punctuation">.</span>lpszSourceUrlName<span class="token punctuation">)</span><span class="token punctuation">;</span>

        nNeeded <span class="token operator">=</span> nBufSize<span class="token punctuation">;</span>
        r <span class="token operator">=</span> <span class="token function">FindNextUrlCacheEntry</span><span class="token punctuation">(</span>hEnum<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token keyword">ref</span> nNeeded<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>r <span class="token operator">&amp;&amp;</span> Marshal<span class="token punctuation">.</span><span class="token function">GetLastWin32Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> ERROR_NO_MORE_ITEMS<span class="token punctuation">)</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>r <span class="token operator">&amp;&amp;</span> nNeeded <span class="token operator">&gt;</span> nBufSize<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            nBufSize <span class="token operator">=</span> nNeeded<span class="token punctuation">;</span>
            buf <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">ReAllocHGlobal</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token punctuation">(</span>IntPtr<span class="token punctuation">)</span>nBufSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">FindNextUrlCacheEntry</span><span class="token punctuation">(</span>hEnum<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token keyword">ref</span> nNeeded<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;系统数据加载完毕！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Marshal<span class="token punctuation">.</span><span class="token function">FreeHGlobal</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token preprocessor property">#<span class="token directive keyword">endregion</span></span>
</code></pre></div>`,12),e=[o];function c(l,u){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","sysctr16.html.vue"]]);export{i as default};
