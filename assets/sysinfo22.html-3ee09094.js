import{_ as n,o as s,c as a,a as t}from"./app-d9da1b6d.js";const p={},o=t(`<h1 id="如何修改桌面右键菜单" tabindex="-1"><a class="header-anchor" href="#如何修改桌面右键菜单" aria-hidden="true">#</a> 如何修改桌面右键菜单</h1><div class="language-txt" data-ext="txt"><pre class="language-txt"><code>主　　题：  （200分）在问！如何修改桌面右键菜单！
作　　者：  nyucv (思索者)
等　　级：  ^^
信 誉 值：  100
所属论坛：  .NET技术 C#
问题点数：  10
回复次数：  29
发表时间：  2003-12-13 19:11:27
</code></pre></div><p>我想在桌面右键菜单中增加新项！点击该菜单项时。启动我的程序！！</p><p>（如：江民杀毒王。大哥们是：桌面右键菜单呀！<code>*********不是我的电脑，文件夹，文件的右键菜单！*******</code>。我查了很多资料也没找到在注册表中要修改那一项才能实现！谁知道要修改那项！200分答谢！！！！！！绝不失言！失言是四只脚的！呵呵！！！！！！）</p><p>谢谢！！！！！！！！！！！！！！！！</p><hr><hr><p>回复人： zoujiaming(笨笨的!) ( 三级(初级)) 信誉：100 2003-12-13 19:21:43 得分:0</p><blockquote><p>我也非常想知道，但一直都没得到答案，帮着项一下！</p></blockquote><p>回复人： orcale(小三) ( 五级(中级)) 信誉：99 2003-12-13 19:25:59 得分:0</p><blockquote><p>这个应该与操作注册表有关系。你可以找这方面的资料</p></blockquote><p>回复人： haiwangstar() ( 二级(初级)) 信誉：100 2003-12-13 21:03:52 得分:0</p><blockquote><p>这个我以前看过例程，它是调用Ｓｈｅｌｌ　ＡＰＩ　COM组件实现的，大量的用到平台调用服务。注册表注册都是API自动完成的，如果你用VC，VB做过类似的程序，用Ｃ＃做也不难的。不知源码，找不找的到，我好好找找。找到源码前，你可以先看看Ｓｈｅｌｌ　ＡＰＩ，也许可以的到方法。</p></blockquote><p>回复人： haiwangstar() ( 二级(初级)) 信誉：100 2003-12-13 21:06:32 得分:0</p><blockquote><p>桌面右键菜单呀！*********不是我的电脑，文件夹，文件的右键菜“<br> 具体实现不一样吗？？如果不一样，那个源码可能没用，那个源码是在资源浏览器中实现右键菜单的。</p></blockquote><p>回复人： Sunmast(速马) ( 五级(中级)) 信誉：100 2003-12-13 21:12:25 得分:0</p><blockquote><p>我靠<br> 干嘛用那么多叹号的<br> 不就是注册表操作吗</p></blockquote><p>回复人： nyucv(思索者) ( 二级(初级)) 信誉：100 2003-12-14 17:58:00 得分:0</p><blockquote><p>楼上！<br> 要是能查到是注册表修改那一项的话！我就不用那么多叹号了！<br> 你认为简单的话！就把要改注册表那一项给写出来！行吗？？？？<br> 我搜索了很多资都没结果！</p></blockquote><p>回复人： nyucv(思索者) ( 二级(初级)) 信誉：100 2003-12-16 21:40:00 得分:0</p><blockquote><p>TO:Sunmast(速马) 我不想靠！大家靠来靠去没意思！因为我们都是有素质的人！所以我相信我们不会轻易说脏话！<br> 我只是想问你！修改注册表那一项！老大2天了！你不是说简单嘛！那你指点一下菜鸟是那一项！谢谢你了！！！！！！</p></blockquote><p>回复人： mableboy() ( 二级(初级)) 信誉：100 2003-12-16 21:50:00 得分:0</p><blockquote><p>一个方法<br> 你把江名那个在右键菜单中显示的那个菜单项到注册表中搜索一下，看看它是放在哪儿的！<br> 它肯定是放在注册表中的！</p></blockquote><p>回复人： nyucv(思索者) ( 二级(初级)) 信誉：100 2003-12-16 22:06:00 得分:0</p><blockquote><p>我早在注册表里搜索过了呀！差不多都试过！好像都不是那一项！也许方法不对呀！<br> 555555<br> 怎么在桌面右键菜单修改问题就那么难呢！<br> 网上所找到的资料也没这一项！搜遍了整个论坛！提这问题的人到不少。可好像一个也没解决！！！！！</p></blockquote><p>回复人： nyucv(思索者) ( 二级(初级)) 信誉：100 2003-12-17 19:02:00 得分:0</p><blockquote><p>晕！问题！没搞定！！！！！！</p></blockquote><p>回复人： 13880079673(CMonkey) ( 二级(初级)) 信誉：100 2003-12-17 20:05:00 得分:0</p><blockquote><p>呵呵，我估计注册表是不可能搞定的，我看了很多注册表修改Windows的书，只看到在文件上面或者我的电脑上面可以加内容，从没看见在桌面上可以加内容<br><br> 最笨的办法的，你干脆自己弄个什么钩子类的东西，加在Windows的启动里面</p></blockquote><p>回复人： jun_01(无名小卒) ( 二级(初级)) 信誉：100 2003-12-17 20:58:00 得分:0</p><blockquote><p>呵呵,这么看来,的确很难喽</p></blockquote><p>回复人： laodeng72586(只是路过) ( 一级(初级)) 信誉：100 2003-12-17 23:55:00 得分:0</p><blockquote><p>我不会，但是找了一个资料给你参考参考：<br><br> 修改鼠标右键菜单<br><br> 我们知道在98下可以通过注册表来修改鼠标右键菜单，其实在WinXP中也可以。方法如下：这里以在鼠标右键菜单上添加“用DOS窗口在这里浏览”为例。<br> 1)打开注册表编辑器，找到HKEY_CLASSES_ROOT\\Directory\\shell，然后选中它，点击鼠标右键，新建一个主键，取名为“DOS”，然后选中新建的主键，在右边双击默认字符串值，在弹出的对话框中输入“用DOS窗口在这里浏览”，然后选中新建的主键，再建立一个主键，取名为“command”，选中“command”主键，修改默认值为“cmd.exe /k &quot;cd %L&quot;”即可。<br> 2)检查：在任意一个文件夹上按下鼠标右键，可以在弹出的菜单里面看到“用DOS窗口在这里浏览”，选择用DOS窗口在这里浏览，按下鼠标左键，看到没有，DOS窗口弹了出来！<br><br> 希望对你不所帮助</p></blockquote><p>回复人： 13880079673(CMonkey) ( 二级(初级)) 信誉：100 2003-12-18 10:57:00 得分:0</p><blockquote><p>楼上的没有明白楼主的意思，如果是修改文件夹的右健菜单，那就太简单，随便在网上找一下就能找到。<br> 但是桌面右健就不样，很少看到软件能在桌面右健菜单加自己的东西。楼主说的江民杀毒王我没用过</p></blockquote><p>回复人： veaven(风林火山) ( 五级(中级)) 信誉：100 2003-12-18 13:13:00 得分:0</p><blockquote><p><code>http://www.vckbase.com/document/viewdoc.asp?id=827</code><br> 这个介绍的很详细</p></blockquote><p>回复人： veaven(风林火山) ( 五级(中级)) 信誉：100 2003-12-18 13:16:00 得分:0</p><blockquote><p>简单的方法<br><code>http://tech.sina.com.cn/c/2002-01-16/8472.html</code><br><br> 修改注册表 打造个性化右键菜单<br><br> 鼠标右键菜单中有很多快捷命令，给用户日常操作带来了极大的方便。但是，不知您注意到没有，当鼠标右键菜单弹出的时候，其中的项目是否合您心意呢？是不是有的命令您并不需要，而您需要的却又不在上面呢？或者是英文选项使您不知其意……哈，如果糊里糊涂地使用右键命令，肯定不能提高工作效率。那就让我们略施小计，让鼠标右键菜单命令真正为己所用吧。<br><br> 以下方法，主要通过编辑注册表来实现，所以请一定事先备份注册表。方法是：点击“开始/运行”，填入“regedit”打开注册表编辑器，选择“导出注册表文件”就可以了。<br><br> 添加右键命令<br><br> 您所希望使用的命令如果不在右键菜单中，就要靠我们自己把它“加”进去。让我们来看几个添加实例，把握了基本方法，就可触类旁通，添加一切命令。<br><br> 图1 用右键快捷命令重启计算机。<br><br> “重新启动计算机”是经常需要做的工作，可是它的实现要通过点击“开始/关闭系统/重新启动计算机/确定”好几个步骤的操作，比较麻烦，如果可以通过右键快捷命令随时随地重启就更方便了。要添加“重新启动计算机”到右键菜单中，方法是：打开注册表编辑器，定位到“HKEY_LOCAL_MACHINE＼Software＼CLASSES＼Directory＼shell”，在其下新建一个名为“Restart”的子键，然后双击右侧窗口中的“默认”，将数值设为“重新启动计算机”。接下来，在“Restart”子键下再建一个子项，命名为“command”，双击右侧窗口中的“默认”，将数值设为“C:＼WINDOWS＼RUNDLL.EXE USER.EXE,EXITWINDOWSEXEC”。回车退出后，鼠标右键单击任意文件夹或“开始”按钮，在弹出的菜单中，用户就可以选择“重新启动计算机”命令了(如图1)。<br><br> 除了“回收站”本身，其他文件的右键菜单都没有“清空回收站”命令，那么我们也可以给它加上。在“HKEY_CLASSES_ROOT＼<em>＼shellex＼ContextMenuHandlers”下新建主键“{645FF040-5081-101B-9F08-00AA002F954E}”，确定后退出注册表，当右击任何文件时，其快捷菜单都会有一个“清空回收站”的选项。<br><br> 删除右键命令<br><br> 右键菜单选项良莠不齐，一些没用的命令应毫不留情地删除。在上网时常会遇到IE首页或标题栏被更改的情况，对此大家已经见怪不怪了。可是最近又有一种新的源代码，在右键菜单把自己的网站名字加上，在你用右键的时候就会出现在弹出的菜单中，虽然不影响使用，但一个不怎么样的网站实在不值得留在右键菜单中，而且长长的右键菜单也有碍雅观。去掉它的办法是：打开注册表编辑器，找到“HKEY_CURRENT_USER＼Software＼Microsoft＼Internet Explorer＼MenuExt”，你就会看到令人讨厌的网址，将其删除，右键就不会再出现那些网站的名字了。<br><br> 有时我们正常卸载某个应用程序后，在右键菜单中仍会遗留下一些不再需要的项目，同样需要将其删除。这些遗留项目一般都存放在“HKEY_CLASSES_ROOT＼</em>＼shellex＼ContextMenuHandlers”；如果是只对文件夹有效的项目，则存放在“HKEY_CLASSES_ROOT＼Directory＼shell”和“HKEY_CLASSES_ROOT＼Directory＼shellex＼ContextMenuHandlers”，有时在“HKEY_CLASSES_ROOT＼Folder＼shell”和“HKEY_CLASSES_ROOT＼Folder＼shellex＼ContextMenuHandlers”也有，找到后将他们删除即可。<br><br> 不想让右键菜单显示怎么办呢？比如要禁止右键单击“开始”弹出的菜单。在“HKEY_CURRENT_USER＼Software＼Microsoft＼Windows＼CurrentVersion＼Policies＼Explorer”下新建键值“NoTrayContextMenu”，赋值为“1”，这样在“开始”按钮上单击右键时就不会出现快捷菜单。<br><br> 汉化右键命令<br><br> 有时在一些程序中使用右键时，所弹出的右键菜单中一些命令用英文显示，如果英文不好就会“一头雾水”。其实，它们是可以汉化的。比如安装了网络蚂蚁后，当用户浏览网页时如果单击鼠标右键，会发现在菜单中多了“Download All by NetAnts”，感到它和其他的中文选项有点不谐调。汉化它的办法是：打开注册表编辑器，定位到“HKEY_CURRENT_USER＼Soft-ware＼Microsoft＼Internet Explorer＼MenuExt＼Download &amp;&amp;All by NetAnts”，再用鼠标右键单击“Download &amp;&amp;All by NetAnts”子键，在出现的快捷菜单中选择“重命名”，则“Download &amp;&amp;All by NetAnts”子键即变为可编辑状态，此时可将其修改为“全部由网络蚂蚁下载”，回车后，重新启动浏览器，汉化内容生效</p></blockquote><p>回复人： 13880079673(CMonkey) ( 二级(初级)) 信誉：100 2003-12-18 14:25:00 得分:0</p><blockquote><p>晕倒，回贴的看清楚楼主意思再说，不要再弄些没用的东西上来，是桌面右健，不是文件右健，老大些，动动脑子吧</p></blockquote><p>回复人： wswc3110(我是农民) ( 一级(初级)) 信誉：100 2003-12-18 15:07:00 得分:0</p><blockquote><p>修改注册表</p></blockquote><p>回复人： nyucv(思索者) ( 二级(初级)) 信誉：100 2003-12-19 12:52:00 得分:0</p><blockquote><p>谢谢楼上各位兄的解答！<br> 是呀！<code>***************我要修改的是桌面右键菜单。比如：在桌面右键菜单中忝加“我的程序员”。当用户在桌面点击右键------我的程序员时。就起动应用软件！*************</code><br> 什么目录，文件，我的电脑，一类的右键菜单我能搞定！桌面右键菜单搞不定！请帮助！</p></blockquote><p>回复人： nyucv(思索者) ( 二级(初级)) 信誉：100 2003-12-20 18:28:00 得分:0</p><blockquote><p>自已顶！问题还是没解决！：（<br></p></blockquote><p>回复人： kangzerun(野狼11) ( 一级(初级)) 信誉：96 2003-12-20 18:58:00 得分:0</p><blockquote><p>我顶</p></blockquote><p>回复人： zj492(恋云) ( 一级(初级)) 信誉：100 2003-12-20 19:51:00 得分:0</p><blockquote><p>顶</p></blockquote><p>回复人： snowflake310(猫猫) ( 二级(初级)) 信誉：100 2003-12-20 20:00:00 得分:0</p><blockquote><p>我顶</p></blockquote><p>回复人： wangj2001(乡村酒吧) ( 四级(中级)) 信誉：100 2003-12-20 21:32:00 得分:0</p><blockquote><p>演示怎样操作右键菜单，左面快捷方式，开始菜单<br></p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">namespace</span> <span class="token namespace">ShellLinks</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Link</span>
    <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// Check to see if a shortcut exists in a given directory with a specified file name</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DirectoryPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>The directory in which to look<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FullPathName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>The name of the shortcut (without the .lnk extension) or the full path to a file of the same name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span>Returns true if the link exists<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">Exists</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> DirectoryPath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> LinkPathName<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// Get some file and directory information</span>
            <span class="token class-name">DirectoryInfo</span> SpecialDir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DirectoryInfo</span><span class="token punctuation">(</span>DirectoryPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// First get the filename for the original file and create a new file</span>
            <span class="token comment">// name for a link in the Startup directory</span>
            <span class="token class-name">FileInfo</span> originalfile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileInfo</span><span class="token punctuation">(</span>LinkPathName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">string</span></span> NewFileName <span class="token operator">=</span> SpecialDir<span class="token punctuation">.</span>FullName <span class="token operator">+</span> <span class="token string">&quot;\\\\&quot;</span> <span class="token operator">+</span> originalfile<span class="token punctuation">.</span>Name <span class="token operator">+</span> <span class="token string">&quot;.lnk&quot;</span><span class="token punctuation">;</span>
            <span class="token class-name">FileInfo</span> linkfile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileInfo</span><span class="token punctuation">(</span>NewFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> linkfile<span class="token punctuation">.</span>Exists<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//Check to see if a shell link exists to the given path in the specified special folder</span>
        <span class="token comment">// return true if it exists</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">Exists</span><span class="token punctuation">(</span><span class="token class-name">Environment<span class="token punctuation">.</span>SpecialFolder</span> folder<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> LinkPathName<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Link<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span><span class="token function">GetFolderPath</span><span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">,</span> LinkPathName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// Update the specified folder by creating or deleting a Shell Link if necessary</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>folder<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>A SpecialFolder in which the link will reside<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TargetPathName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>The path name of the target file for the link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LinkPathName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>The file name for the link itself or, if a path name the directory information will be ignored.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Create<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>If true, create the link, otherwise delete it<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Update</span><span class="token punctuation">(</span><span class="token class-name">Environment<span class="token punctuation">.</span>SpecialFolder</span> folder<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> TargetPathName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> LinkPathName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> install<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// Get some file and directory information</span>
            Link<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span><span class="token function">GetFolderPath</span><span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">,</span> TargetPathName<span class="token punctuation">,</span> LinkPathName<span class="token punctuation">,</span> install<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// boolean variable &quot;install&quot; determines whether the link should be there or not.</span>
        <span class="token comment">// Update the folder by creating or deleting the link as required.</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// Update the specified folder by creating or deleting a Shell Link if necessary</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DirectoryPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>The full path of the directory in which the link will reside<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TargetPathName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>The path name of the target file for the link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LinkPathName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>The file name for the link itself or, if a path name the directory information will be ignored.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Create<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>If true, create the link, otherwise delete it<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Update</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> DirectoryPath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> TargetPathName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> LinkPathName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> Create<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// Get some file and directory information</span>
            <span class="token class-name">DirectoryInfo</span> SpecialDir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DirectoryInfo</span><span class="token punctuation">(</span>DirectoryPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// First get the filename for the original file and create a new file</span>
            <span class="token comment">// name for a link in the Startup directory</span>
            <span class="token comment">//</span>
            <span class="token class-name">FileInfo</span> OriginalFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileInfo</span><span class="token punctuation">(</span>LinkPathName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">string</span></span> NewFileName <span class="token operator">=</span> SpecialDir<span class="token punctuation">.</span>FullName <span class="token operator">+</span> <span class="token string">&quot;\\\\&quot;</span> <span class="token operator">+</span> OriginalFile<span class="token punctuation">.</span>Name <span class="token operator">+</span> <span class="token string">&quot;.lnk&quot;</span><span class="token punctuation">;</span>
            <span class="token class-name">FileInfo</span> LinkFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileInfo</span><span class="token punctuation">(</span>NewFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>Create<span class="token punctuation">)</span> <span class="token comment">// If the link doesn&#39;t exist, create it</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>LinkFile<span class="token punctuation">.</span>Exists<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// We&#39;re all done if it already exists</span>
                                             <span class="token comment">//Place a shortcut to the file in the special folder </span>
                <span class="token keyword">try</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">// Create a shortcut in the special folder for the file</span>
                    <span class="token comment">// Making use of the Windows Scripting Host</span>
                    <span class="token class-name">WshShell</span> shell <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">WshShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">IWshShortcut</span> link <span class="token operator">=</span> <span class="token punctuation">(</span>IWshShortcut<span class="token punctuation">)</span>shell<span class="token punctuation">.</span><span class="token function">CreateShortcut</span><span class="token punctuation">(</span>LinkFile<span class="token punctuation">.</span>FullName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    link<span class="token punctuation">.</span>TargetPath <span class="token operator">=</span> TargetPathName<span class="token punctuation">;</span>
                    link<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">catch</span>
                <span class="token punctuation">{</span>
                    MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to create link in special directory: &quot;</span> <span class="token operator">+</span> NewFileName<span class="token punctuation">,</span>
                        <span class="token string">&quot;Shell Link Error&quot;</span><span class="token punctuation">,</span> MessageBoxButtons<span class="token punctuation">.</span>OK<span class="token punctuation">,</span> MessageBoxIcon<span class="token punctuation">.</span>Error<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token comment">// otherwise delete it from the startup directory</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>LinkFile<span class="token punctuation">.</span>Exists<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// It doesn&#39;t exist so we are done!</span>
                <span class="token keyword">try</span>
                <span class="token punctuation">{</span>
                    LinkFile<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">catch</span>
                <span class="token punctuation">{</span>
                    MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;Error deleting link in special directory: &quot;</span> <span class="token operator">+</span> NewFileName<span class="token punctuation">,</span>
                        <span class="token string">&quot;Shell Link Error&quot;</span><span class="token punctuation">,</span> MessageBoxButtons<span class="token punctuation">.</span>OK<span class="token punctuation">,</span> MessageBoxIcon<span class="token punctuation">.</span>Error<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>回复人： wangj2001(乡村酒吧) ( 四级(中级)) 信誉：100 2003-12-20 21:33:00 得分:0</p><blockquote></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">ShellLinks</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// This is the shell links demonstration application</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainForm</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Form</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>IContainer</span> components<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Button</span> BtnExit<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">bool</span></span> Skip<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>CheckBox</span> chkRunOnStartup<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>CheckBox</span> chkSendToLink<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>CheckBox</span> chkQuickLaunch<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>CheckBox</span> chkDesktopLink<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> QuickLaunchDir<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">MainForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//</span>
            <span class="token comment">// Required for Windows Form Designer support</span>
            <span class="token comment">//</span>
            <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Set check buttons depending on whether shortcuts exist on the desktop and in the startup folder</span>
            Skip <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">// Don&#39;t run the CheckedChanged code</span>
            chkRunOnStartup<span class="token punctuation">.</span>Checked <span class="token operator">=</span> Link<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span>SpecialFolder<span class="token punctuation">.</span>Startup<span class="token punctuation">,</span> <span class="token string">&quot;Shell Link&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            chkDesktopLink<span class="token punctuation">.</span>Checked <span class="token operator">=</span> Link<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span>SpecialFolder<span class="token punctuation">.</span>DesktopDirectory<span class="token punctuation">,</span> <span class="token string">&quot;Shell Link&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            chkSendToLink<span class="token punctuation">.</span>Checked <span class="token operator">=</span> Link<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span>SpecialFolder<span class="token punctuation">.</span>SendTo<span class="token punctuation">,</span> <span class="token string">&quot;Shell Link&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            QuickLaunchDir <span class="token operator">=</span> Environment<span class="token punctuation">.</span><span class="token function">GetFolderPath</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span>SpecialFolder<span class="token punctuation">.</span>ApplicationData<span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot;\\\\Microsoft\\\\Internet Explorer\\\\Quick Launch&quot;</span><span class="token punctuation">;</span>
            chkQuickLaunch<span class="token punctuation">.</span>Checked <span class="token operator">=</span> Link<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>QuickLaunchDir<span class="token punctuation">,</span> <span class="token string">&quot;Shell Link&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Skip <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Application<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// Clean up any resources being used.</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">bool</span></span> disposing<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>disposing<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>components <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    components<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span>disposing<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token preprocessor property">#<span class="token directive keyword">region</span> Windows Form Designer generated code</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// Required method for Designer support - do not modify</span>
        <span class="token doc-comment comment">/// the contents of this method with the code editor.</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">System<span class="token punctuation">.</span>Resources<span class="token punctuation">.</span>ResourceManager</span> resources <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Resources<span class="token punctuation">.</span>ResourceManager</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">MainForm</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkDesktopLink <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>CheckBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkRunOnStartup <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>CheckBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkQuickLaunch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>CheckBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>BtnExit <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkSendToLink <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>CheckBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">SuspendLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// </span>
            <span class="token comment">// chkDesktopLink</span>
            <span class="token comment">// </span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkDesktopLink<span class="token punctuation">.</span>Checked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkDesktopLink<span class="token punctuation">.</span>CheckState <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>CheckState<span class="token punctuation">.</span>Checked<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkDesktopLink<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkDesktopLink<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;chkDesktopLink&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkDesktopLink<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">184</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkDesktopLink<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkDesktopLink<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;Put Shortcut on the Desktop&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkDesktopLink<span class="token punctuation">.</span>CheckedChanged <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>chkDesktopLink_CheckedChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// </span>
            <span class="token comment">// chkRunOnStartup</span>
            <span class="token comment">// </span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkRunOnStartup<span class="token punctuation">.</span>Checked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkRunOnStartup<span class="token punctuation">.</span>CheckState <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>CheckState<span class="token punctuation">.</span>Checked<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkRunOnStartup<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkRunOnStartup<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;chkRunOnStartup&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkRunOnStartup<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">176</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkRunOnStartup<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkRunOnStartup<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;Start Automatically at Login&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkRunOnStartup<span class="token punctuation">.</span>CheckedChanged <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>chkRunOnStartup_CheckedChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// </span>
            <span class="token comment">// chkQuickLaunch</span>
            <span class="token comment">// </span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkQuickLaunch<span class="token punctuation">.</span>Checked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkQuickLaunch<span class="token punctuation">.</span>CheckState <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>CheckState<span class="token punctuation">.</span>Checked<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkQuickLaunch<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkQuickLaunch<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;chkQuickLaunch&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkQuickLaunch<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">176</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkQuickLaunch<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkQuickLaunch<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;Show in Quick Launch Area&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkQuickLaunch<span class="token punctuation">.</span>CheckedChanged <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>chkQuickLaunch_CheckedChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// </span>
            <span class="token comment">// BtnExit</span>
            <span class="token comment">// </span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>BtnExit<span class="token punctuation">.</span>BackColor <span class="token operator">=</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>SystemColors<span class="token punctuation">.</span>Control<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>BtnExit<span class="token punctuation">.</span>Cursor <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Cursors<span class="token punctuation">.</span>Arrow<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>BtnExit<span class="token punctuation">.</span>DialogResult <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>DialogResult<span class="token punctuation">.</span>Abort<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>BtnExit<span class="token punctuation">.</span>Font <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Font</span><span class="token punctuation">(</span><span class="token string">&quot;Arial&quot;</span><span class="token punctuation">,</span> <span class="token number">8.25F</span><span class="token punctuation">,</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>FontStyle<span class="token punctuation">.</span>Regular<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>GraphicsUnit<span class="token punctuation">.</span>Point<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Byte<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>BtnExit<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">192</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>BtnExit<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;BtnExit&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>BtnExit<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>BtnExit<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>BtnExit<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;E&amp;xit&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>BtnExit<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>BtnExit_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// </span>
            <span class="token comment">// chkSendToLink</span>
            <span class="token comment">// </span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkSendToLink<span class="token punctuation">.</span>Checked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkSendToLink<span class="token punctuation">.</span>CheckState <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>CheckState<span class="token punctuation">.</span>Checked<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkSendToLink<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkSendToLink<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;chkSendToLink&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkSendToLink<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkSendToLink<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkSendToLink<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;Add to SendTo Menu&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>chkSendToLink<span class="token punctuation">.</span>CheckedChanged <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>chkSendToLink_CheckedChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// </span>
            <span class="token comment">// MainForm</span>
            <span class="token comment">// </span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>AccessibleRole <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AccessibleRole<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>AutoScaleBaseSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>CancelButton <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>BtnExit<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>CausesValidation <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>ClientSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">258</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">AddRange</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Control<span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span>
                                                                          <span class="token keyword">this</span><span class="token punctuation">.</span>chkSendToLink<span class="token punctuation">,</span>
                                                                          <span class="token keyword">this</span><span class="token punctuation">.</span>BtnExit<span class="token punctuation">,</span>
                                                                          <span class="token keyword">this</span><span class="token punctuation">.</span>chkDesktopLink<span class="token punctuation">,</span>
                                                                          <span class="token keyword">this</span><span class="token punctuation">.</span>chkRunOnStartup<span class="token punctuation">,</span>
                                                                          <span class="token keyword">this</span><span class="token punctuation">.</span>chkQuickLaunch<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>FormBorderStyle <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>FormBorderStyle<span class="token punctuation">.</span>FixedDialog<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>Icon <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Icon<span class="token punctuation">)</span><span class="token punctuation">(</span>resources<span class="token punctuation">.</span><span class="token function">GetObject</span><span class="token punctuation">(</span><span class="token string">&quot;$this.Icon&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>MaximizeBox <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>MinimizeBox <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;MainForm&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;Demonstrate Shell Links&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">ResumeLayout</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span>
        <span class="token preprocessor property">#<span class="token directive keyword">endregion</span></span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// The main entry point for the application.</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token punctuation">[</span>STAThread<span class="token punctuation">]</span>
        <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Application<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">MainForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">BtnExit_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">Exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// This method checks the startup directory to see if there is a link to the executable file</span>
        <span class="token doc-comment comment">/// it modifies the directory accordingly depending on the setting of the RunOnStartup checkbox </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">chkRunOnStartup_CheckedChanged</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>Skip<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
            Link<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span>SpecialFolder<span class="token punctuation">.</span>Startup<span class="token punctuation">,</span> Application<span class="token punctuation">.</span>ExecutablePath<span class="token punctuation">,</span> <span class="token string">&quot;Shell Link&quot;</span><span class="token punctuation">,</span> chkRunOnStartup<span class="token punctuation">.</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Update a link to the executable on the desktop depending on the setting of chkDesktopLink</span>
        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">chkDesktopLink_CheckedChanged</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>Skip<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
            Link<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span>SpecialFolder<span class="token punctuation">.</span>DesktopDirectory<span class="token punctuation">,</span> Application<span class="token punctuation">.</span>ExecutablePath<span class="token punctuation">,</span> <span class="token string">&quot;Shell Link&quot;</span><span class="token punctuation">,</span> chkDesktopLink<span class="token punctuation">.</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">chkSendToLink_CheckedChanged</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>Skip<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
            Link<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span>SpecialFolder<span class="token punctuation">.</span>SendTo<span class="token punctuation">,</span> Application<span class="token punctuation">.</span>ExecutablePath<span class="token punctuation">,</span> <span class="token string">&quot;Shell Link&quot;</span><span class="token punctuation">,</span> chkSendToLink<span class="token punctuation">.</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">chkQuickLaunch_CheckedChanged</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>Skip<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
            Link<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>QuickLaunchDir<span class="token punctuation">,</span> Application<span class="token punctuation">.</span>ExecutablePath<span class="token punctuation">,</span> <span class="token string">&quot;Shell Link&quot;</span><span class="token punctuation">,</span> chkQuickLaunch<span class="token punctuation">.</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><blockquote><p>需要源码，gangleader@126.com</p></blockquote><p>回复人： Vicky020923(我是大大大菜鸟) ( 一级(初级)) 信誉：100 2003-12-21 00:34:00 得分:0</p><blockquote><p>gz</p></blockquote><p>回复人： nyucv(思索者) ( 二级(初级)) 信誉：100 2003-12-21 17:32:00 得分:0</p><blockquote><p>TO：wangj2001(乡村酒吧)<br> 好的。谢谢！请给份源码参看一下！是不是我要的功能！：）邮件已发给你！</p></blockquote><p>回复人： wangj2001(乡村酒吧) ( 四级(中级)) 信誉：100 2003-12-22 09:10:00 得分:0</p><blockquote><p>源码在我家内机器上，我晚上下班回去给你发</p></blockquote><p>回复人： nyucv(思索者) ( 二级(初级)) 信誉：100 2003-12-28 13:09:00 得分:0</p><blockquote><p>楼上兄台：谢谢你的源码！不过好像桌面右键菜单中还是没有新增加菜单项呀！55555555555</p></blockquote>`,68),e=[o];function c(u,l){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","sysinfo22.html.vue"]]);export{i as default};
