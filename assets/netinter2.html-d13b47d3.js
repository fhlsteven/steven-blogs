import{_ as n,o as s,c as a,a as t}from"./app-a2b6e588.js";const p={},e=t(`<h1 id="用程序来代替iis打开asp-net" tabindex="-1"><a class="header-anchor" href="#用程序来代替iis打开asp-net" aria-hidden="true">#</a> 用程序来代替IIS打开ASP.NET</h1><p>这是一个用程序来直接执行ASP.NET页面，一般我们是用IE打开的，现在我们用.NET中提供的功能来打开一个ASP.NET文件.执行后产生HTML代码。</p><p>我用一个控制台程序！在开始必须引用System.Web.dll这个名称空间，</p><p>代码：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Web</span><span class="token punctuation">;</span>                          <span class="token comment">//Web引用</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Web<span class="token punctuation">.</span>Hosting</span><span class="token punctuation">;</span>
<span class="token comment">//System.Web.Hosting命名空间提供在 Microsoft Internet 信息服务 (IIS) 之外的托管应用程序中承载 ASP.NET 应用程序的功能。</span>
</code></pre></div><hr><p>首先创建一个HOST类,用于处理Web请求</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyExeHost</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MarshalByRefObject</span></span>   <span class="token comment">//继承MarshalByRefObject  类</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ProcessRequest</span><span class="token punctuation">(</span><span class="token class-name">String</span> page<span class="token punctuation">)</span>          <span class="token comment">//处理ASP.NET页面的请求</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;---------HTML CODE-----------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        HttpRuntime<span class="token punctuation">.</span><span class="token function">ProcessRequest</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SimpleWorkerRequest</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> Console<span class="token punctuation">.</span>Out<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/*ProcessRequest方法的参数是一个HttpWorkerRequest类的实例，但是在Web名称空间下的HttpWorkerRequest是必须被继承的一个类，但是在System.Web.Hosting名称空间下有个实现了HttpWorkerRequest的类，叫SimpleWorkerRequest，SimpleWorkerRequest类的构造函数有2个，我选择了第一个。*/</span>
</code></pre></div><hr><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span>                  <span class="token comment">//控制台程序</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">string</span></span> DocPath<span class="token punctuation">;</span>                    <span class="token comment">//存放一个ASP.NET页面的路径</span>
        <span class="token class-name">MyExeHost</span> Host<span class="token punctuation">;</span>                    <span class="token comment">//声明MyExeHost 类的一个变量</span>

        Host <span class="token operator">=</span> <span class="token punctuation">(</span>MyExeHost<span class="token punctuation">)</span>ApplicationHost<span class="token punctuation">.</span><span class="token function">CreateApplicationHost</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">MyExeHost</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/host&quot;</span><span class="token punctuation">,</span> Environment<span class="token punctuation">.</span>CurrentDirectory<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*ApplicationHost是System.Web.Hosting名称空间下的一个类，使得能够在Internet 信息服务 (IIS) 应用程序之外承载 ASP.NET 页。此类使宿主能够创建用于处理 ASP.NET 请求的应用程序域。CreateApplicationHost方法是：创建并配置用于承载 ASP.NET 的应用程序域。第一个参数是：创建一个用于请求ASP.NET的类也就是我们在之前创建的MyExeHost 类，第二个参数是：应用程序域的虚拟目录；例如/myapp，一般这个路径就代表引用程序的目录，第三个参数的意思是：应用程序域的物理目录，这个非常重要！设置不对就运行不起来，这个就是本应用程序的物理路径，在这个程序对ASP.NET处理时会调用这个路径下的 bin目录，里面的Web应用程序，也就是我们的 本程序 */</span>
        DocPath <span class="token operator">=</span> Console<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//读取你输入的一个ASP.Net页面，页面如果在本应用程序路径里就直接打文件名，否则打出全路径。</span>
        Host<span class="token punctuation">.</span><span class="token function">ProcessRequest</span><span class="token punctuation">(</span>DocPath<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//将页面传给ProcessRequest  处理 </span>

        Console<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>运行后显示执行ASP.NET页面后产生的HTML，你可以在加上IO下入文件用IE打开（哈哈，我就不写了）</p><p>注意的是：生成后在应用程序下必须在创建一个BIN目录，里面将本应用程序考到BIN目录下！在去运行生成的程序，一定要保证所运行的程序下有个BIN目录里面有本程序。</p><p>WINXP + SP1 + VS2003.NET 编译通过！</p><p>有不对的请指点</p>`,14),o=[e];function c(l,u){return s(),a("div",null,o)}const i=n(p,[["render",c],["__file","netinter2.html.vue"]]);export{i as default};
