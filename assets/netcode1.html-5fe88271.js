import{_ as n,o as s,c as a,a as t}from"./app-477de5b2.js";const p={},o=t(`<h1 id="用c-编写发手机中文短信息windows服务" tabindex="-1"><a class="header-anchor" href="#用c-编写发手机中文短信息windows服务" aria-hidden="true">#</a> 用C#编写发手机中文短信息Windows服务</h1><blockquote><p>林敏 未知 2002-05-26</p></blockquote><p>最近在电脑城上买了一根NOKIA3210的数据线，玩了几天改LOGO、改铃声后也将数据线扔在一边。直到前几天在<code>Http://oxygensoftware.com</code>上看到有发手机短信息的二次开发控件，才想起多日不用的数据线，而且最近在学C#，觉得用C#做个发短信息的程序也不错，经过多天的测试，终于实现用电脑+数据线+手机的模式，实现在单位的局域网平台上发送短信息了。</p><p>由于单位使用到发手机短信息的地方有很多，可能是从网页、可能是OUTLOOK中的窗体、也可能是某台非Windows操作系统的主机的某个系统，所以经过思考探讨，觉得最好的解决方案是采用Windows的“服务”，定时从一个目录中固定格式的文本文件中读取出相应的信息，发送出去。而其它客户端只需往该目录写入文本信息即可。思路定下来后就让我们开始吧！</p><p>先交待一下开发平台：Windows 2000 Advance Server操作系统、Visual Studio .Net 、Oxygen Sms ActiveX Control V2.3 (Share Ware)、 Nokia 3210手机通过数据线接在COM1上。</p><p>运行Visual Studio .Net，新建一个C#的项目，选择“Windows Server”类型的项目，命名为“SmsServer”。在Server1的设计画面，将“ServerName”命名为“SmsServer”。点击“视图设计器按钮”切换到设计画面，在“Windows Forms”工具箱中拖一时钟控件，命名为“SmsTimer”，在“Components”工具箱中拖一“EventLog”控件。命名为“eventLog1”。在“项目”菜单中点击“添加引用”，选择“COM”页，浏览到安装Oxygen Sms ActiveX Control V2.3程序的目录，找到SMSControl.ocx添加到“选定的组件”中。</p><p>将Server1.cs代码替换为</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>ComponentModel</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Diagnostics</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>ServiceProcess</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">SmsServer</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SmsServer</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">System<span class="token punctuation">.</span>ServiceProcess<span class="token punctuation">.</span>ServiceBase</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>Timers<span class="token punctuation">.</span>Timer</span> SmsTimer<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>Diagnostics<span class="token punctuation">.</span>EventLog</span> eventLog1<span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token class-name">O2SMSXControl<span class="token punctuation">.</span>O2SMSX</span> SmsX1<span class="token punctuation">;</span><span class="token comment">//定义手机短信对象 </span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// Required designer variable. </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>Container</span> components <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">SmsServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// This call is required by the Windows.Forms Component Designer. </span>
            <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// TODO: Add any initialization after the InitComponent call </span>
        <span class="token punctuation">}</span>

        <span class="token comment">// The main entry point for the process </span>
        <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">System<span class="token punctuation">.</span>ServiceProcess<span class="token punctuation">.</span>ServiceBase<span class="token punctuation">[</span><span class="token punctuation">]</span></span> ServicesToRun<span class="token punctuation">;</span>

            <span class="token comment">// More than one user Service may run within the same process. To add </span>
            <span class="token comment">// another service to this process, change the following line to </span>
            <span class="token comment">// create a second service object. For example, </span>
            <span class="token comment">// </span>
            <span class="token comment">// ServicesToRun = New System.ServiceProcess.ServiceBase[] {new Service1(), new MySecondUserService()}; </span>
            <span class="token comment">// </span>
            ServicesToRun <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>ServiceProcess<span class="token punctuation">.</span>ServiceBase<span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SmsServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

            System<span class="token punctuation">.</span>ServiceProcess<span class="token punctuation">.</span>ServiceBase<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>ServicesToRun<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// Required method for Designer support - do not modify </span>
        <span class="token doc-comment comment">/// the contents of this method with the code editor. </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>SmsTimer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Timers<span class="token punctuation">.</span>Timer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>eventLog1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Diagnostics<span class="token punctuation">.</span>EventLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>ISupportInitialize<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>SmsTimer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">BeginInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>ISupportInitialize<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>eventLog1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">BeginInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// </span>
            <span class="token comment">// SmsTimer </span>
            <span class="token comment">// </span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>SmsTimer<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>SmsTimer<span class="token punctuation">.</span>Elapsed <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Timers<span class="token punctuation">.</span>ElapsedEventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>SmsTimer_Elapsed<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// </span>
            <span class="token comment">// SmsServer </span>
            <span class="token comment">// </span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>ServiceName <span class="token operator">=</span> <span class="token string">&quot;SmsServer&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>ISupportInitialize<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>SmsTimer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">EndInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>ISupportInitialize<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>eventLog1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">EndInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// Clean up any resources being used. </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">bool</span></span> disposing<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>disposing<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>components <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    components<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span>disposing<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// Set things in motion so your service can do its work. </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// TODO: Add code here to start your service. </span>
            <span class="token comment">//开始服务时初始化手机. </span>
            SmsX1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">O2SMSXControl<span class="token punctuation">.</span>O2SMSXClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            SmsX1<span class="token punctuation">.</span>ConnectionMode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//联线类型cable </span>
            SmsX1<span class="token punctuation">.</span>ComNumber <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//联接端口为com 1 </span>
            SmsX1<span class="token punctuation">.</span>Model <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//手机类型3210 </span>
            SmsX1<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//联接手机 </span>
            SmsX1<span class="token punctuation">.</span><span class="token function">SetSMSCNumber</span><span class="token punctuation">(</span><span class="token string">&quot;+8613800754500&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//信息中心号码 </span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// Stop this service. </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnStop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// TODO: Add code here to perform any tear-down necessary to stop your service. </span>
            SmsX1<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SmsTimer_Elapsed</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>Timers<span class="token punctuation">.</span>ElapsedEventArgs</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//当f:\\sms\\data\\filetosend有文件时,先关闭时钟,将其发送出去,并删除掉文件再启动时钟 </span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>SmsTimer<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

            <span class="token comment">//目录对象 </span>
            <span class="token class-name">DirectoryInfo</span> cd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>DirectoryInfo</span><span class="token punctuation">(</span><span class="token string">&quot;F:\\\\Sms\\\\Data\\\\FileToSend&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//数据库记录变量 </span>
            <span class="token class-name"><span class="token keyword">string</span></span> rsId<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">string</span></span> rsPhoneNum<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">string</span></span> rsSmsText<span class="token punctuation">;</span>

            <span class="token class-name"><span class="token keyword">string</span></span> StrSql<span class="token punctuation">;</span>

            <span class="token comment">//首先,在当前目录中列举当前的所有SMS文件 </span>
            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">FileInfo</span> FileSend <span class="token keyword">in</span> cd<span class="token punctuation">.</span><span class="token function">GetFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">try</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">//依次打开每个文件读取文件内容 </span>
                    <span class="token class-name">FileStream</span> fs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileStream</span><span class="token punctuation">(</span>cd<span class="token punctuation">.</span>FullName <span class="token operator">+</span> <span class="token string">&quot;\\\\&quot;</span> <span class="token operator">+</span> FileSend<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> FileMode<span class="token punctuation">.</span>Open<span class="token punctuation">,</span> FileAccess<span class="token punctuation">.</span>Read<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">StreamReader</span> sr<span class="token punctuation">;</span>
                    sr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamReader</span><span class="token punctuation">(</span>fs<span class="token punctuation">,</span> UnicodeEncoding<span class="token punctuation">.</span><span class="token function">GetEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;GB2312&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    rsId <span class="token operator">=</span> FileSend<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    rsId <span class="token operator">=</span> rsId<span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span><span class="token string">&quot;.sms&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    rsId <span class="token operator">=</span> rsId<span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    rsPhoneNum <span class="token operator">=</span> sr<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    rsPhoneNum <span class="token operator">=</span> rsPhoneNum<span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>rsPhoneNum<span class="token punctuation">.</span>Length <span class="token operator">&gt;</span> <span class="token number">11</span><span class="token punctuation">)</span>
                        rsPhoneNum <span class="token operator">=</span> rsPhoneNum<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    rsSmsText <span class="token operator">=</span> sr<span class="token punctuation">.</span><span class="token function">ReadToEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    rsSmsText <span class="token operator">=</span> rsSmsText<span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>rsSmsText<span class="token punctuation">.</span>Length <span class="token operator">&gt;</span> <span class="token number">50</span><span class="token punctuation">)</span>
                        rsSmsText<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    fs<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    sr<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//发送短信息 </span>
                    SmsX1<span class="token punctuation">.</span><span class="token function">SendUnicodeSMSMessage</span><span class="token punctuation">(</span>rsPhoneNum<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rsSmsText<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//备份并删除文件 </span>
                    FileSend<span class="token punctuation">.</span><span class="token function">CopyTo</span><span class="token punctuation">(</span><span class="token string">&quot;F:\\\\Sms\\\\Data\\\\HadBeenSend\\\\&quot;</span> <span class="token operator">+</span> FileSend<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    FileSend<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>Exception</span> E<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">//出错写LOG文件 </span>
                    eventLog1<span class="token punctuation">.</span><span class="token function">WriteEntry</span><span class="token punctuation">(</span>E<span class="token punctuation">.</span>Message<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//重新启动时钟 </span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>SmsTimer<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>在 Server1.cs切换设计画面，在属性窗口下点击“Add Installer”，系统自动增加ProjectInstaller.cs文件，点击serviceInstaller1，设置“Server Name”设置为“SmsServer”，点击“serviceProcessInstaller1”，设置Account为“LocalSystem”。</p><p>选择菜单“生成”中的“生成SmsServer”，改正可能有的错误。进行DOS命令行，进行项目目录的\\bin\\debug目录下，执行“installutil SmsServer”，如果找不到installutil程序，就先Path一下。这时，在管理工具的“服务”下可以找到“SmsServer”服务了。启动该服务。这里默认源为目录F:\\Sms\\Data\\FileToSend，如果这个目录有.SMS文件，就读取其第一行为发送的手机号码，第二行到文本结束为短信息内容，然后发送短信息，再将文本备份到F:\\Sms\\Data\\HadBeenSend\\。</p><p>让我们再回头看一下Server1.cs中的代码。首先在命令空间要增加“using System.IO; using System.Text ; ”方便处理文件及文本对象，在命名类时</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SmsServer</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">System<span class="token punctuation">.</span>ServiceProcess<span class="token punctuation">.</span>ServiceBase</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>Timers<span class="token punctuation">.</span>Timer</span> SmsTimer<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>Diagnostics<span class="token punctuation">.</span>EventLog</span> eventLog1<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">O2SMSXControl<span class="token punctuation">.</span>O2SMSX</span> SmsX1<span class="token punctuation">;</span><span class="token comment">//定义手机短信对象 </span>
<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span>
</code></pre></div><p>引用Oxygen控件中的定义SmsX1对象，然后在启动服务时初始化手机对象</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code>    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// TODO: Add code here to start your service. </span>
        <span class="token comment">//开始服务时初始化手机. </span>
        SmsX1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">O2SMSXControl<span class="token punctuation">.</span>O2SMSXClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        SmsX1<span class="token punctuation">.</span>ConnectionMode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//联线类型cable </span>
        SmsX1<span class="token punctuation">.</span>ComNumber <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//联接端口为com 1 </span>
        SmsX1<span class="token punctuation">.</span>Model <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//手机类型3210 </span>
        SmsX1<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//联接手机 </span>
        SmsX1<span class="token punctuation">.</span><span class="token function">SetSMSCNumber</span><span class="token punctuation">(</span><span class="token string">&quot;+8613800754500&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//信息中心号码 </span>
    <span class="token punctuation">}</span>
</code></pre></div><p>其中要注意的是要初始化信息中心号码，如果不初始化，经常有发不去的情况。然后当时钟触发时要注意先将时钟关掉，再列举当前目录中的.SMS文件，逐一发送出去，再将时钟打开，同时在读文件时，要注意文件的编码 “sr=new StreamReader(fs,UnicodeEncoding.GetEncoding (&quot;GB2312&quot;));”采用GB2312编码读取才不会读出乱码出来，最后发送信息即可，“SmsX1.SendUnicodeSMSMessage (rsPhoneNum.ToString (),rsSmsText.ToString (),6,false,&quot;&quot;); ”其中各个参数的含义可以参照Oxygen的帮助。最后在服务停止时释放短信息对象“SmsX1.Close ();” 如果出错，则写出错服务LOG文件“eventLog1.WriteEntry (E.Message.ToString ());”这样，在Windows的“事件查看器”就可以看到出错的信息了。</p><p>但是这里有个小小的遗憾，通过OCX控件发出的短信息前面有一串该网站的英文，但是注册版不会有这串字，注册“只需”￥399就可以：（。但总的来说还是不错吧，如果有任何问题，欢迎大家一起讨论，我的邮箱是 linmin@wocall.com。</p>`,16),e=[o];function c(u,l){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","netcode1.html.vue"]]);export{i as default};
