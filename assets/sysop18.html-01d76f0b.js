import{_ as s,o as n,c as a,a as t}from"./app-f0851ed3.js";const p={},o=t(`<h1 id="用visual-c-来清空回收站" tabindex="-1"><a class="header-anchor" href="#用visual-c-来清空回收站" aria-hidden="true">#</a> 用Visual C#来清空回收站</h1><blockquote><p>作者： 阿虎 www.ASPCool.com 时间:2001-11-19 18:12:59 阅读次数:1643</p></blockquote><p>Visual C#作为下一代主流的程序开发语言，其语言功能的强大是众所周知的。并且又有一个内容十分丰富的程序开发包--.Net FrameWork SDK，作为他的后盾。这样就使得Visual C#有了一个充分发挥其本领的舞台。Visual C#的强大功能不仅表现在支持各类数据库的数据处理方面，还表现对网络编程和文件处理等方面。</p><p>视窗操作系统的回收站是对文件一种保护措施，他主要是作用是不言而喻的。在新的视窗2000系统之中，当我把文件删除到回收站中以后，按动&quot;清空回收站&quot;按钮，想清空回收站，此时往往提示&quot;某某文件夹不为空，无法删除&quot;的信息。所以只好全部恢复，然后到要删除的文件夹中，先删除里面的文件，后删除文件夹，这样才可以清空回收站。但这给我们操作系统带来了烦恼。本文就是利用Visual C#在处理文件方面的强大功能，来做一个软件，利用此软件来清空回收站里面的要删除的文件，从而解除这种烦恼。</p><h2 id="一-程序设计的主要思想" tabindex="-1"><a class="header-anchor" href="#一-程序设计的主要思想" aria-hidden="true">#</a> 一.程序设计的主要思想</h2><p>我们知道视窗系统是把我们将要删除的文件信息都临时保存在&quot;C:\\Recycled&quot;目录下面。在通过&quot;清空回收站&quot;按钮来彻底此目录下的要删除的文件的。本程序的主要思路就是根据以上知识得来的。具体说明如下：</p><p>（1）.首先判断C盘根目录下面的&quot;Recycled&quot;目录是否为空。<br> （2）.如果不为空的话，就遍历所有文件信息，并删除文件。</p><h2 id="二-程序设计和运行环境" tabindex="-1"><a class="header-anchor" href="#二-程序设计和运行环境" aria-hidden="true">#</a> 二.程序设计和运行环境</h2><p>（1）.视窗系统2000专业版本<br> （2）..Net FrameWork SDK Beta 2</p><h2 id="三-程序设计的主要步骤和具体解释" tabindex="-1"><a class="header-anchor" href="#三-程序设计的主要步骤和具体解释" aria-hidden="true">#</a> 三.程序设计的主要步骤和具体解释</h2><p>（1）.如何判断C盘根目录下面的&quot;Recycled&quot;目录是否为空。</p><p>要判断&quot;C:\\Recycled&quot;目录中是否有文件信息，要经过二个步骤，首先要确定找到此目录。其次才能够判断此目录是否为空。下面就按照这二个步骤来分别做具体介绍：</p><p>i&gt;.如何在程序中找到&quot;C:\\Recycled&quot;目录。</p><p>在.Net FrameWork SDK中封装了一个名称空间--System.IO。此名称空间中定义了许多与文件和目录处理相关的类、对象、属性和方法。Visual C#就是通过灵活调用这些资源来实现对文件和目录的具体操作的。本文中主要用到此名称空间中的二个类：Directory类和File类。前者在程序中主要用来处理和目录相关的操作的，如确定目录和获得目录中的文件信息。后者在程序中主要用来处理和文件相关的操作的，如删除文件。在程序中用到Directory类中的GetFiles(&quot;目录名称&quot;)方法，此方法的返回的是一个枚举型，此枚举型是由一组字符串组成。GetFiles()方法是把在目录中的每个文件名称都形成一个字符串，然后由这些字符串组成形成一个枚举类型。</p><p>ii&gt;.判断此目录是否为空。</p><p>在此要介绍一下foreach语句，Visual C#是通过此语句来收集枚举的。在本文中是通过他来列举出在&quot;C:\\Recycled&quot;存在的所有被删除的文件信息的。</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> c <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> <span class="token comment">// 定义此变量主要是来判断目录中是否有文件</span>
<span class="token keyword">foreach</span> <span class="token punctuation">(</span> <span class="token class-name"><span class="token keyword">string</span></span> s1 <span class="token keyword">in</span> Directory<span class="token punctuation">.</span>GetFiles <span class="token punctuation">(</span> <span class="token string">&quot;c:\\\\recycled&quot;</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token comment">// 返回文件名称字符串行时的枚举类型</span>
<span class="token punctuation">{</span>
    <span class="token operator">++</span>c <span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span> c <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token comment">//判断是否存在文件如果 c &gt; 0则回收站有文件，反之则没有</span>
<span class="token punctuation">{</span>
    …<span class="token range operator">..</span>
<span class="token punctuation">}</span>
</code></pre></div><p>（2）.如果&quot;C:\\Recycled&quot;目录中不为空的话，就遍历目录中的所有文件信息，并删除文件。</p><p>在本段落里面要介绍一下MessageBox类的用法。用过VB和Delphi的人一定知道在此类程序设计语言中，显示提示信息是一件多么容易的事情。但在Visual C#中，这类操作显然相对繁琐些，但在灵活程度有了一定的提高。在Visual C#中，System.Windows.Forms名称空间中封装了一个MessageBox的类，在此类中又定义了与显示提示信息相关的一些方法（Show方法）、对象和属性。在本程序中就有关于MessageBox类的具体介绍。</p><p>要删除磁盘上的文件就要使用到名称空间System.IO中File类的Delete()方法。Delete()方法后面跟的参数是文件所在磁盘的全路径名称。要获得文件的全路径名称，就还要使用到foreach语句，程序中就是foreach语句来从一个包含所有文件全路径名称的枚举类型中获得文件的全路径名称的。具体实现语句如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// 判断&quot;C:\\Recycled&quot;目录中是否存在文件信息</span>
<span class="token punctuation">{</span>
    <span class="token class-name">DialogResult</span> r <span class="token operator">=</span> MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;是否确定？&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;垃圾处理！&quot;</span><span class="token punctuation">,</span> MessageBoxButtons<span class="token punctuation">.</span>YesNo<span class="token punctuation">,</span> MessageBoxIcon<span class="token punctuation">.</span>Question<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 显示&quot;确定&quot;和&quot;取消&quot;二个按钮，图标显示是一个问号。 </span>
    <span class="token class-name"><span class="token keyword">int</span></span> ss <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>r<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ss <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">// 按动确定按钮 </span>
  　<span class="token punctuation">{</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> s <span class="token keyword">in</span> Directory<span class="token punctuation">.</span><span class="token function">GetFiles</span><span class="token punctuation">(</span><span class="token string">&quot;c:\\\\recycled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">// 把全路径名称房子 s中</span>
        <span class="token punctuation">{</span>
            File<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//删除此文件</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="四-程序的源代码-recycled-cs-、编译方法及运行后的界面" tabindex="-1"><a class="header-anchor" href="#四-程序的源代码-recycled-cs-、编译方法及运行后的界面" aria-hidden="true">#</a> 四.程序的源代码（recycled.cs）、编译方法及运行后的界面</h2><p>（1）.程序的源代码：recycled.cs：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span> <span class="token comment">//导入程序中用到的名称空间</span>
<span class="token keyword">class</span> <span class="token class-name">Recycle</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">int</span></span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 定义此变量主要是来判断目录中是否有文件 </span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> s1 <span class="token keyword">in</span> Directory<span class="token punctuation">.</span><span class="token function">GetFiles</span><span class="token punctuation">(</span><span class="token string">&quot;c:\\\\recycled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 返回文件名称字符串行时的枚举类型 </span>
        <span class="token punctuation">{</span>
            <span class="token operator">++</span>c<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">//判断是否存在文件如果 c &gt; 0则回收站有文件，反之则没有 </span>
        <span class="token punctuation">{</span>
            <span class="token class-name">DialogResult</span> r <span class="token operator">=</span> MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;是否确定？&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;垃圾处理！&quot;</span><span class="token punctuation">,</span>
            MessageBoxButtons<span class="token punctuation">.</span>YesNo<span class="token punctuation">,</span> MessageBoxIcon<span class="token punctuation">.</span>Question<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 显示&quot;确定&quot;和&quot;取消&quot;二个按钮，图标显示是一个问号。 </span>
            <span class="token class-name"><span class="token keyword">int</span></span> ss <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>r<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ss <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">// 按动确定按钮 </span>
            <span class="token punctuation">{</span>
                <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> s <span class="token keyword">in</span> Directory<span class="token punctuation">.</span><span class="token function">GetFiles</span><span class="token punctuation">(</span><span class="token string">&quot;c:\\\\recycled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// 把全路径名称房子 s中 </span>
                <span class="token punctuation">{</span>
                    File<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//删除此文件 </span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>（2）.编译方法：</p><p>在经过如下命令行进行编译后，就形成了一个Windows 的执行文件--recycled.exe。</p><p><code>csc /t:winexe /r:system.dll /r:system.windows.forms.dll recycled.cs</code></p><p>执行此文件就会得到以下的执行界面：</p><p>图01：程序执行界面</p><h2 id="五-总结" tabindex="-1"><a class="header-anchor" href="#五-总结" aria-hidden="true">#</a> 五.总结</h2><p>本文是通过一个软件的制做过程来具体说明Visual C#在文件处理方面的强大功能，其实上面所表述的只是Visual C#在文件处理方面的一个小的应用。不仅如此，Visual C#在其他方面也具有很强大的功能。有了.Net FrameWork SDK的这个强有力的后盾，Visual C#使得以前程序中困难处理的问题变得相对简单了，使得原来不可能处理的问题变得可能了，这才是为什么Visual C#成为下一代主流编程语言的原因。</p>`,31),e=[o];function c(u,l){return n(),a("div",null,e)}const i=s(p,[["render",c],["__file","sysop18.html.vue"]]);export{i as default};
