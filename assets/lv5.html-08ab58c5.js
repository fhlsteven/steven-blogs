import{_ as n,o as s,c as a,a as t}from"./app-f0851ed3.js";const p={},o=t(`<h1 id="在visual-c-中用listview显示数据记录" tabindex="-1"><a class="header-anchor" href="#在visual-c-中用listview显示数据记录" aria-hidden="true">#</a> 在Visual C#中用ListView显示数据记录</h1><p>如果要你在程序中显示数据库中的数据记录，你首先想用的显示工具肯定是DataGrid。当然用DataGrid显示数据记录是一种既常用又简单的方法。但是在程序控制方面，它却无法那么随心所欲。本文就是介绍另外一种显示数据记录的方法--用ListView来显示数据记录，由于他是手动加入记录，虽然在程序设计中稍微烦琐了些，但对于那些在特殊的显示要求，却往往能够满足要求。</p><p>在.Net FrameWork SDK中定义了许多组件，Visual C#就是通过获得这些组件的实例来丰富自己的界面的。列表（ListView）是程序设计中一个常用的组件，由于其自身的特点，往往被使用显示比较庞大的数据信息。本文就是利用他的这个特点来看看它如何来显示数据记录。</p><h2 id="一-程序设计和运行的环境" tabindex="-1"><a class="header-anchor" href="#一-程序设计和运行的环境" aria-hidden="true">#</a> 一． 程序设计和运行的环境</h2><p>（1）.微软视窗2000专业版本<br> （2）..Net FrameWork SDK Beta 2<br> （3）.Microsoft Data Acess Component 2.6 (MDAC2.6)</p><h2 id="二-程序设计的具体思路" tabindex="-1"><a class="header-anchor" href="#二-程序设计的具体思路" aria-hidden="true">#</a> 二． 程序设计的具体思路</h2><p>（1）.首先要建立数据连接，打开数据集<br> （2）.对列表进行初始化，并使得列表的显示条件符合数据记录的条件<br> （3）.对数据集中的数据记录进行遍历，在遍历中添加记录到列表中<br> （4）.关闭数据集，关闭数据连接</p><h2 id="三-具体的实现步骤" tabindex="-1"><a class="header-anchor" href="#三-具体的实现步骤" aria-hidden="true">#</a> 三． 具体的实现步骤</h2><p>（1）.首先要建立数据连接，打开数据集</p><p>对于如何建立数据连接和获得数据集的内容可以参考本站的一篇文章--《在Visual C#中访问不同的数据库》，在此文中对此类问题有比较详细的介绍，本文就不多叙述，具体实现语句如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 定义数据连接的字符串，程序中使用的是Acess 2000数据库</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">string</span></span> strConnect <span class="token operator">=</span> <span class="token string">&quot;Provider = Microsoft.Jet.OLEDB.4.0 ; Data Source = &quot;</span> <span class="token operator">+</span> Application<span class="token punctuation">.</span>StartupPath <span class="token operator">+</span> <span class="token string">&quot;\\\\MY.MDB&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token class-name">OleDbConnection</span> conConnection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OleDbConnection</span><span class="token punctuation">(</span>strConnect<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">OleDbDataReader</span> reader<span class="token punctuation">;</span>

<span class="token comment">// 获得Person里面的所以数据记录</span>
<span class="token class-name"><span class="token keyword">string</span></span> strCommand <span class="token operator">=</span> <span class="token string">&quot;SELECT * FROM Persons&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>conConnection<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 打开数据连接</span>
<span class="token class-name">OleDbCommand</span> cmd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OleDbCommand</span><span class="token punctuation">(</span>strCommand<span class="token punctuation">,</span> conConnection<span class="token punctuation">)</span><span class="token punctuation">;</span>
reader <span class="token operator">=</span> cmd<span class="token punctuation">.</span><span class="token function">ExecuteReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> file<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>获得数据集
</code></pre></div><p>（2）.对列表进行初始化，并使得列表的显示条件符合数据记录的条件。需要说明的是在下面源代码中，lv是在Class中定义的一个ListView的一个实例</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 初始化ListView</span>
lv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lv<span class="token punctuation">.</span>Left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
lv<span class="token punctuation">.</span>Top <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
lv<span class="token punctuation">.</span>Width <span class="token operator">=</span> <span class="token number">700</span><span class="token punctuation">;</span>
lv<span class="token punctuation">.</span>Height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ClientRectangle<span class="token punctuation">.</span>Height<span class="token punctuation">;</span>
lv<span class="token punctuation">.</span>GridLines <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> file<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>显示各个记录的分隔线
lv<span class="token punctuation">.</span>FullRowSelect <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> file<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>要选择就是一行
lv<span class="token punctuation">.</span>View <span class="token operator">=</span> View<span class="token punctuation">.</span>Details<span class="token punctuation">;</span> file<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>定义列表显示的方式
lv<span class="token punctuation">.</span>Scrollable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> file<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>需要时候显示滚动条
lv<span class="token punctuation">.</span>MultiSelect <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 不可以多行选择</span>
lv<span class="token punctuation">.</span>HeaderStyle <span class="token operator">=</span> ColumnHeaderStyle<span class="token punctuation">.</span>Nonclickable<span class="token punctuation">;</span>
<span class="token comment">// 针对数据库的字段名称，建立与之适应显示表头</span>
lv<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;姓名&quot;</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>Right<span class="token punctuation">)</span><span class="token punctuation">;</span>
lv<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;住宅电话&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">;</span>
lv<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;办公电话&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">;</span>
lv<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;移动电话&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">;</span>
lv<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;居住地点&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">;</span>
lv<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;工作单位&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">;</span>
lv<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;电子邮件&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">;</span>
lv<span class="token punctuation">.</span>Visible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</code></pre></div><p>（3）.对数据集中的数据记录进行遍历，在遍历中添加记录到列表中。</p><p>可以利用数据集中的Read()方法，来实现对数据记录的遍历，Read()方法是首先指向首数据记录，并判断从此记录是否为尾记录，如果不是则返回false，如果是则返回true。并且如果不是尾记录则自动把数据指针移到下一条记录上，然后在判断此记录是否是尾记录，如此循环，直至到尾记录为止。根据此可设计以下代码：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">while</span> <span class="token punctuation">(</span>reader<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">ListViewItem</span> li <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListViewItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    li<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    li<span class="token punctuation">.</span>SubItems<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> reader<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    li<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>reader<span class="token punctuation">[</span><span class="token string">&quot;HomePhone&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    li<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>reader<span class="token punctuation">[</span><span class="token string">&quot;WorkPhone&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    li<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>reader<span class="token punctuation">[</span><span class="token string">&quot;MobilePhone&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    li<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>reader<span class="token punctuation">[</span><span class="token string">&quot;City&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    li<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>reader<span class="token punctuation">[</span><span class="token string">&quot;Address&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    li<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>reader<span class="token punctuation">[</span><span class="token string">&quot;Email&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    lv<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>（4）. 关闭数据集，关闭数据连接。</p><p>关闭数据集和关闭数据连接是很容易的，只要调用这二个对象的Close()方法即可，也只要调用在程序中具体如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code>reader<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> file<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>关闭数据集
<span class="token keyword">this</span><span class="token punctuation">.</span>conConnection<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 关闭数据连接</span>
</code></pre></div><h2 id="四-程序运行结果界面和程序源代码-list-cs" tabindex="-1"><a class="header-anchor" href="#四-程序运行结果界面和程序源代码-list-cs" aria-hidden="true">#</a> 四． 程序运行结果界面和程序源代码（list.cs）</h2><p>程序源代码：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>OleDb</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">MainForm</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Form</span></span>
<span class="token punctuation">{</span> 
    <span class="token comment">// 定义数据连接的字符串</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">string</span></span> strConnect <span class="token operator">=</span> <span class="token string">&quot;Provider = Microsoft.Jet.OLEDB.4.0 ; Data Source = &quot;</span> <span class="token operator">+</span>
        Application<span class="token punctuation">.</span>StartupPath <span class="token operator">+</span> <span class="token string">&quot;\\\\MY.MDB&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">OleDbConnection</span> conConnection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OleDbConnection</span><span class="token punctuation">(</span>strConnect<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ListView</span> lv<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">MainForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 初始化Form</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Top <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;在ListView中显示数据库内容!&quot;</span><span class="token punctuation">;</span>

        <span class="token comment">// 初始化ListView</span>
        lv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lv<span class="token punctuation">.</span>Left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        lv<span class="token punctuation">.</span>Top <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        lv<span class="token punctuation">.</span>Width <span class="token operator">=</span> <span class="token number">700</span><span class="token punctuation">;</span>
        lv<span class="token punctuation">.</span>Height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ClientRectangle<span class="token punctuation">.</span>Height<span class="token punctuation">;</span>
        lv<span class="token punctuation">.</span>GridLines <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> file<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>显示各个记录的分隔线
        lv<span class="token punctuation">.</span>FullRowSelect <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> file<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>要选择就是一行
        lv<span class="token punctuation">.</span>View <span class="token operator">=</span> View<span class="token punctuation">.</span>Details<span class="token punctuation">;</span> file<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>定义列表显示的方式
        lv<span class="token punctuation">.</span>Scrollable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> file<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>需要时候显示滚动条
        lv<span class="token punctuation">.</span>MultiSelect <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 不可以多行选择</span>
        lv<span class="token punctuation">.</span>HeaderStyle <span class="token operator">=</span> ColumnHeaderStyle<span class="token punctuation">.</span>Nonclickable<span class="token punctuation">;</span>
        <span class="token comment">// 针对数据库的字段名称，建立与之适应显示表头</span>
        lv<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;姓名&quot;</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>Right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lv<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;住宅电话&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lv<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;办公电话&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lv<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;移动电话&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lv<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;居住地点&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lv<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;工作单位&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lv<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;电子邮件&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lv<span class="token punctuation">.</span>Visible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

        <span class="token class-name">OleDbDataReader</span> reader<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> strCommand <span class="token operator">=</span> <span class="token string">&quot;SELECT * FROM Persons&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>conConnection<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 打开数据连接</span>
        <span class="token class-name">OleDbCommand</span> cmd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OleDbCommand</span><span class="token punctuation">(</span>strCommand<span class="token punctuation">,</span> conConnection<span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader <span class="token operator">=</span> cmd<span class="token punctuation">.</span><span class="token function">ExecuteReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获得数据集</span>

        <span class="token comment">// 不断往列表中添加数据记录</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>reader<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">ListViewItem</span> li <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListViewItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            li<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            li<span class="token punctuation">.</span>SubItems<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> reader<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            li<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>reader<span class="token punctuation">[</span><span class="token string">&quot;HomePhone&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            li<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>reader<span class="token punctuation">[</span><span class="token string">&quot;WorkPhone&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            li<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>reader<span class="token punctuation">[</span><span class="token string">&quot;MobilePhone&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            li<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>reader<span class="token punctuation">[</span><span class="token string">&quot;City&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            li<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>reader<span class="token punctuation">[</span><span class="token string">&quot;Address&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            li<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>reader<span class="token punctuation">[</span><span class="token string">&quot;Email&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            lv<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        reader<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 关闭数据集</span>
        <span class="token comment">// 在Form中添加此列表</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>lv<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 关闭Form的时候，同时也关闭数据连接</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Closed <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">EventHandler</span><span class="token punctuation">(</span>this_Closed<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">this_Closed</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> eArgs<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>conConnection<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> file<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>关闭数据连接
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Application<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">MainForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>在成功编译了上面源程序代码以后，在同一目录下建立一个Acess 2000的数据库，命名为MY.MDB，然后在其中建立一张数据表，字段如下：name，HomePhone，WorkPhone，MobilePhone，City，Address，Email。此时运行编译后的程序就可以得到如下运行界面：</p><p>图01：用ListView显示数据记录</p><h2 id="五-对于其他数据库如何处理" tabindex="-1"><a class="header-anchor" href="#五-对于其他数据库如何处理" aria-hidden="true">#</a> 五． 对于其他数据库如何处理</h2><p>对于其他数据库也需要用ListView来显示数据记录，和上面的一个主要区别在于建立不同的数据字符串，下面就以SQL Server 7.0为例来简要说明：</p><p>如果访问的数据库是SQL Server 7.0，只需要把上面源代码中的一条语句：</p><p><code>private static string strConnect = &quot;Provider=Microsoft.Jet.OLEDB.4.0;Data Source=&quot; + Application.StartupPath + &quot;\\\\MY.MDB&quot;;</code></p><p>改变成：</p><p><code>private static string strConnect = &quot;Provider=SQLOLEDB.1; Persist Security Info=False;User ID=sa;Initial Catalog=数据库名称;Data Source=服务器名称&quot;;</code></p><p>即可。</p><h2 id="六-总结" tabindex="-1"><a class="header-anchor" href="#六-总结" aria-hidden="true">#</a> 六． 总结</h2><p>本文试图用另外一种方法来显示数据记录，虽然在使用的时候比起正常的方法要烦琐些，但有更高的灵活度，并且也使得我们对于ListView组件的具体使用有了具体的和更高的认识。</p>`,33),c=[o];function e(u,l){return s(),a("div",null,c)}const k=n(p,[["render",e],["__file","lv5.html.vue"]]);export{k as default};
