import{_ as n,o as s,c as a,a as p}from"./app-a2b6e588.js";const t={},o=p(`<h1 id="c-下如何实现关机和重新启动" tabindex="-1"><a class="header-anchor" href="#c-下如何实现关机和重新启动" aria-hidden="true">#</a> C#下如何实现关机和重新启动</h1><div class="language-txt" data-ext="txt"><pre class="language-txt"><code>主　　题：  C#下如何实现关机和重新启动？
作　　者：  morijj (北极光)
等　　级：  ^
信 誉 值：  100
所属论坛：  .NET技术 C#
问题点数：  50
回复次数：  15
发表时间：  2003-09-23 15:31:50
</code></pre></div><p>如题，最好给几行代码看看！</p><hr><hr><p>回复人： <em>weiKun</em>(Virus) ( 五级(中级)) 信誉：100 2003-09-23 15:49:00 得分:0</p><blockquote></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button1_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//定义连接远程计算机的一些选项</span>
    <span class="token class-name">ConnectionOptions</span> options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConnectionOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>Username <span class="token operator">=</span> textBox2<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>Password <span class="token operator">=</span> textBox3<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
    <span class="token class-name">ManagementScope</span> scope <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ManagementScope</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\\\\\&quot;</span> <span class="token operator">+</span> textBox1<span class="token punctuation">.</span>Text <span class="token operator">+</span> <span class="token string">&quot;\\\\root\\\\cimv2&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//用给定管理者用户名和口令连接远程的计算机</span>
        scope<span class="token punctuation">.</span><span class="token function">Connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>ObjectQuery</span> oq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>ObjectQuery</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM Win32_OperatingSystem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ManagementObjectSearcher</span> query1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ManagementObjectSearcher</span><span class="token punctuation">(</span>scope<span class="token punctuation">,</span> oq<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//得到WMI控制</span>
        <span class="token class-name">ManagementObjectCollection</span> queryCollection1 <span class="token operator">=</span> query1<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">ManagementObject</span> mo <span class="token keyword">in</span> queryCollection1<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> ss <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token comment">//重启远程计算机</span>
            mo<span class="token punctuation">.</span><span class="token function">InvokeMethod</span><span class="token punctuation">(</span><span class="token string">&quot;Reboot&quot;</span><span class="token punctuation">,</span> ss<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//报错</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ee<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;连接&quot;</span> <span class="token operator">+</span> textBox1<span class="token punctuation">.</span>Text <span class="token operator">+</span> <span class="token string">&quot;出错，出错信息为：&quot;</span> <span class="token operator">+</span> ee<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>回复人： acewang(<strong>^o^</strong>) ( 一星(中级)) 信誉：100 2003-09-23 15:54:00 得分:0</p><blockquote></blockquote><div class="language-vb" data-ext="vb"><pre class="language-vb"><code><span class="token keyword">Dim</span> ExplorerProcess<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> Process
ExplorerProcess <span class="token operator">=</span> Process<span class="token punctuation">.</span>GetProcessesByName<span class="token punctuation">(</span><span class="token string">&quot;explorer&quot;</span><span class="token punctuation">)</span>
ExplorerProcess<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>CloseMainWindow<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>回复人： morijj(北极光) ( 一级(初级)) 信誉：100 2003-09-23 16:34:00 得分:0</p><blockquote><p>我是想在本地实现关机和重新启动，另外，小弟我对 VB 可是不太了解啊，VB 的Dim 代码往C#里怎莫插啊 😃</p></blockquote><p>回复人： litp(litp) ( 一级(初级)) 信誉：100 2003-09-23 16:39:00 得分:0</p><blockquote><p>1.using System.Runtime.InteropServices;<br></p></blockquote><ol start="2"><li></li></ol><blockquote></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> <span class="token function">ExitWindowsEx</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">long</span></span> uFlags<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">long</span></span> dwReserved<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;shell32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> <span class="token function">ShellAbout</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">long</span></span> uFlags<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">long</span></span> dwReserved<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">long</span></span> dwReserved<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> LOGOFF <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> SHUTDOWN <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> REBOOT <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

sh <span class="token operator">=</span> <span class="token function">ExitWindowsEx</span><span class="token punctuation">(</span>REBOOT<span class="token punctuation">,</span> dwReserved<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//重启</span>
sh <span class="token operator">=</span> <span class="token function">ExitWindowsEx</span><span class="token punctuation">(</span>LOGOFF<span class="token punctuation">,</span> dwReserved<span class="token punctuation">)</span> <span class="token comment">//注销</span>
h <span class="token operator">=</span> <span class="token function">ExitWindowsEx</span><span class="token punctuation">(</span>SHUTDOWN<span class="token punctuation">,</span> dwReserved<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//关机</span>
</code></pre></div><p>回复人： zhouzhouzhou(人生程序) ( 三级(初级)) 信誉：100 2003-09-23 18:06:00 得分:0</p><blockquote><p>我有一個WMI的，<br> 不過本地計算機實現不了</p></blockquote><p>回复人： morijj(北极光) ( 一级(初级)) 信誉：100 2003-09-23 19:45:00 得分:0</p><blockquote><p>如litp兄所述，小弟我引用了ExitWindowsEx 执行后看返回值为1.xxxxxx 按理说返回值非0说明函数执行成功了，可是我的windows一点也没有关机的意思，程序也没有出现任何异常。真是奇怪！！</p></blockquote><p>回复人： xzgtysx(海带) ( 二级(初级)) 信誉：100 2003-09-23 20:43:00 得分:0</p><blockquote><p>是否安装.net framework呢？</p></blockquote><p>回复人： kuangren(今天逃课~) ( 三级(初级)) 信誉：100 2003-09-23 21:36:00 得分:0</p><blockquote><p>本地重新启动要调用winapi，上面 litp(litp) 已经说了！</p></blockquote><p>回复人： jeng(第四只手) ( 二级(初级)) 信誉：98 2003-09-23 22:08:00 得分:0</p><blockquote><p>我来试一试</p></blockquote><p>回复人： cnhgj(戏子.Com？俺真TMD够菜) ( 一星(中级)) 信誉：100 2003-09-23 22:56:00 得分:0</p><blockquote><p><code>http://www.ccw.com.cn/htm/center/prog/02_10_9_6.asp</code></p></blockquote><p>回复人： morijj(北极光) ( 一级(初级)) 信誉：100 2003-09-24 03:52:00 得分:0</p><blockquote><p>才搞明白，以上几位的代码只能在95，98下用，NT XP 不行！</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-09-24 06:24:00 得分:0</p><blockquote><p>过去我在vb 上做过，在NT 下必须先取得系统操作权限，没空改要是不会发消息给我帮你改成C#：</p></blockquote><div class="language-vb" data-ext="vb"><pre class="language-vb"><code><span class="token keyword">Option</span> Explicit

<span class="token keyword">Private</span> <span class="token keyword">Declare</span> <span class="token keyword">Function</span> ExitWindowsEx <span class="token keyword">Lib</span> <span class="token string">&quot;user32&quot;</span> <span class="token punctuation">(</span><span class="token keyword">ByVal</span> uFlags <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> <span class="token keyword">ByVal</span> dwReserved <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Long</span>
<span class="token keyword">Private</span> <span class="token keyword">Declare</span> <span class="token keyword">Function</span> AdjustTokenPrivileges <span class="token keyword">Lib</span> <span class="token string">&quot;advapi32.dll&quot;</span> <span class="token punctuation">(</span><span class="token keyword">ByVal</span> TokenHandle <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> <span class="token keyword">ByVal</span> DisableAllPrivileges <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> NewState <span class="token keyword">As</span> TOKEN_PRIVILEGES<span class="token punctuation">,</span> <span class="token keyword">ByVal</span> BufferLength <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> PreviousState <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> ReturnLength <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Long</span>
<span class="token keyword">Private</span> <span class="token keyword">Declare</span> <span class="token keyword">Function</span> GetTokenInformation <span class="token keyword">Lib</span> <span class="token string">&quot;advapi32.dll&quot;</span> <span class="token punctuation">(</span><span class="token keyword">ByVal</span> TokenHandle <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> <span class="token keyword">ByVal</span> TokenInformationClass <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> TokenInformation <span class="token keyword">As</span> Any<span class="token punctuation">,</span> <span class="token keyword">ByVal</span> TokenInformationLength <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> ReturnLength <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Long</span>
<span class="token keyword">Private</span> <span class="token keyword">Declare</span> <span class="token keyword">Function</span> LookupPrivilegeValue <span class="token keyword">Lib</span> <span class="token string">&quot;advapi32.dll&quot;</span> <span class="token keyword">Alias</span> <span class="token string">&quot;LookupPrivilegeValueA&quot;</span> <span class="token punctuation">(</span><span class="token keyword">ByVal</span> lpSystemName <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> <span class="token keyword">ByVal</span> lpName <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> <span class="token keyword">ByRef</span> lpLuid <span class="token keyword">As</span> LARGE_INTEGER<span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Long</span>
<span class="token keyword">Private</span> <span class="token keyword">Declare</span> <span class="token keyword">Function</span> OpenProcessToken <span class="token keyword">Lib</span> <span class="token string">&quot;advapi32.dll&quot;</span> <span class="token punctuation">(</span><span class="token keyword">ByVal</span> ProcessHandle <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> <span class="token keyword">ByVal</span> DesiredAccess <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> TokenHandle <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Long</span>
<span class="token keyword">Private</span> <span class="token keyword">Declare</span> <span class="token keyword">Function</span> GetCurrentProcessId <span class="token keyword">Lib</span> <span class="token string">&quot;kernel32&quot;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Long</span>
<span class="token keyword">Private</span> <span class="token keyword">Declare</span> <span class="token keyword">Function</span> GetCurrentProcess <span class="token keyword">Lib</span> <span class="token string">&quot;kernel32&quot;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Long</span>
<span class="token keyword">Private</span> <span class="token keyword">Declare</span> <span class="token keyword">Function</span> OpenProcess <span class="token keyword">Lib</span> <span class="token string">&quot;kernel32&quot;</span> <span class="token punctuation">(</span><span class="token keyword">ByVal</span> dwDesiredAccess <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> <span class="token keyword">ByVal</span> bInheritHandle <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> <span class="token keyword">ByVal</span> dwProcessId <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Long</span>
<span class="token keyword">Private</span> <span class="token keyword">Declare</span> <span class="token keyword">Function</span> CloseHandle <span class="token keyword">Lib</span> <span class="token string">&quot;kernel32&quot;</span> <span class="token punctuation">(</span><span class="token keyword">ByVal</span> hObject <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Long</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> EWX_LOGOFF <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">&#39;注销当前用户</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> EWX_POWEROFF <span class="token operator">=</span> <span class="token number">8</span> <span class="token comment">&#39;关闭系统并关闭电源</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> EWX_SHUTDOWN <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">&#39;关闭系统使之能安全关闭电源</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> EWX_REBOOT <span class="token operator">=</span> <span class="token number">2</span> <span class="token comment">&#39;关闭系统并重启</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> EWX_FORCE <span class="token operator">=</span> <span class="token number">4</span> <span class="token comment">&#39;应用程序强制关闭</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> EWX_FORCEIFHUNG <span class="token operator">=</span> <span class="token number">16</span> <span class="token comment">&#39;如果应用程序已挂起，强制关闭</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> SE_PRIVILEGE_ENABLED <span class="token operator">=</span> <span class="token number">&amp;H2</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> SE_PRIVILEGE_ENABLED_BY_DEFAULT <span class="token operator">=</span> <span class="token number">&amp;H1</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> SE_PRIVILEGE_USED_FOR_ACCESS <span class="token operator">=</span> <span class="token number">&amp;H80000000</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> TOKEN_ADJUST_PRIVILEGES <span class="token operator">=</span> <span class="token number">&amp;H20</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> TOKEN_QUERY_SOURCE <span class="token operator">=</span> <span class="token number">&amp;H10</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> TOKEN_QUERY <span class="token operator">=</span> <span class="token number">&amp;H8</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> ANYSIZE_ARRAY <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> SE_SHUTDOWN_NAME <span class="token operator">=</span> <span class="token string">&quot;SeShutdownPrivilege&quot;</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> PROCESS_SET_INFORMATION <span class="token operator">=</span> <span class="token number">&amp;H200</span>
<span class="token keyword">Private</span> <span class="token keyword">Const</span> PROCESS_QUERY_INFORMATION <span class="token operator">=</span> <span class="token number">&amp;H400</span>
<span class="token keyword">Private</span> <span class="token keyword">Type</span> LARGE_INTEGER
    lowpart <span class="token keyword">As</span> <span class="token keyword">Long</span>
    highpart <span class="token keyword">As</span> <span class="token keyword">Long</span>
<span class="token keyword">End</span> <span class="token keyword">Type</span>
<span class="token keyword">Private</span> <span class="token keyword">Type</span> LUID
    lowpart <span class="token keyword">As</span> <span class="token keyword">Long</span>
    highpart <span class="token keyword">As</span> <span class="token keyword">Long</span>
<span class="token keyword">End</span> <span class="token keyword">Type</span>
<span class="token keyword">Private</span> <span class="token keyword">Type</span> LUID_AND_ATTRIBUTES
    pLuid <span class="token keyword">As</span> LUID
    Attributes <span class="token keyword">As</span> <span class="token keyword">Long</span>
<span class="token keyword">End</span> <span class="token keyword">Type</span>
<span class="token keyword">Private</span> <span class="token keyword">Type</span> TOKEN_PRIVILEGES
    PrivilegeCount <span class="token keyword">As</span> <span class="token keyword">Long</span>
    Privileges<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">As</span> LUID_AND_ATTRIBUTES
<span class="token keyword">End</span> <span class="token keyword">Type</span>
<span class="token keyword">Public</span> <span class="token keyword">Sub</span> exitWin2k<span class="token punctuation">(</span><span class="token keyword">ByVal</span> Obj <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">)</span>
    <span class="token keyword">On</span> <span class="token keyword">Error</span> <span class="token keyword">GoTo</span> Win98Off

    <span class="token keyword">Dim</span> lAPIReturn <span class="token keyword">As</span> <span class="token keyword">Long</span>
    <span class="token keyword">Dim</span> tTOKPRI <span class="token keyword">As</span> TOKEN_PRIVILEGES
    <span class="token keyword">Dim</span> tLUID <span class="token keyword">As</span> LUID
    <span class="token keyword">Dim</span> tLarInt <span class="token keyword">As</span> LARGE_INTEGER
    <span class="token keyword">Dim</span> lRequired <span class="token keyword">As</span> <span class="token keyword">Long</span>
    <span class="token keyword">Dim</span> hTokHan <span class="token keyword">As</span> <span class="token keyword">Long</span>
    <span class="token keyword">Dim</span> hProcess <span class="token keyword">As</span> <span class="token keyword">Long</span>
    <span class="token keyword">If</span> LookupPrivilegeValue<span class="token punctuation">(</span>vbNullString<span class="token punctuation">,</span> SE_SHUTDOWN_NAME<span class="token punctuation">,</span> tLarInt<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">Then</span>
        <span class="token comment">&#39;MsgBox &quot;Get LUID error!&quot;, vbOKOnly, &quot;Error&quot;</span>
        <span class="token keyword">GoTo</span> Win98Off
    <span class="token keyword">End</span> <span class="token keyword">If</span>
    tLUID<span class="token punctuation">.</span>highpart <span class="token operator">=</span> tLarInt<span class="token punctuation">.</span>highpart
    tLUID<span class="token punctuation">.</span>lowpart <span class="token operator">=</span> tLarInt<span class="token punctuation">.</span>lowpart
    tTOKPRI<span class="token punctuation">.</span>PrivilegeCount <span class="token operator">=</span> <span class="token number">1</span>
    tTOKPRI<span class="token punctuation">.</span>Privileges<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Attributes <span class="token operator">=</span> SE_PRIVILEGE_ENABLED
    tTOKPRI<span class="token punctuation">.</span>Privileges<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>pLuid <span class="token operator">=</span> tLUID
    hProcess <span class="token operator">=</span> GetCurrentProcess<span class="token punctuation">(</span><span class="token punctuation">)</span>
    lAPIReturn <span class="token operator">=</span> OpenProcessToken<span class="token punctuation">(</span>hProcess<span class="token punctuation">,</span> TOKEN_ADJUST_PRIVILEGES <span class="token operator">+</span> TOKEN_QUERY<span class="token punctuation">,</span> hTokHan<span class="token punctuation">)</span>
    lAPIReturn <span class="token operator">=</span> AdjustTokenPrivileges<span class="token punctuation">(</span>hTokHan<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> tTOKPRI<span class="token punctuation">,</span> Len<span class="token punctuation">(</span>tTOKPRI<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    
    <span class="token keyword">Select</span> <span class="token keyword">Case</span> Obj
        <span class="token keyword">Case</span> <span class="token string">&quot;关机&quot;</span>
            lAPIReturn <span class="token operator">=</span> ExitWindowsEx<span class="token punctuation">(</span>EWX_FORCE <span class="token operator">+</span> EWX_POWEROFF<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">Case</span> <span class="token keyword">Else</span>
            <span class="token comment">&#39; lAPIReturn = ExitWindowsEx(EWX_FORCEIFHUNG, 0)</span>
            <span class="token comment">&#39; lAPIReturn = ExitWindowsEx(EWX_SHUTDOWN, 0)</span>
            <span class="token comment">&#39; lAPIReturn = ExitWindowsEx(EWX_LOGOFF, 0)</span>
            <span class="token comment">&#39; lAPIReturn = ExitWindowsEx(EWX_SHUTDOWN, 0)</span>
            <span class="token comment">&#39; lAPIReturn = ExitWindowsEx(EWX_POWEROFF, 0)</span>
            <span class="token comment">&#39; lAPIReturn = ExitWindowsEx(EWX_REBOOT, 0)</span>
            <span class="token comment">&#39; lAPIReturn = ExitWindowsEx(EWX_FORCE, 0)</span>
    <span class="token keyword">End</span> <span class="token keyword">Select</span>

    <span class="token keyword">If</span> lAPIReturn <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">Then</span>
        <span class="token comment">&#39;MsgBox &quot;Function calling error!&quot;, vbOKOnly, &quot;错误&quot;</span>
    <span class="token keyword">End</span> <span class="token keyword">If</span>
    lAPIReturn <span class="token operator">=</span> CloseHandle<span class="token punctuation">(</span>hTokHan<span class="token punctuation">)</span>

Win98Off<span class="token punctuation">:</span>
    lAPIReturn <span class="token operator">=</span> ExitWindowsEx<span class="token punctuation">(</span>EWX_FORCE <span class="token operator">+</span> EWX_POWEROFF<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">End</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span>
</code></pre></div><blockquote><p>你也可以用（XP or higher only）：<br><br><code>shutdown /r /t 0 /f</code></p></blockquote><p>回复人： jeng(第四只手) ( 二级(初级)) 信誉：98 2003-09-24 22:58:00 得分:0</p><blockquote><p>litp(litp的方法是行得通的<br><br> 我已经试过<br><br> ArLi2003(阿利 路过而已)的方法还没有看明白</p></blockquote><p>回复人： RnfShadow() ( 一级(初级)) 信誉：100 2003-09-25 00:59:00 得分:0</p><blockquote><p>你建一个类库，然后把下面的代码全部粘贴进去，覆盖掉里面的。调用这个类的Reboot就是重启，PowerOff就是关机，LogoOff就是注销！！<br></p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">ExitWindows</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Class1</span>
    <span class="token punctuation">{</span>
        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">StructLayout</span><span class="token attribute-arguments"><span class="token punctuation">(</span>LayoutKind<span class="token punctuation">.</span>Sequential<span class="token punctuation">,</span> Pack<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">struct</span> <span class="token class-name">TokPriv1Luid</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> Count<span class="token punctuation">;</span>
            <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">long</span></span> Luid<span class="token punctuation">;</span>
            <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> Attr<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;kernel32.dll&quot;</span><span class="token punctuation">,</span> ExactSpelling<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">GetCurrentProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;advapi32.dll&quot;</span><span class="token punctuation">,</span> ExactSpelling<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">,</span> SetLastError<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">OpenProcessToken</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> h<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> acc<span class="token punctuation">,</span> <span class="token keyword">ref</span> <span class="token class-name">IntPtr</span> phtok<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;advapi32.dll&quot;</span><span class="token punctuation">,</span> SetLastError<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">LookupPrivilegeValue</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> host<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">,</span> <span class="token keyword">ref</span> <span class="token class-name"><span class="token keyword">long</span></span> pluid<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;advapi32.dll&quot;</span><span class="token punctuation">,</span> ExactSpelling<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">,</span> SetLastError<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">AdjustTokenPrivileges</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> htok<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> disall<span class="token punctuation">,</span>
            <span class="token keyword">ref</span> <span class="token class-name">TokPriv1Luid</span> newst<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> len<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> prev<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> relen<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> ExactSpelling<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">,</span> SetLastError<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">ExitWindowsEx</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> flg<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> rea<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> SE_PRIVILEGE_ENABLED <span class="token operator">=</span> <span class="token number">0x00000002</span><span class="token punctuation">;</span>
        <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> TOKEN_QUERY <span class="token operator">=</span> <span class="token number">0x00000008</span><span class="token punctuation">;</span>
        <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> TOKEN_ADJUST_PRIVILEGES <span class="token operator">=</span> <span class="token number">0x00000020</span><span class="token punctuation">;</span>
        <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> SE_SHUTDOWN_NAME <span class="token operator">=</span> <span class="token string">&quot;SeShutdownPrivilege&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> EWX_LOGOFF <span class="token operator">=</span> <span class="token number">0x00000000</span><span class="token punctuation">;</span>
        <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> EWX_SHUTDOWN <span class="token operator">=</span> <span class="token number">0x00000001</span><span class="token punctuation">;</span>
        <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> EWX_REBOOT <span class="token operator">=</span> <span class="token number">0x00000002</span><span class="token punctuation">;</span>
        <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> EWX_FORCE <span class="token operator">=</span> <span class="token number">0x00000004</span><span class="token punctuation">;</span>
        <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> EWX_POWEROFF <span class="token operator">=</span> <span class="token number">0x00000008</span><span class="token punctuation">;</span>
        <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> EWX_FORCEIFHUNG <span class="token operator">=</span> <span class="token number">0x00000010</span><span class="token punctuation">;</span>

        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DoExitWin</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> flg<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">bool</span></span> ok<span class="token punctuation">;</span>
            <span class="token class-name">TokPriv1Luid</span> tp<span class="token punctuation">;</span>
            <span class="token class-name">IntPtr</span> hproc <span class="token operator">=</span> <span class="token function">GetCurrentProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">IntPtr</span> htok <span class="token operator">=</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">;</span>
            ok <span class="token operator">=</span> <span class="token function">OpenProcessToken</span><span class="token punctuation">(</span> hproc<span class="token punctuation">,</span> TOKEN_ADJUST_PRIVILEGES <span class="token operator">|</span> TOKEN_QUERY<span class="token punctuation">,</span> <span class="token keyword">ref</span> htok<span class="token punctuation">)</span><span class="token punctuation">;</span>
            tp<span class="token punctuation">.</span>Count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            tp<span class="token punctuation">.</span>Luid <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            tp<span class="token punctuation">.</span>Attr <span class="token operator">=</span> SE_PRIVILEGE_ENABLED<span class="token punctuation">;</span>
            ok <span class="token operator">=</span> <span class="token function">LookupPrivilegeValue</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> SE_SHUTDOWN_NAME<span class="token punctuation">,</span> <span class="token keyword">ref</span> tp<span class="token punctuation">.</span>Luid<span class="token punctuation">)</span><span class="token punctuation">;</span>
            ok <span class="token operator">=</span> <span class="token function">AdjustTokenPrivileges</span><span class="token punctuation">(</span>htok<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">ref</span> tp<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">,</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">)</span><span class="token punctuation">;</span>
            ok <span class="token operator">=</span> <span class="token function">ExitWindowsEx</span><span class="token punctuation">(</span> flg<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Reboot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">DoExitWin</span><span class="token punctuation">(</span>EWX_FORCE <span class="token operator">|</span> EWX_REBOOT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">PowerOff</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">DoExitWin</span><span class="token punctuation">(</span>EWX_FORCE <span class="token operator">|</span> EWX_POWEROFF<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">LogoOff</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">DoExitWin</span><span class="token punctuation">(</span>EWX_FORCE <span class="token operator">|</span> EWX_LOGOFF<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>回复人： morijj(北极光) ( 一级(初级)) 信誉：100 2003-09-26 01:24:00 得分:0</p><blockquote><p>待兄弟我先慢慢研究一下各位的代码。</p></blockquote>`,43),e=[o];function c(k,l){return s(),a("div",null,e)}const r=n(t,[["render",c],["__file","sysop17.html.vue"]]);export{r as default};
