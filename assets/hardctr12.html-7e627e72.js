import{_ as n,o as s,c as a,a as t}from"./app-f0851ed3.js";const p={},o=t(`<h1 id="一个鼠标类-using-c-and-win32api" tabindex="-1"><a class="header-anchor" href="#一个鼠标类-using-c-and-win32api" aria-hidden="true">#</a> 一个鼠标类(Using C# and Win32API)</h1><blockquote><p>你是第84位浏览该文章的人 网际浪子 不详 2003-7-11</p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">namespace</span> <span class="token namespace">ClassLibrary<span class="token punctuation">.</span>Hardware</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 原创 Using C# and Win32API ( 最近我把所有的Win32API看了1遍 很是过瘾 )</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Mouse</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">byte</span></span> SM_MOUSEPRESENT <span class="token operator">=</span> <span class="token number">19</span><span class="token punctuation">;</span>
        <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">byte</span></span> SM_CMOUSEBUTTONS <span class="token operator">=</span> <span class="token number">43</span><span class="token punctuation">;</span>
        <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">byte</span></span> SM_MOUSEWHEELPRESENT <span class="token operator">=</span> <span class="token number">75</span><span class="token punctuation">;</span>

        <span class="token keyword">internal</span> <span class="token keyword">struct</span> <span class="token class-name">POINTAPI</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> x<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> y<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">internal</span> <span class="token keyword">struct</span> <span class="token class-name">RECT</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> left<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> top<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> right<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> bottom<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;SwapMouseButton&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">extern</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">SwapMouseButton</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> bSwap<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;ClipCursor&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">extern</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">ClipCursor</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token class-name">RECT</span> lpRect<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;GetCursorPos&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">extern</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">GetCursorPos</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token class-name">POINTAPI</span> lpPoint<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;ShowCursor&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">extern</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">ShowCursor</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">bool</span></span> bShow<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;EnableWindow&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">extern</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">EnableWindow</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> hwnd<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> fEnable<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;GetWindowRect&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">extern</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">GetWindowRect</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> hwnd<span class="token punctuation">,</span> <span class="token keyword">ref</span> <span class="token class-name">RECT</span> lpRect<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;SetCursorPos&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">extern</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">SetCursorPos</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> x<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;GetSystemMetrics&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">extern</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">GetSystemMetrics</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> nIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;SetDoubleClickTime&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">extern</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">SetDoubleClickTime</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> wCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;GetDoubleClickTime&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">extern</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">GetDoubleClickTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;kernel32.DLL&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;Sleep&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">internal</span> <span class="token keyword">extern</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> dwMilliseconds<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//得到鼠标相对与全屏的坐标，不是相对与你的Form的，且与你的分辨率有关系</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> FullScreenPosition_X
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span>
            <span class="token punctuation">{</span>
                <span class="token class-name">POINTAPI</span> _POINTAPI <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">POINTAPI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">GetCursorPos</span><span class="token punctuation">(</span><span class="token keyword">ref</span> _POINTAPI<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> _POINTAPI<span class="token punctuation">.</span>x<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> FullScreenPosition_Y
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span>
            <span class="token punctuation">{</span>
                <span class="token class-name">POINTAPI</span> _POINTAPI <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">POINTAPI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">GetCursorPos</span><span class="token punctuation">(</span><span class="token keyword">ref</span> _POINTAPI<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> _POINTAPI<span class="token punctuation">.</span>y<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 隐藏 显示 鼠标</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">ShowCursor</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">ShowCursor</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 将鼠标锁定在你的Form里 不过你得将你的Form先锁了,Form Resize 就失效了</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Lock</span><span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Form</span> ObjectForm<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">RECT</span> _FormRect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RECT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">GetWindowRect</span><span class="token punctuation">(</span>ObjectForm<span class="token punctuation">.</span>Handle<span class="token punctuation">.</span><span class="token function">ToInt32</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">ref</span> _FormRect<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">ClipCursor</span><span class="token punctuation">(</span><span class="token keyword">ref</span> _FormRect<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">UnLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">RECT</span> _ScreenRect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RECT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            _ScreenRect<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            _ScreenRect<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            _ScreenRect<span class="token punctuation">.</span>bottom <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Screen<span class="token punctuation">.</span>PrimaryScreen<span class="token punctuation">.</span>WorkingArea<span class="token punctuation">.</span>Bottom<span class="token punctuation">;</span>
            _ScreenRect<span class="token punctuation">.</span>right <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Screen<span class="token punctuation">.</span>PrimaryScreen<span class="token punctuation">.</span>WorkingArea<span class="token punctuation">.</span>Right<span class="token punctuation">;</span>

            <span class="token function">ClipCursor</span><span class="token punctuation">(</span><span class="token keyword">ref</span> _ScreenRect<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 鼠标失效,不过失效的好像不只是鼠标,小心哦</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Disable</span><span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Form</span> ObjectForm<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">EnableWindow</span><span class="token punctuation">(</span>ObjectForm<span class="token punctuation">.</span>Handle<span class="token punctuation">.</span><span class="token function">ToInt32</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Enable</span><span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Form</span> ObjectForm<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">EnableWindow</span><span class="token punctuation">(</span>ObjectForm<span class="token punctuation">.</span>Handle<span class="token punctuation">.</span><span class="token function">ToInt32</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 鼠标自己移动 很想动画哦 参数是2个控件的handle</span>
        <span class="token comment">// 看这个方法前，先用凉水擦把脸。。。 反正我写的时候 头晕</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Move</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> From_Handle_ToInt32<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> To_Handle_ToInt32<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">RECT</span> rectFrom <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RECT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">RECT</span> rectTo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RECT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name"><span class="token keyword">int</span></span> i<span class="token punctuation">;</span>

            <span class="token function">GetWindowRect</span><span class="token punctuation">(</span>From_Handle_ToInt32<span class="token punctuation">,</span> <span class="token keyword">ref</span> rectFrom<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">GetWindowRect</span><span class="token punctuation">(</span>To_Handle_ToInt32<span class="token punctuation">,</span> <span class="token keyword">ref</span> rectTo<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>rectFrom<span class="token punctuation">.</span>left <span class="token operator">+</span> rectFrom<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token punctuation">(</span>rectTo<span class="token punctuation">.</span>left <span class="token operator">+</span> rectTo<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>rectFrom<span class="token punctuation">.</span>left <span class="token operator">+</span> rectFrom<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token punctuation">(</span>rectTo<span class="token punctuation">.</span>left <span class="token operator">+</span> rectTo<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token function">SetCursorPos</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token punctuation">(</span>rectFrom<span class="token punctuation">.</span>top <span class="token operator">+</span> rectFrom<span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>rectFrom<span class="token punctuation">.</span>left <span class="token operator">+</span> rectFrom<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token punctuation">(</span>rectTo<span class="token punctuation">.</span>left <span class="token operator">+</span> rectTo<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token function">SetCursorPos</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token punctuation">(</span>rectFrom<span class="token punctuation">.</span>top <span class="token operator">+</span> rectFrom<span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>rectFrom<span class="token punctuation">.</span>top <span class="token operator">+</span> rectFrom<span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token punctuation">(</span>rectTo<span class="token punctuation">.</span>top <span class="token operator">+</span> rectTo<span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>rectFrom<span class="token punctuation">.</span>top <span class="token operator">+</span> rectFrom<span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token punctuation">(</span>rectTo<span class="token punctuation">.</span>top <span class="token operator">+</span> rectTo<span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token function">SetCursorPos</span><span class="token punctuation">(</span><span class="token punctuation">(</span>rectTo<span class="token punctuation">.</span>left <span class="token operator">+</span> rectTo<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>rectFrom<span class="token punctuation">.</span>top <span class="token operator">+</span> rectFrom<span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token punctuation">(</span>rectTo<span class="token punctuation">.</span>top <span class="token operator">+</span> rectTo<span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token function">SetCursorPos</span><span class="token punctuation">(</span><span class="token punctuation">(</span>rectTo<span class="token punctuation">.</span>left <span class="token operator">+</span> rectTo<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 得到你的鼠标类型</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Type
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">GetSystemMetrics</span><span class="token punctuation">(</span>SM_MOUSEPRESENT<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token string">&quot;本计算机尚未安装鼠标&quot;</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">GetSystemMetrics</span><span class="token punctuation">(</span>SM_MOUSEWHEELPRESENT<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token function">GetSystemMetrics</span><span class="token punctuation">(</span>SM_CMOUSEBUTTONS<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;键滚轮鼠标&quot;</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">else</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token function">GetSystemMetrics</span><span class="token punctuation">(</span>SM_CMOUSEBUTTONS<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;键鼠标&quot;</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 设置鼠标双击时间</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DoubleClickTime_Set</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> MouseDoubleClickTime<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">SetDoubleClickTime</span><span class="token punctuation">(</span>MouseDoubleClickTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">DoubleClickTime_Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">GetDoubleClickTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 设置鼠标默认主键 我是没有见过谁左手用鼠标</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DefaultRightButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">SwapMouseButton</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DefaultLeftButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">SwapMouseButton</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,3),e=[o];function c(u,l){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","hardctr12.html.vue"]]);export{i as default};
