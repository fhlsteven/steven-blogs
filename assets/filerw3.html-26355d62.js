import{_ as n,o as s,c as a,a as t}from"./app-a2b6e588.js";const p={},o=t(`<h1 id="读写文本" tabindex="-1"><a class="header-anchor" href="#读写文本" aria-hidden="true">#</a> 读写文本</h1><h2 id="_1-读文件" tabindex="-1"><a class="header-anchor" href="#_1-读文件" aria-hidden="true">#</a> 1．读文件</h2><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//方法1</span>
<span class="token class-name">StreamReader</span> srFile<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamReader</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span>Encoding<span class="token punctuation">.</span>Default<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span>srFile<span class="token punctuation">.</span><span class="token function">Peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// Check EOF</span>
<span class="token punctuation">{</span>
sql<span class="token operator">+=</span> srFile<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Read one line</span>
<span class="token punctuation">}</span>
srFile<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>richTextBox1<span class="token punctuation">.</span>Text<span class="token operator">=</span>sql<span class="token punctuation">;</span>

<span class="token comment">//方法2</span>
<span class="token class-name">StreamReader</span> sr<span class="token operator">=</span>File<span class="token punctuation">.</span><span class="token function">OpenText</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> input<span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>input<span class="token operator">=</span>sr<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    sql<span class="token operator">+=</span>input<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
sr<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>richTextBox1<span class="token punctuation">.</span>Text<span class="token operator">=</span>sql<span class="token punctuation">;</span>

<span class="token comment">//方法3</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>richTextBox1<span class="token punctuation">.</span><span class="token function">LoadFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span>RichTextBoxStreamType<span class="token punctuation">.</span>PlainText<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="_2-写文件" tabindex="-1"><a class="header-anchor" href="#_2-写文件" aria-hidden="true">#</a> 2．写文件</h2><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">StreamWriter</span> sw<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamWriter</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//,false);</span>
sw<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
sw<span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//从缓冲区写入基础流（文件）</span>
sw<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,5),e=[o];function c(u,l){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","filerw3.html.vue"]]);export{k as default};
