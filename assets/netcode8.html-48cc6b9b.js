import{_ as n,o as s,c as a,a as p}from"./app-d9da1b6d.js";const t={},o=p(`<h1 id="用c-取网卡mac地址的类源码" tabindex="-1"><a class="header-anchor" href="#用c-取网卡mac地址的类源码" aria-hidden="true">#</a> 用C#取网卡MAC地址的类源码</h1><blockquote><p>未知 aspxcn.com 2002-09-19</p></blockquote><p>在下公布这段代码，目的是与大家探讨有无更好的实现方法（如.NET存在直接调用？）。</p><p>在下愿与大家共同挖掘C#的精妙之处，一起揭示C#的神秘面纱。 如有不妥，可尽情表达。</p><p>1、</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">NCBCONST</span>
<span class="token punctuation">{</span>
    NCBNAMSZ <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">,</span>       <span class="token comment">/* absolute length of a net name         */</span>
    MAX_LANA <span class="token operator">=</span> <span class="token number">254</span><span class="token punctuation">,</span>      <span class="token comment">/* lana&#39;s in range 0 to MAX_LANA inclusive   */</span>
    NCBENUM <span class="token operator">=</span> <span class="token number">0x37</span><span class="token punctuation">,</span>      <span class="token comment">/* NCB ENUMERATE LANA NUMBERS            */</span>
    NRC_GOODRET <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token comment">/* good return                              */</span>
    NCBRESET <span class="token operator">=</span> <span class="token number">0x32</span><span class="token punctuation">,</span>     <span class="token comment">/* NCB RESET                        */</span>
    NCBASTAT <span class="token operator">=</span> <span class="token number">0x33</span><span class="token punctuation">,</span>     <span class="token comment">/* NCB ADAPTER STATUS                  */</span>
    NUM_NAMEBUF <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">,</span>    <span class="token comment">/* Number of NAME&#39;s BUFFER               */</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">StructLayout</span><span class="token attribute-arguments"><span class="token punctuation">(</span>LayoutKind<span class="token punctuation">.</span>Sequential<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">struct</span> <span class="token class-name">ADAPTER_STATUS</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>ByValArray<span class="token punctuation">,</span> SizeConst <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> adapter_address<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> rev_major<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> reserved0<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> adapter_type<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> rev_minor<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> duration<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> frmr_recv<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> frmr_xmit<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> iframe_recv_err<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> xmit_aborts<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">uint</span></span> xmit_success<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">uint</span></span> recv_success<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> iframe_xmit_err<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> recv_buff_unavail<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> t1_timeouts<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> ti_timeouts<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">uint</span></span> reserved1<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> free_ncbs<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> max_cfg_ncbs<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> max_ncbs<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> xmit_buf_unavail<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> max_dgram_size<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> pending_sess<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> max_cfg_sess<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> max_sess<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> max_sess_pkt_size<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> name_count<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">StructLayout</span><span class="token attribute-arguments"><span class="token punctuation">(</span>LayoutKind<span class="token punctuation">.</span>Sequential<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">struct</span> <span class="token class-name">NAME_BUFFER</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>ByValArray<span class="token punctuation">,</span> SizeConst <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>NCBCONST<span class="token punctuation">.</span>NCBNAMSZ<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> name<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> name_num<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> name_flags<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">StructLayout</span><span class="token attribute-arguments"><span class="token punctuation">(</span>LayoutKind<span class="token punctuation">.</span>Sequential<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">struct</span> <span class="token class-name">NCB</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> ncb_command<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> ncb_retcode<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> ncb_lsn<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> ncb_num<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">IntPtr</span> ncb_buffer<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">ushort</span></span> ncb_length<span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>ByValArray<span class="token punctuation">,</span> SizeConst <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>NCBCONST<span class="token punctuation">.</span>NCBNAMSZ<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> ncb_callname<span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>ByValArray<span class="token punctuation">,</span> SizeConst <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>NCBCONST<span class="token punctuation">.</span>NCBNAMSZ<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> ncb_name<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> ncb_rto<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> ncb_sto<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">IntPtr</span> ncb_post<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> ncb_lana_num<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> ncb_cmd_cplt<span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>ByValArray<span class="token punctuation">,</span> SizeConst <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> ncb_reserve<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">IntPtr</span> ncb_event<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">StructLayout</span><span class="token attribute-arguments"><span class="token punctuation">(</span>LayoutKind<span class="token punctuation">.</span>Sequential<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">struct</span> <span class="token class-name">LANA_ENUM</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span></span> length<span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>ByValArray<span class="token punctuation">,</span> SizeConst <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>NCBCONST<span class="token punctuation">.</span>MAX_LANA<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> lana<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">StructLayout</span><span class="token attribute-arguments"><span class="token punctuation">(</span>LayoutKind<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">struct</span> <span class="token class-name">ASTAT</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ADAPTER_STATUS</span> adapt<span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>ByValArray<span class="token punctuation">,</span> SizeConst <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>NCBCONST<span class="token punctuation">.</span>NUM_NAMEBUF<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token class-name">NAME_BUFFER<span class="token punctuation">[</span><span class="token punctuation">]</span></span> NameBuff<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Win32API</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;NETAPI32.DLL&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">char</span></span> <span class="token function">Netbios</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token class-name">NCB</span> ncb<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>2、</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">GetMacAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">string</span></span> addr <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">int</span></span> cb<span class="token punctuation">;</span>
    <span class="token class-name">ASTAT</span> adapter<span class="token punctuation">;</span>
    <span class="token class-name">NCB</span> Ncb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NCB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">char</span></span> uRetCode<span class="token punctuation">;</span>
    <span class="token class-name">LANA_ENUM</span> lenum<span class="token punctuation">;</span>

    Ncb<span class="token punctuation">.</span>ncb_command <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>NCBCONST<span class="token punctuation">.</span>NCBENUM<span class="token punctuation">;</span>
    cb <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">SizeOf</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">LANA_ENUM</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Ncb<span class="token punctuation">.</span>ncb_buffer <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">AllocHGlobal</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Ncb<span class="token punctuation">.</span>ncb_length <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">ushort</span><span class="token punctuation">)</span>cb<span class="token punctuation">;</span>
    uRetCode <span class="token operator">=</span> Win32API<span class="token punctuation">.</span><span class="token function">Netbios</span><span class="token punctuation">(</span><span class="token keyword">ref</span> Ncb<span class="token punctuation">)</span><span class="token punctuation">;</span>
    lenum <span class="token operator">=</span> <span class="token punctuation">(</span>LANA_ENUM<span class="token punctuation">)</span>Marshal<span class="token punctuation">.</span><span class="token function">PtrToStructure</span><span class="token punctuation">(</span>Ncb<span class="token punctuation">.</span>ncb_buffer<span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">LANA_ENUM</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Marshal<span class="token punctuation">.</span><span class="token function">FreeHGlobal</span><span class="token punctuation">(</span>Ncb<span class="token punctuation">.</span>ncb_buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>uRetCode <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span>NCBCONST<span class="token punctuation">.</span>NRC_GOODRET<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lenum<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Ncb<span class="token punctuation">.</span>ncb_command <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>NCBCONST<span class="token punctuation">.</span>NCBRESET<span class="token punctuation">;</span>
        Ncb<span class="token punctuation">.</span>ncb_lana_num <span class="token operator">=</span> lenum<span class="token punctuation">.</span>lana<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        uRetCode <span class="token operator">=</span> Win32API<span class="token punctuation">.</span><span class="token function">Netbios</span><span class="token punctuation">(</span><span class="token keyword">ref</span> Ncb<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uRetCode <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span>NCBCONST<span class="token punctuation">.</span>NRC_GOODRET<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        Ncb<span class="token punctuation">.</span>ncb_command <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>NCBCONST<span class="token punctuation">.</span>NCBASTAT<span class="token punctuation">;</span>
        Ncb<span class="token punctuation">.</span>ncb_lana_num <span class="token operator">=</span> lenum<span class="token punctuation">.</span>lana<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        Ncb<span class="token punctuation">.</span>ncb_callname<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token char">&#39;*&#39;</span><span class="token punctuation">;</span>
        cb <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">SizeOf</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">ADAPTER_STATUS</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> Marshal<span class="token punctuation">.</span><span class="token function">SizeOf</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">NAME_BUFFER</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>NCBCONST<span class="token punctuation">.</span>NUM_NAMEBUF<span class="token punctuation">;</span>
        Ncb<span class="token punctuation">.</span>ncb_buffer <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">AllocHGlobal</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Ncb<span class="token punctuation">.</span>ncb_length <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">ushort</span><span class="token punctuation">)</span>cb<span class="token punctuation">;</span>
        uRetCode <span class="token operator">=</span> Win32API<span class="token punctuation">.</span><span class="token function">Netbios</span><span class="token punctuation">(</span><span class="token keyword">ref</span> Ncb<span class="token punctuation">)</span><span class="token punctuation">;</span>
        adapter<span class="token punctuation">.</span>adapt <span class="token operator">=</span> <span class="token punctuation">(</span>ADAPTER_STATUS<span class="token punctuation">)</span>Marshal<span class="token punctuation">.</span><span class="token function">PtrToStructure</span><span class="token punctuation">(</span>Ncb<span class="token punctuation">.</span>ncb_buffer<span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">ADAPTER_STATUS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Marshal<span class="token punctuation">.</span><span class="token function">FreeHGlobal</span><span class="token punctuation">(</span>Ncb<span class="token punctuation">.</span>ncb_buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>uRetCode <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span>NCBCONST<span class="token punctuation">.</span>NRC_GOODRET<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                addr <span class="token operator">+=</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">;</span>
            addr <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;{0,2:X}{1,2:X}{2,2:X}{3,2:X}{4,2:X}{5,2:X}&quot;</span><span class="token punctuation">,</span>
               adapter<span class="token punctuation">.</span>adapt<span class="token punctuation">.</span>adapter_address<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
               adapter<span class="token punctuation">.</span>adapt<span class="token punctuation">.</span>adapter_address<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
               adapter<span class="token punctuation">.</span>adapt<span class="token punctuation">.</span>adapter_address<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
               adapter<span class="token punctuation">.</span>adapt<span class="token punctuation">.</span>adapter_address<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
               adapter<span class="token punctuation">.</span>adapt<span class="token punctuation">.</span>adapter_address<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
               adapter<span class="token punctuation">.</span>adapt<span class="token punctuation">.</span>adapter_address<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> addr<span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span><span class="token char">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,8),c=[o];function e(u,l){return s(),a("div",null,c)}const i=n(t,[["render",e],["__file","netcode8.html.vue"]]);export{i as default};
