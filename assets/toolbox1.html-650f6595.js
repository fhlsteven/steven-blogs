import{_ as n,o as s,c as a,a as t}from"./app-d9da1b6d.js";const p={},o=t(`<h1 id="用c-创建com对象" tabindex="-1"><a class="header-anchor" href="#用c-创建com对象" aria-hidden="true">#</a> 用C#创建COM对象</h1><blockquote><p>http://www.uncj.net/bbs/index.asp 2003-1-15 ;程序员大联盟</p></blockquote><p>在本篇文章中，我们将讨论下面的问题：</p><ul><li>使用C#创建一个简单的COM对象（使用COM的Interop特性）。</li><li>从VC++客户端软件中访问COM。客户端软件使用了TypeLibrary（.TLB文件）。</li></ul><p>为了简单和方便开发人员使用、测试起见，我们使用了SQLSERVER数据库软件的缺省安装中的Northwind数据库。</p><ul><li>修改COM对象中SQLServer的名字，与SQLServer连接。</li><li>我们已经创建了连接数据库用的分别为scott、tiger的用户名和口令，我们可以使用它或者其他现有的用户名和口令。</li></ul><h2 id="第一部分-用c-创建简单的com对象" tabindex="-1"><a class="header-anchor" href="#第一部分-用c-创建简单的com对象" aria-hidden="true">#</a> 第一部分：用C#创建简单的COM对象</h2><p>COM对象是ClassLibrary类，它生成DLL文件。要在VS开发环境中创建一个简单的COM对象，我们可以依次选择“文件”-＞；“新创建”-＞；“工程”-＞；“VisualC#工程”-＞；“类库”，然后创建一个名字为Database_COMObject的工程。</p><p>需要注意的是：在COM中调用VC#对象需要下面的条件：</p><ul><li>类必须是public性质。</li><li>特性、方法和事件必须是public性质的。</li><li>特性和方法必须在类接口中定义。</li><li>事件必须在事件接口中定义。</li></ul><p>不是在这些接口中定义的public性质的类成员不能被COM访问，但它们可以被其他的.NET Framework对象访问。要让COM能够访问特性和方法，我们必须在类接口中定义它们，使它们具有DispId属性，并在类中实现这些特性和方法。这些成员定义时的顺序也就是它们在COM中顺序。要让COM访问类中的事件，必须在事件接口中定义这些事件，并赋予它们DispId属性。事件接口不应当由类完成，类只实现类接口（它可以实现不止一个接口，但第一个接口是缺省接口），应当在缺省接口中实现需要让COM访问的方法和特性，方法和特性必须被标识为public性质，并符合在类接口中的定义。需要让COM访问的事件也在缺省的类接口中完成，它们也必须被标识为public性质，并符合事件接口中的定义。</p><p>在接口名字之前，每个接口需要一个GUID特性。要生成变个唯一的Guid，需要运行guidgen.exe工具软件，并选择“注册表格式” 下面是一个类界面：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Guid</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;;694C1820-04B6-4988-928F-FD858B95C880&quot;</span><span class="token punctuation">;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DBCOM_Interface</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DispId</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> userid<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DispId</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">ExecuteSelectCommand</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> selCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DispId</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">NextRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DispId</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ExecuteNonSelectCommand</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> insCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DispId</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">GetColumnData</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>COM事件接口：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 事件接口Database_COMObjectEvents</span>
<span class="token punctuation">[</span><span class="token function">Guid</span><span class="token punctuation">(</span><span class="token string">&quot;；47C976E0-C208-4740-AC42-41212D3C34F0&quot;</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">InterfaceType</span><span class="token punctuation">(</span>ComInterfaceType<span class="token punctuation">.</span>InterfaceIsIDispatch<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DBCOM_Events</span>
<span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre></div><p>下面是实际的类定义：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Guid</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;；9E5E5FB2-219D-4ee7-AB27-E4DBED8E123E&quot;</span><span class="token punctuation">;</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token class-name">ClassInterface</span><span class="token attribute-arguments"><span class="token punctuation">(</span>ClassInterfaceType<span class="token punctuation">.</span>None<span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token class-name">ComSourceInterfaces</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">DBCOM_Events</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DBCOM_Class</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">DBCOM_Interface</span></span>
<span class="token punctuation">{</span>
</code></pre></div><p>需要注意的是，在类的前面，需要设置下面的特性：</p><p><code>ClassInterface(ClassInterfaceType.None), ComSourceInterfaces(typeof(DBCOM_Events))]</code></p><p><code>ClassInterfaceType.None</code>表示没有为该类生成类接口，如果没有明确地实现接口，类只能通过IDispatch提供后期绑定访问。用户希望通过明确地由类实现的接口使外部对象能够访问类的功能，这也是推荐的ClassInterfaceAttribute的设置。</p><p><code>ComSourceInterfaces(typeof(BCOM_Events))]</code>确定许多作为COM事件向外部对象提供的接口。在本文的例子中，我们不对外部对象开放任何事件。</p><p>下面是COM对象完整的源代码：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>SqlClient</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">Database_COMObject</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Guid</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;;694C1820-04B6-4988-928F-FD858B95C880&quot;</span><span class="token punctuation">;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DBCOM_Interface</span>
    <span class="token punctuation">{</span>
        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DispId</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> userid<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DispId</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">ExecuteSelectCommand</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> selCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DispId</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">NextRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DispId</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ExecuteNonSelectCommand</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> insCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DispId</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">GetColumnData</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 事件接口Database_COMObjectEvents </span>
    <span class="token punctuation">[</span><span class="token function">Guid</span><span class="token punctuation">(</span><span class="token string">&quot;;47C976E0-C208-4740-AC42-41212D3C34F0&quot;</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">InterfaceType</span><span class="token punctuation">(</span>ComInterfaceType<span class="token punctuation">.</span>InterfaceIsIDispatch<span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DBCOM_Events</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Guid</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;;9E5E5FB2-219D-4ee7-AB27-E4DBED8E123E&quot;</span><span class="token punctuation">;</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token class-name">ClassInterface</span><span class="token attribute-arguments"><span class="token punctuation">(</span>ClassInterfaceType<span class="token punctuation">.</span>None<span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token class-name">ComSourceInterfaces</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">DBCOM_Events</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DBCOM_Class</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">DBCOM_Interface</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">SqlConnection</span> myConnection <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">SqlDataReader</span> myReader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">DBCOM_Class</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> userid<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> password<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">try</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">string</span></span> myConnectString <span class="token operator">=</span> <span class="token string">&quot;;user id=&quot;</span><span class="token punctuation">;</span><span class="token operator">+</span>userid <span class="token operator">+</span> <span class="token string">&quot;;;password=&quot;</span><span class="token punctuation">;</span><span class="token operator">+</span>password <span class="token operator">+</span>
                    <span class="token string">&quot;;;Database=NorthWind;Server=SKYWALKER;Connect Timeout=30&quot;</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
                myConnection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlConnection</span><span class="token punctuation">(</span>myConnectString<span class="token punctuation">)</span><span class="token punctuation">;</span>
                myConnection<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;;CONNECTED&quot;</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">ExecuteSelectCommand</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> selCommand<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>myReader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                myReader<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">SqlCommand</span> myCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlCommand</span><span class="token punctuation">(</span>selCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>
            myCommand<span class="token punctuation">.</span>Connection <span class="token operator">=</span> myConnection<span class="token punctuation">;</span>
            myCommand<span class="token punctuation">.</span><span class="token function">ExecuteNonQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            myReader <span class="token operator">=</span> myCommand<span class="token punctuation">.</span><span class="token function">ExecuteReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">NextRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>myReader<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                myReader<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">GetColumnData</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> pos<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">Object</span> obj <span class="token operator">=</span> myReader<span class="token punctuation">.</span><span class="token function">GetValue</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&quot;;&quot;</span><span class="token punctuation">;</span> <span class="token punctuation">;</span>
            <span class="token keyword">return</span> obj<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ExecuteNonSelectCommand</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> insCommand<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">SqlCommand</span> myCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlCommand</span><span class="token punctuation">(</span>insCommand<span class="token punctuation">,</span> myConnection<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">int</span></span> retRows <span class="token operator">=</span> myCommand<span class="token punctuation">.</span><span class="token function">ExecuteNonQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>在创建COM对象前，我们必须向COM Interop注册该对象。右击方案管理器中的工程名字，点击快捷菜单上的“属性”选项，然后再点击“配置”-＞；“创建”，扩展output小节，将Register for COM Interop选项的值设置为true。这样，一个COM对象就能够与可管理性应用程序进行交互。</p><p>为了使COM对象能够被外部对象调用，类库组合必须有一个强名字。创建强名字需要用到SN.EXE名字： <code>sn -k Database_COM_Key.snk</code></p><p>打开AssemblyInfo.cs，并修改下面一行的内容：</p><p><code>[assembly:AssemblyKeyFile(&quot;;Database_COM_Key.snk&quot;;)]</code></p><p>创建对象。创建对象会生成一个可以被导入到可管理性或非可管理性代码中的类库。</p><h2 id="第二部分-使用visual-c-创建访问com对象的客户端软件" tabindex="-1"><a class="header-anchor" href="#第二部分-使用visual-c-创建访问com对象的客户端软件" aria-hidden="true">#</a> 第二部分：使用Visual C++创建访问COM对象的客户端软件</h2><ul><li>使用VC++开发环境创建一个简单的工程。</li><li>使用#import directive导入类型库。</li><li>在界面中创建一个Smart Pointer，从接口中执行COM类提供的功能。确保在应用程序加载时添加<code>CoInitialize()</code>调用：<code>CoInitialize(NULL);</code></li></ul><div class="language-cpp" data-ext="cpp"><pre class="language-cpp"><code>Database_COMObject<span class="token double-colon punctuation">::</span>DBCOM_InterfacePtr <span class="token function">p</span><span class="token punctuation">(</span><span class="token function">__uuidof</span><span class="token punctuation">(</span>Database_COMObject<span class="token double-colon punctuation">::</span>DBCOM_Class<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db_com_ptr <span class="token operator">=</span> p<span class="token punctuation">;</span>
db_com_ptr<span class="token operator">-</span>＞<span class="token punctuation">;</span>Init（<span class="token string">&quot;;scott&quot;</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token string">&quot;;tiger&quot;</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>下面的代码对Customers数据库表执行一个SQL命令，返回给定ID的客户的信息：</p><div class="language-cpp" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">char</span> cmd<span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">sprintf</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> <span class="token string">&quot;;SELECT COMPANYNAME, CONTACTNAME, CONTACTTITLE, ADDRESS FROM CUSTOMERS WHERE CUSTOMERID = &#39;%s&#39;&quot;</span><span class="token punctuation">;</span><span class="token punctuation">,</span> m_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>

<span class="token keyword">bool</span> ret <span class="token operator">=</span> db_com_ptr<span class="token operator">-&gt;</span><span class="token punctuation">;</span><span class="token function">ExecuteSelectCommand</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>db_com_ptr<span class="token operator">-&gt;</span><span class="token punctuation">;</span><span class="token function">NextRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">;</span>

_bstr_t mData <span class="token operator">=</span> db_com_ptr<span class="token operator">-&gt;</span><span class="token punctuation">;</span><span class="token function">GetColumnData</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p <span class="token operator">=</span> mData<span class="token punctuation">;</span>
m_address <span class="token operator">=</span> <span class="token punctuation">(</span>CString<span class="token punctuation">)</span>p<span class="token punctuation">;</span>
</code></pre></div><div class="language-txt" data-ext="txt"><pre class="language-txt"><code>asp.net
2002-9-28 3:23:23
</code></pre></div><hr><hr><p>liqit 2002-9-28 7:47:00</p><blockquote><p>好文章！</p></blockquote><p>johlon 2002-9-28 8:14:05</p><blockquote><p>不错</p></blockquote><p>tianli_ 2002-10-17 10:22:29</p><blockquote><p>收藏先</p></blockquote><p>WS.NET 2002-10-17 10:41:45</p><blockquote><p>代码有些错误，如：<br></p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">bool</span></span> ret <span class="token operator">=</span> db_com_ptr<span class="token operator">-&gt;</span><span class="token punctuation">;</span> <span class="token function">ExecuteSelectCommand</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span> db_com_ptr<span class="token operator">-&gt;</span><span class="token punctuation">;</span><span class="token function">NextRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token class-name">_bstr_t</span> mData <span class="token operator">=</span> db_com_ptr<span class="token operator">-&gt;</span><span class="token punctuation">;</span> <span class="token function">GetColumnData</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>文章还不错。</p></blockquote>`,46),e=[o];function c(u,l){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","toolbox1.html.vue"]]);export{i as default};
