import{_ as n,o as s,c as a,a as t}from"./app-57d1f7b1.js";const p={},o=t(`<h1 id="c-邮件发送组件源代码-支持esmtp-附件" tabindex="-1"><a class="header-anchor" href="#c-邮件发送组件源代码-支持esmtp-附件" aria-hidden="true">#</a> C#邮件发送组件源代码(支持ESMTP, 附件)</h1><p>作者：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//============================================================ </span>
<span class="token comment">// File: MailSender.cs </span>
<span class="token comment">// 邮件发送组件 </span>
<span class="token comment">// 支持ESMTP, 多附件 </span>
<span class="token comment">//============================================================ </span>
<span class="token keyword">namespace</span> <span class="token namespace">JcPersonal<span class="token punctuation">.</span>Utility</span>
<span class="token punctuation">{</span>
    <span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
    <span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections</span><span class="token punctuation">;</span>
    <span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets</span><span class="token punctuation">;</span>
    <span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span>
    <span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
    <span class="token doc-comment comment">/// Mail 发送器 </span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MailSender</span>
    <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// SMTP服务器域名 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Server
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> server<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> server<span class="token punctuation">)</span> server <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> server <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// SMTP服务器端口 [默认为25] </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Port
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> port<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> port<span class="token punctuation">)</span> port <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">int</span></span> port <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 用户名 [如果需要身份验证的话] </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> UserName
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> userName<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> userName<span class="token punctuation">)</span> userName <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> userName <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 密码 [如果需要身份验证的话] </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Password
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> password<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> password<span class="token punctuation">)</span> password <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> password <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 发件人地址 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> From
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> from<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> from<span class="token punctuation">)</span> from <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> from <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 收件人地址 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> To
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> to<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> to<span class="token punctuation">)</span> to <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> to <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 发件人姓名 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> FromName
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> fromName<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> fromName<span class="token punctuation">)</span> fromName <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> fromName <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 收件人姓名 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ToName
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> toName<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> toName<span class="token punctuation">)</span> toName <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> toName <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 邮件的主题 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Subject
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> subject<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> subject<span class="token punctuation">)</span> subject <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> subject <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 邮件正文 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Body
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> body<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> body<span class="token punctuation">)</span> body <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> body <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 超文本格式的邮件正文 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> HtmlBody
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> htmlBody<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> htmlBody<span class="token punctuation">)</span> htmlBody <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> htmlBody <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 是否是html格式的邮件 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsHtml
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> isHtml<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> isHtml<span class="token punctuation">)</span> isHtml <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">bool</span></span> isHtml <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 语言编码 [默认为GB2312] </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> LanguageEncoding
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> languageEncoding<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> languageEncoding<span class="token punctuation">)</span> languageEncoding <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> languageEncoding <span class="token operator">=</span> <span class="token string">&quot;GB2312&quot;</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 邮件编码 [默认为8bit] </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> MailEncoding
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> encoding<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> encoding<span class="token punctuation">)</span> encoding <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> encoding <span class="token operator">=</span> <span class="token string">&quot;8bit&quot;</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 邮件优先级 [默认为3] </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Priority
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> priority<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> priority<span class="token punctuation">)</span> priority <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">int</span></span> priority <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 附件 [AttachmentInfo] </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name">IList</span> Attachments
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> attachments<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token comment">// set { if (value != attachments) attachments = value; } </span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name">ArrayList</span> attachments <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 发送邮件 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SendMail</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// 创建TcpClient对象， 并建立连接 </span>
            <span class="token class-name">TcpClient</span> tcp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span>
            <span class="token punctuation">{</span>
                tcp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TcpClient</span><span class="token punctuation">(</span>server<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;无法连接服务器&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token function">ReadString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取连接信息 </span>

            <span class="token comment">// 开始进行服务器认证 </span>
            <span class="token comment">// 如果状态码是250则表示操作成功 </span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">Command</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;EHLO Localhost&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;250&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;登陆阶段失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>userName <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token comment">// 需要身份验证 </span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">Command</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;AUTH LOGIN&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;334&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;身份验证阶段失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">string</span></span> nameB64 <span class="token operator">=</span> <span class="token function">ToBase64</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 此处将username转换为Base64码 </span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">Command</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nameB64<span class="token punctuation">,</span> <span class="token string">&quot;334&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;身份验证阶段失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">string</span></span> passB64 <span class="token operator">=</span> <span class="token function">ToBase64</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 此处将password转换为Base64码 </span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">Command</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> passB64<span class="token punctuation">,</span> <span class="token string">&quot;235&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;身份验证阶段失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// 准备发送 </span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;mail From: &quot;</span> <span class="token operator">+</span> from<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;rcpt to: &quot;</span> <span class="token operator">+</span> to<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 发送邮件头 </span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Date: &quot;</span> <span class="token operator">+</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 时间 </span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;From: &quot;</span> <span class="token operator">+</span> fromName <span class="token operator">+</span> <span class="token string">&quot;&lt;&quot;</span> <span class="token operator">+</span> from <span class="token operator">+</span> <span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 发件人 </span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Subject: &quot;</span> <span class="token operator">+</span> subject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 主题 </span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;To:&quot;</span> <span class="token operator">+</span> toName <span class="token operator">+</span> <span class="token string">&quot;&lt;&quot;</span> <span class="token operator">+</span> to <span class="token operator">+</span> <span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 收件人 </span>

            <span class="token comment">//邮件格式 </span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Type: multipart/mixed; boundary=\\&quot;unique-boundary-1\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Reply-To:&quot;</span> <span class="token operator">+</span> from<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 回复地址 </span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;X-Priority:&quot;</span> <span class="token operator">+</span> priority<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 优先级 </span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;MIME-Version:1.0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// MIME版本 </span>

            <span class="token comment">// 数据ID,随意 </span>
            <span class="token comment">// WriteString (tcp.GetStream(), &quot;Message-Id: &quot; + DateTime.Now.ToFileTime() + &quot;@security.com&quot;); </span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Transfer-Encoding:&quot;</span> <span class="token operator">+</span> encoding<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 内容编码 </span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;X-Mailer:JcPersonal.Utility.MailSender&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 邮件发送者 </span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">ToBase64</span><span class="token punctuation">(</span><span class="token string">&quot;This is a multi-part message in MIME format.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 从此处开始进行分隔输入 </span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;--unique-boundary-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 在此处定义第二个分隔符 </span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Type: multipart/alternative;Boundary=\\&quot;unique-boundary-2\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isHtml<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token comment">// 文本信息 </span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;--unique-boundary-2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Type: text/plain;charset=&quot;</span> <span class="token operator">+</span> languageEncoding<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Transfer-Encoding:&quot;</span> <span class="token operator">+</span> encoding<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//一个部分写完之后就写如空信息，分段 </span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;--unique-boundary-2--&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//分隔符的结束符号，尾巴后面多了-- </span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                <span class="token comment">//html信息 </span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;--unique-boundary-2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Type: text/html;charset=&quot;</span> <span class="token operator">+</span> languageEncoding<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Transfer-Encoding:&quot;</span> <span class="token operator">+</span> encoding<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> htmlBody<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;--unique-boundary-2--&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//分隔符的结束符号，尾巴后面多了-- </span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// 发送附件 </span>
            <span class="token comment">// 对文件列表做循环 </span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> attachments<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;--unique-boundary-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 邮件内容分隔符 </span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Type: application/octet-stream;name=\\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>AttachmentInfo<span class="token punctuation">)</span>attachments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>FileName <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 文件格式 </span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Transfer-Encoding: base64&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 内容的编码 </span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Disposition:attachment;filename=\\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>AttachmentInfo<span class="token punctuation">)</span>attachments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>FileName <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 文件名 </span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>AttachmentInfo<span class="token punctuation">)</span>attachments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Bytes<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 写入文件的内容 </span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token function">Command</span><span class="token punctuation">(</span>tcp<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;250&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 最后写完了，输入&quot;.&quot; </span>

            <span class="token comment">// 关闭连接 </span>
            tcp<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 向流中写入字符 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>netStream<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>来自TcpClient的流<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>str<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>写入的字符<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">protected</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">WriteString</span><span class="token punctuation">(</span><span class="token class-name">NetworkStream</span> netStream<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> str<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            str <span class="token operator">=</span> str <span class="token operator">+</span> <span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 加入换行符 </span>

            <span class="token comment">// 将命令行转化为byte[] </span>
            <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> bWrite <span class="token operator">=</span> Encoding<span class="token punctuation">.</span><span class="token function">GetEncoding</span><span class="token punctuation">(</span>languageEncoding<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">ToCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 由于每次写入的数据大小是有限制的，那么我们将每次写入的数据长度定在７５个字节，一旦命令长度超过了７５，就分步写入。 </span>
            <span class="token class-name"><span class="token keyword">int</span></span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">int</span></span> length <span class="token operator">=</span> bWrite<span class="token punctuation">.</span>Length<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">int</span></span> page <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">int</span></span> size <span class="token operator">=</span> <span class="token number">75</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">int</span></span> count <span class="token operator">=</span> size<span class="token punctuation">;</span>
            <span class="token keyword">try</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">&gt;</span> <span class="token number">75</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">// 数据分页 </span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>length <span class="token operator">/</span> size<span class="token punctuation">)</span> <span class="token operator">*</span> size <span class="token operator">&lt;</span> length<span class="token punctuation">)</span>
                        page <span class="token operator">=</span> length <span class="token operator">/</span> size <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                    <span class="token keyword">else</span>
                        page <span class="token operator">=</span> length <span class="token operator">/</span> size<span class="token punctuation">;</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> page<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        start <span class="token operator">=</span> i <span class="token operator">*</span> size<span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> page <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
                            count <span class="token operator">=</span> length <span class="token operator">-</span> <span class="token punctuation">(</span>i <span class="token operator">*</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        netStream<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>bWrite<span class="token punctuation">,</span> start<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 将数据写入到服务器上 </span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span>
                    netStream<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>bWrite<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bWrite<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token comment">// 忽略错误 </span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 从流中读取字符 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>netStream<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>来自TcpClient的流<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span>读取的字符<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">protected</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">ReadString</span><span class="token punctuation">(</span><span class="token class-name">NetworkStream</span> netStream<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">string</span></span> sp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token keyword">by</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">byte</span></span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">int</span></span> size <span class="token operator">=</span> netStream<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span><span class="token keyword">by</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">by</span><span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 读取数据流 </span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                sp <span class="token operator">=</span> Encoding<span class="token punctuation">.</span>Default<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token keyword">by</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 转化为String </span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> sp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 发出命令并判断返回信息是否正确 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>netStream<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>来自TcpClient的流<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>command<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>命令<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>state<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>正确的状态码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span>是否正确<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">protected</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">Command</span><span class="token punctuation">(</span><span class="token class-name">NetworkStream</span> netStream<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> command<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> state<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">string</span></span> sp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">bool</span></span> success <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span>
            <span class="token punctuation">{</span>
                <span class="token function">WriteString</span><span class="token punctuation">(</span>netStream<span class="token punctuation">,</span> command<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 写入命令 </span>
                sp <span class="token operator">=</span> <span class="token function">ReadString</span><span class="token punctuation">(</span>netStream<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 接受返回信息 </span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>sp<span class="token punctuation">.</span><span class="token function">IndexOf</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">// 判断状态码是否正确 </span>
                    success <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token comment">// 忽略错误 </span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> success<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 字符串编码为Base64 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>str<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>字符串<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span>Base64编码的字符串<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">protected</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">ToBase64</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> str<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">try</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token keyword">by</span> <span class="token operator">=</span> Encoding<span class="token punctuation">.</span>Default<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">ToCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                str <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">ToBase64String</span><span class="token punctuation">(</span><span class="token keyword">by</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token comment">// 忽略错误 </span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> str<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token doc-comment comment">/// 附件信息 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
        <span class="token keyword">public</span> <span class="token keyword">struct</span> <span class="token class-name">AttachmentInfo</span>
        <span class="token punctuation">{</span>
            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token doc-comment comment">/// 附件的文件名 [如果输入路径，则自动转换为文件名] </span>
            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> FileName
            <span class="token punctuation">{</span>
                <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> fileName<span class="token punctuation">;</span> <span class="token punctuation">}</span>
                <span class="token keyword">set</span> <span class="token punctuation">{</span> fileName <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">GetFileName</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> fileName<span class="token punctuation">;</span>

            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token doc-comment comment">/// 附件的内容 [由经Base64编码的字节组成] </span>
            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Bytes
            <span class="token punctuation">{</span>
                <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> bytes<span class="token punctuation">;</span> <span class="token punctuation">}</span>
                <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> bytes<span class="token punctuation">)</span> bytes <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> bytes<span class="token punctuation">;</span>

            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token doc-comment comment">/// 从流中读取附件内容并构造 </span>
            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ifileName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>附件的文件名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stream<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>流<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token keyword">public</span> <span class="token function">AttachmentInfo</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> ifileName<span class="token punctuation">,</span> <span class="token class-name">Stream</span> stream<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                fileName <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">GetFileName</span><span class="token punctuation">(</span>ifileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token keyword">by</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">byte</span></span><span class="token punctuation">[</span>stream<span class="token punctuation">.</span>Length<span class="token punctuation">]</span><span class="token punctuation">;</span>
                stream<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span><span class="token keyword">by</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>stream<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 读取文件内容 </span>
                                                        <span class="token comment">//格式转换 </span>
                bytes <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">ToBase64String</span><span class="token punctuation">(</span><span class="token keyword">by</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 转化为base64编码 </span>
            <span class="token punctuation">}</span>

            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token doc-comment comment">/// 按照给定的字节构造附件 </span>
            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ifileName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>附件的文件名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ibytes<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>附件的内容 [字节]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token keyword">public</span> <span class="token function">AttachmentInfo</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> ifileName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> ibytes<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                fileName <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">GetFileName</span><span class="token punctuation">(</span>ifileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                bytes <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">ToBase64String</span><span class="token punctuation">(</span>ibytes<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 转化为base64编码 </span>
            <span class="token punctuation">}</span>

            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token doc-comment comment">/// 从文件载入并构造 </span>
            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>path<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span> </span>
            <span class="token keyword">public</span> <span class="token function">AttachmentInfo</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> path<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                fileName <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">GetFileName</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">FileStream</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileStream</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> FileMode<span class="token punctuation">.</span>Open<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token keyword">by</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">byte</span></span><span class="token punctuation">[</span>file<span class="token punctuation">.</span>Length<span class="token punctuation">]</span><span class="token punctuation">;</span>
                file<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span><span class="token keyword">by</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>file<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 读取文件内容 </span>
                                                    <span class="token comment">//格式转换 </span>
                bytes <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">ToBase64String</span><span class="token punctuation">(</span><span class="token keyword">by</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 转化为base64编码 </span>
                file<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><hr><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 使用: </span>
<span class="token class-name">MailSender</span> ms <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MailSender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ms<span class="token punctuation">.</span>From <span class="token operator">=</span> <span class="token string">&quot;jovenc@tom.com&quot;</span><span class="token punctuation">;</span>
ms<span class="token punctuation">.</span>To <span class="token operator">=</span> <span class="token string">&quot;jovenc@citiz.net&quot;</span><span class="token punctuation">;</span>
ms<span class="token punctuation">.</span>Subject <span class="token operator">=</span> <span class="token string">&quot;Subject&quot;</span><span class="token punctuation">;</span>
ms<span class="token punctuation">.</span>Body <span class="token operator">=</span> <span class="token string">&quot;body text&quot;</span><span class="token punctuation">;</span>
ms<span class="token punctuation">.</span>UserName <span class="token operator">=</span> <span class="token string">&quot;########&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 怎么能告诉你呢 </span>
ms<span class="token punctuation">.</span>Password <span class="token operator">=</span> <span class="token string">&quot;********&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 怎么能告诉你呢 </span>
ms<span class="token punctuation">.</span>Server <span class="token operator">=</span> <span class="token string">&quot;smtp.tom.com&quot;</span><span class="token punctuation">;</span>

ms<span class="token punctuation">.</span>Attachments<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">MailSender<span class="token punctuation">.</span>AttachmentInfo</span><span class="token punctuation">(</span><span class="token string">@&quot;D:\\test.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;mail sending...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span>
<span class="token punctuation">{</span>
    ms<span class="token punctuation">.</span><span class="token function">SendMail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;mail sended.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Powered by DvNews.net</p><p>来源：网络 阅读：223 次 日期：2003-6-23</p>`,7),c=[o];function e(u,l){return s(),a("div",null,c)}const i=n(p,[["render",e],["__file","netcode4.html.vue"]]);export{i as default};
