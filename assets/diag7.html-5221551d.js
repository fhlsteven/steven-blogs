import{_ as n,o as s,c as a,a as t}from"./app-d9da1b6d.js";const p="/steven-blogs/assets/diag7_1-52918c05.png",o={},e=t(`<h1 id="使用shell-notifyicon-建一个标准气泡通知盒图标" tabindex="-1"><a class="header-anchor" href="#使用shell-notifyicon-建一个标准气泡通知盒图标" aria-hidden="true">#</a> 使用Shell_NotifyIcon 建一个标准气泡通知盒图标</h1><div class="language-txt" data-ext="txt"><pre class="language-txt"><code>ArLi2003（原作）  
关键字     Shell_NotifyIcon, 气泡通知盒, Balloon Tooltip, 托盘
</code></pre></div><p>虽然.net 扩展并平民化了大部分的API，但就notifyicon 来讲，系统自己的notifyicon 做的必然安全，以至于 shell32.dll 新版本（此气泡功能是win98 的ie5 就具备）的功能完全得不到体现，在CSDN 我也见过不少的人都在为扩展一个更完美的notifyicon 做努力，为此笔者就在中秋前夜的一些空闲写了这个扩展控件权砖引玉，这二天就有不少朋友扔鸡蛋，于是特撰此稿来补充此控件的功能及它的具体内容以便于朋友们的二次开发，本文也定义了大部分的一些的常数和结构。</p><h2 id="预览图" tabindex="-1"><a class="header-anchor" href="#预览图" aria-hidden="true">#</a> 预览图</h2><p><img src="`+p+`" alt="diag7_1"></p><h2 id="组件类特点如下" tabindex="-1"><a class="header-anchor" href="#组件类特点如下" aria-hidden="true">#</a> 组件类特点如下</h2><ol><li>标准Shell32.dll 的气泡提示，随系统升级</li><li>支持左、右、中三键点击回调</li><li>支持右键菜单（Handle 引用，所以可以自己动态建也可以用.net 自己的ContextMenu）</li><li>支持动态图标（Handle 引用，所以可以自己画或资源/外部引用，然后定时改变，用此组件的 ModiNotifyBox 对原有的图标进行修改，它的参数和 AddNotifyBox 一样，只要改变它的icon 句柄为新 icon 的句柄就行了）</li><li>不使用静态，允许多个Icon 互不冲突，可用于多窗体软件</li></ol><h2 id="类内容如下" tabindex="-1"><a class="header-anchor" href="#类内容如下" aria-hidden="true">#</a> 类内容如下</h2><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> ArLi<span class="token punctuation">.</span>CommonPrj <span class="token comment">//要改此名要注意改 InnerClass 里的引用</span>
<span class="token punctuation">{</span>
    <span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span>
    <span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Diagnostics</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// Shell_NotifyIconEx Class.</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Shell_NotifyIconEx</span>
    <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// ArLi, last fix: 2003.9.12, reference: ArLi.CommonPrj Lib @ http://zpcity.com/arli/</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">readonly</span> <span class="token class-name">System<span class="token punctuation">.</span>Version</span> myVersion <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Version</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//版本声明</span>

        <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">InnerClass<span class="token punctuation">.</span>FormTmp</span> formTmp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// 这个很重要，不能放在构造里，因为它必须和此实例同等生存期才不会被中止消息循环</span>
        <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IntPtr</span> formTmpHwnd <span class="token operator">=</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">;</span> <span class="token comment">// 这是上一行的句柄</span>
        <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name"><span class="token keyword">bool</span></span> VersionOk <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 这是一个由VersionPass 返回的属性，它允许开发者检测当前机子的Shell32.dll(可能在win95 或未知平台上版本) 合适此组，不符则用.net 自己的notifyicon</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">bool</span></span> forgetDelNotifyBox <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 这是一个私有标志，它允许开发者在程序退出时忘记调用DelNotifyBox 来清除图标时会自动在析构里清掉它。</span>

        <span class="token keyword">internal</span> <span class="token class-name">IntPtr</span> formHwnd <span class="token operator">=</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">;</span> <span class="token comment">// 这是调用此组件的主窗口句柄（当前实例有效，可多个icon 不冲突）</span>
        <span class="token keyword">internal</span> <span class="token class-name">IntPtr</span> contextMenuHwnd <span class="token operator">=</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">;</span> <span class="token comment">// 这是菜单的句柄（当前实例有效，可多个icon 不冲突）</span>

        <span class="token keyword">internal</span> <span class="token keyword">delegate</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">delegateOfCallBack</span><span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MouseButtons</span> mb<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">internal</span> <span class="token class-name">delegateOfCallBack</span> _delegateOfCallBack <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">Shell_NotifyIconEx</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 构造</span>
        <span class="token punctuation">{</span>
            WM_NOTIFY_TRAY <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 消息ID +1，避免多个ICON 消息处理冲突</span>
            uID <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 同上</span>
            formTmp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InnerClass<span class="token punctuation">.</span>FormTmp</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 新实例一个消息循环</span>
            formTmpHwnd <span class="token operator">=</span> formTmp<span class="token punctuation">.</span>Handle<span class="token punctuation">;</span> <span class="token comment">// 新实例句柄</span>
            VersionOk <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">GetShell32VersionInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// 版本是否合适，此组件由于重点在气泡提示，它要求Shell32.dll 5.0(ie 5.0) 以上</span>
        <span class="token punctuation">}</span>

        <span class="token operator">~</span><span class="token function">Shell_NotifyIconEx</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span> <span class="token comment">// 析构</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>forgetDelNotifyBox<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">DelNotifyBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//如果开发者忘记则清理icon</span>
        <span class="token punctuation">}</span>

        <span class="token preprocessor property">#<span class="token directive keyword">region</span> API_Consts</span>
        <span class="token keyword">internal</span> <span class="token keyword">readonly</span> <span class="token class-name"><span class="token keyword">int</span></span> WM_NOTIFY_TRAY <span class="token operator">=</span> <span class="token number">0x0400</span> <span class="token operator">+</span> <span class="token number">2001</span><span class="token punctuation">;</span> <span class="token comment">//readonly 表示只在构造可付值</span>
        <span class="token keyword">internal</span> <span class="token keyword">readonly</span> <span class="token class-name"><span class="token keyword">int</span></span> uID <span class="token operator">=</span> <span class="token number">5000</span><span class="token punctuation">;</span>

        <span class="token comment">// 常数定义，有VC 的可以参见 shellapi.h</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIIF_NONE <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIIF_INFO <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIIF_WARNING <span class="token operator">=</span> <span class="token number">0x02</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIIF_ERROR <span class="token operator">=</span> <span class="token number">0x03</span><span class="token punctuation">;</span>

        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIF_MESSAGE <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIF_ICON <span class="token operator">=</span> <span class="token number">0x02</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIF_TIP <span class="token operator">=</span> <span class="token number">0x04</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIF_STATE <span class="token operator">=</span> <span class="token number">0x08</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIF_INFO <span class="token operator">=</span> <span class="token number">0x10</span><span class="token punctuation">;</span>

        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIM_ADD <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIM_MODIFY <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIM_DELETE <span class="token operator">=</span> <span class="token number">0x02</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIM_SETFOCUS <span class="token operator">=</span> <span class="token number">0x03</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIM_SETVERSION <span class="token operator">=</span> <span class="token number">0x04</span><span class="token punctuation">;</span>

        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIS_HIDDEN <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NIS_SHAREDICON <span class="token operator">=</span> <span class="token number">0x02</span><span class="token punctuation">;</span>

        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NOTIFYICON_OLDVERSION <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NOTIFYICON_VERSION <span class="token operator">=</span> <span class="token number">0x03</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;shell32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;Shell_NotifyIcon&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">Shell_NotifyIcon</span><span class="token punctuation">(</span> <span class="token comment">// 这位是主角</span>
            <span class="token class-name"><span class="token keyword">int</span></span> dwMessage<span class="token punctuation">,</span>
            <span class="token keyword">ref</span> <span class="token class-name">NOTIFYICONDATA</span> lpData
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 此API 的作用是当 this.focus() 无效时可以考虑使用，效果很好</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hwnd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>this.Handle, 当前窗体句柄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token punctuation">[</span><span class="token function">DllImport</span><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;SetForegroundWindow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">SetForegroundWindow</span><span class="token punctuation">(</span>
            <span class="token class-name">IntPtr</span> hwnd
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">StructLayout</span><span class="token attribute-arguments"><span class="token punctuation">(</span>LayoutKind<span class="token punctuation">.</span>Sequential<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">private</span> <span class="token keyword">struct</span> <span class="token class-name">NOTIFYICONDATA</span>
        <span class="token punctuation">{</span>   <span class="token comment">// 主角用的结构</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> cbSize<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name">IntPtr</span> hwnd<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> uID<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> uFlags<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> uCallbackMessage<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name">IntPtr</span> hIcon<span class="token punctuation">;</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>ByValTStr<span class="token punctuation">,</span> SizeConst <span class="token operator">=</span> <span class="token number">0x80</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">string</span></span> szTip<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> dwState<span class="token punctuation">;</span> <span class="token comment">// 这里往下几个是 5.0 的精华</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> dwStateMask<span class="token punctuation">;</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>ByValTStr<span class="token punctuation">,</span> SizeConst <span class="token operator">=</span> <span class="token number">0xFF</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">string</span></span> szInfo<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> uTimeoutAndVersion<span class="token punctuation">;</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>ByValTStr<span class="token punctuation">,</span> SizeConst <span class="token operator">=</span> <span class="token number">0x40</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">string</span></span> szInfoTitle<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> dwInfoFlags<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token preprocessor property">#<span class="token directive keyword">endregion</span></span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 建一个结构</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">private</span> <span class="token return-type class-name">NOTIFYICONDATA</span> <span class="token function">GetNOTIFYICONDATA</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> iconHwnd<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> sTip<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> boxTitle<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> boxText<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">NOTIFYICONDATA</span> nData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NOTIFYICONDATA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            nData<span class="token punctuation">.</span>cbSize <span class="token operator">=</span> System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>Marshal<span class="token punctuation">.</span><span class="token function">SizeOf</span><span class="token punctuation">(</span>nData<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 结构的大小</span>
            nData<span class="token punctuation">.</span>hwnd <span class="token operator">=</span> formTmpHwnd<span class="token punctuation">;</span> <span class="token comment">// 处理消息循环的窗体句柄，可以移成主窗体</span>
            nData<span class="token punctuation">.</span>uID <span class="token operator">=</span> uID<span class="token punctuation">;</span> <span class="token comment">// 消息的 WParam，回调时用</span>
            nData<span class="token punctuation">.</span>uFlags <span class="token operator">=</span> NIF_MESSAGE <span class="token operator">|</span> NIF_ICON <span class="token operator">|</span> NIF_TIP <span class="token operator">|</span> NIF_INFO<span class="token punctuation">;</span> <span class="token comment">// 标志，表示由消息、图标、提示、信息组成</span>
            nData<span class="token punctuation">.</span>uCallbackMessage <span class="token operator">=</span> WM_NOTIFY_TRAY<span class="token punctuation">;</span> <span class="token comment">// 消息ID，回调用</span>
            nData<span class="token punctuation">.</span>hIcon <span class="token operator">=</span> iconHwnd<span class="token punctuation">;</span> <span class="token comment">// 图标的句柄，有兴趣的话可以定时改变它变成动画ICON</span>
            nData<span class="token punctuation">.</span>uTimeoutAndVersion <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">|</span> NOTIFYICON_VERSION<span class="token punctuation">;</span> <span class="token comment">// 提示的超时值（几秒后自动消失）和版本</span>
            nData<span class="token punctuation">.</span>dwInfoFlags <span class="token operator">=</span> NIIF_INFO<span class="token punctuation">;</span> <span class="token comment">// 类型标志，有INFO、WARNING、ERROR，更改此值将影响气泡提示框的图标类型</span>

            nData<span class="token punctuation">.</span>szTip <span class="token operator">=</span> sTip<span class="token punctuation">;</span> <span class="token comment">// 图标的提示信息</span>
            nData<span class="token punctuation">.</span>szInfoTitle <span class="token operator">=</span> boxTitle<span class="token punctuation">;</span> <span class="token comment">// 气泡提示框的标题</span>
            nData<span class="token punctuation">.</span>szInfo <span class="token operator">=</span> boxText<span class="token punctuation">;</span> <span class="token comment">// 气泡提示框的提示内容</span>

            <span class="token keyword">return</span> nData<span class="token punctuation">;</span> <span class="token comment">// 这个嘛。。。</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">GetShell32VersionInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span> <span class="token comment">// 返回shell32 的版本</span>
            <span class="token class-name">FileInfo</span> fi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileInfo</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Environment<span class="token punctuation">.</span>SystemDirectory<span class="token punctuation">,</span> <span class="token string">&quot;shell32.dll&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将来的平台shell32 放哪目前不得而知，碰到再改</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>fi<span class="token punctuation">.</span>Exists<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name">FileVersionInfo</span> theVersion <span class="token operator">=</span> FileVersionInfo<span class="token punctuation">.</span><span class="token function">GetVersionInfo</span><span class="token punctuation">(</span>fi<span class="token punctuation">.</span>FullName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> theVersion<span class="token punctuation">.</span>FileVersion<span class="token punctuation">.</span><span class="token function">IndexOf</span><span class="token punctuation">(</span><span class="token char">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">try</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>theVersion<span class="token punctuation">.</span>FileVersion<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">catch</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 加一个新图标</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iconHwnd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>图标句柄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sTip<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>提示, 5.0 最大: 128 char<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>boxTitle<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>气泡标题, 最大: 64 char<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>boxText<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>气泡内容, 最大: 256 char<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span>成功、失败或错误(-1)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">AddNotifyBox</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> iconHwnd<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> sTip<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> boxTitle<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> boxText<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>VersionOk<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

            <span class="token class-name">NOTIFYICONDATA</span> nData <span class="token operator">=</span> <span class="token function">GetNOTIFYICONDATA</span><span class="token punctuation">(</span>iconHwnd<span class="token punctuation">,</span> sTip<span class="token punctuation">,</span> boxTitle<span class="token punctuation">,</span> boxText<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">Shell_NotifyIcon</span><span class="token punctuation">(</span>NIM_ADD<span class="token punctuation">,</span> <span class="token keyword">ref</span> nData<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>forgetDelNotifyBox <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 和add 差不多，不重复了</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">DelNotifyBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>VersionOk<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

            <span class="token class-name">NOTIFYICONDATA</span> nData <span class="token operator">=</span> <span class="token function">GetNOTIFYICONDATA</span><span class="token punctuation">(</span>IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">Shell_NotifyIcon</span><span class="token punctuation">(</span>NIM_DELETE<span class="token punctuation">,</span> <span class="token keyword">ref</span> nData<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>forgetDelNotifyBox <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">ModiNotifyBox</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> iconHwnd<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> sTip<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> boxTitle<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> boxText<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>VersionOk<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

            <span class="token class-name">NOTIFYICONDATA</span> nData <span class="token operator">=</span> <span class="token function">GetNOTIFYICONDATA</span><span class="token punctuation">(</span>iconHwnd<span class="token punctuation">,</span> sTip<span class="token punctuation">,</span> boxTitle<span class="token punctuation">,</span> boxText<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token function">Shell_NotifyIcon</span><span class="token punctuation">(</span>NIM_MODIFY<span class="token punctuation">,</span> <span class="token keyword">ref</span> nData<span class="token punctuation">)</span> <span class="token punctuation">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token preprocessor property">#<span class="token directive keyword">region</span> Optional Module </span><span class="token comment">//这里是可选方法</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 连接一个已存在的 contextMenu</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_formHwnd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>窗体句柄，用来处理菜单的消息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_contextMenuHwnd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>菜单的句柄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConnectMyMenu</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> _formHwnd<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> _contextMenuHwnd<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            formHwnd <span class="token operator">=</span> _formHwnd<span class="token punctuation">;</span>
            contextMenuHwnd <span class="token operator">=</span> _contextMenuHwnd<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 立即清理掉图标、委托和formtmp 资源（好象没什么资源，考虑到可能二次开发挂接就开了这个东东）</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            _delegateOfCallBack <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>formTmp<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 版本适合</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> VersionPass
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>VersionOk<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token preprocessor property">#<span class="token directive keyword">endregion</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token preprocessor property">#<span class="token directive keyword">region</span> FormTmp</span>
<span class="token keyword">namespace</span> <span class="token namespace">ArLi<span class="token punctuation">.</span>CommonPrj<span class="token punctuation">.</span>InnerClass</span>
<span class="token punctuation">{</span>
    <span class="token keyword">internal</span> <span class="token keyword">class</span> <span class="token class-name">FormTmp</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Form</span></span>
    <span class="token punctuation">{</span>

        <span class="token keyword">private</span> <span class="token class-name">ArLi<span class="token punctuation">.</span>CommonPrj<span class="token punctuation">.</span>Shell_NotifyIconEx</span> servicesClass <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// 接受主CLASS 的实例句柄</span>
        <span class="token keyword">internal</span> <span class="token function">FormTmp</span><span class="token punctuation">(</span><span class="token class-name">ArLi<span class="token punctuation">.</span>CommonPrj<span class="token punctuation">.</span>Shell_NotifyIconEx</span> _servicesClass<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            servicesClass <span class="token operator">=</span> _servicesClass<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> WM_LBUTTONDOWN <span class="token operator">=</span> <span class="token number">0x0201</span><span class="token punctuation">;</span> <span class="token comment">// 左键</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> WM_RBUTTONDOWN <span class="token operator">=</span> <span class="token number">0x204</span><span class="token punctuation">;</span> <span class="token comment">// 右键</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> WM_MBUTTONDOWN <span class="token operator">=</span> <span class="token number">0x207</span><span class="token punctuation">;</span> <span class="token comment">// 中键</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;TrackPopupMenu&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">TrackPopupMenu</span><span class="token punctuation">(</span> <span class="token comment">// c# 和vb.net 好象没有了随地popup 了，只要请它老人家出马了</span>
            <span class="token class-name">IntPtr</span> hMenu<span class="token punctuation">,</span>
            <span class="token class-name"><span class="token keyword">int</span></span> wFlags<span class="token punctuation">,</span>
            <span class="token class-name"><span class="token keyword">int</span></span> x<span class="token punctuation">,</span>
            <span class="token class-name"><span class="token keyword">int</span></span> y<span class="token punctuation">,</span>
            <span class="token class-name"><span class="token keyword">int</span></span> nReserved<span class="token punctuation">,</span>
            <span class="token class-name">IntPtr</span> hwnd<span class="token punctuation">,</span>
            <span class="token keyword">ref</span> <span class="token class-name">RECT</span> lprc
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">StructLayout</span><span class="token attribute-arguments"><span class="token punctuation">(</span>LayoutKind<span class="token punctuation">.</span>Sequential<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">private</span> <span class="token keyword">struct</span> <span class="token class-name">RECT</span>
        <span class="token punctuation">{</span> <span class="token comment">// 上面那位用的结构，表示前弹出菜单可用的一个范围大小（一般是全屏幕都让它用，留着搞游戏或视频对话之类的朋友指定菜单可用的范围）</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> Left<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> Top<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> Right<span class="token punctuation">;</span>
            <span class="token keyword">internal</span> <span class="token class-name"><span class="token keyword">int</span></span> Bottom<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">WndProc</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token class-name">Message</span> msg<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>Msg <span class="token operator">==</span> servicesClass<span class="token punctuation">.</span>WM_NOTIFY_TRAY<span class="token punctuation">)</span>
            <span class="token punctuation">{</span> <span class="token comment">// 如果消息相符</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>msg<span class="token punctuation">.</span>WParam <span class="token operator">==</span> servicesClass<span class="token punctuation">.</span>uID<span class="token punctuation">)</span>
                <span class="token punctuation">{</span> <span class="token comment">// 并且消息的WParam 相符</span>
                    <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MouseButtons</span> mb <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MouseButtons<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>msg<span class="token punctuation">.</span>LParam <span class="token operator">==</span> WM_LBUTTONDOWN<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span> <span class="token comment">//如果点击的是左键</span>
                        mb <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MouseButtons<span class="token punctuation">.</span>Left<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>msg<span class="token punctuation">.</span>LParam <span class="token operator">==</span> WM_MBUTTONDOWN<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span> <span class="token comment">//中键</span>
                        mb <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MouseButtons<span class="token punctuation">.</span>Middle<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>msg<span class="token punctuation">.</span>LParam <span class="token operator">==</span> WM_RBUTTONDOWN<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span> <span class="token comment">//右键</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>servicesClass<span class="token punctuation">.</span>contextMenuHwnd <span class="token operator">!=</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">)</span>
                        <span class="token punctuation">{</span> <span class="token comment">//如果有定义过菜单关联</span>
                            <span class="token class-name">RECT</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RECT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            r<span class="token punctuation">.</span>Left <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Screen<span class="token punctuation">.</span>PrimaryScreen<span class="token punctuation">.</span>WorkingArea<span class="token punctuation">.</span>Left<span class="token punctuation">;</span>
                            r<span class="token punctuation">.</span>Right <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Screen<span class="token punctuation">.</span>PrimaryScreen<span class="token punctuation">.</span>WorkingArea<span class="token punctuation">.</span>Right<span class="token punctuation">;</span>
                            r<span class="token punctuation">.</span>Top <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Screen<span class="token punctuation">.</span>PrimaryScreen<span class="token punctuation">.</span>WorkingArea<span class="token punctuation">.</span>Top<span class="token punctuation">;</span>
                            r<span class="token punctuation">.</span>Bottom <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Screen<span class="token punctuation">.</span>PrimaryScreen<span class="token punctuation">.</span>WorkingArea<span class="token punctuation">.</span>Right<span class="token punctuation">;</span>

                            <span class="token function">TrackPopupMenu</span><span class="token punctuation">(</span>
                                servicesClass<span class="token punctuation">.</span>contextMenuHwnd<span class="token punctuation">,</span>
                                <span class="token number">2</span><span class="token punctuation">,</span>
                                System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Cursor<span class="token punctuation">.</span>Position<span class="token punctuation">.</span>X<span class="token punctuation">,</span>
                                System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Cursor<span class="token punctuation">.</span>Position<span class="token punctuation">.</span>Y<span class="token punctuation">,</span>
                                <span class="token number">0</span><span class="token punctuation">,</span>
                                servicesClass<span class="token punctuation">.</span>formHwnd<span class="token punctuation">,</span>
                                <span class="token keyword">ref</span> r
                            <span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">else</span>
                        <span class="token punctuation">{</span> <span class="token comment">//如果没有定义过菜单关联</span>
                            mb <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MouseButtons<span class="token punctuation">.</span>Right<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mb <span class="token operator">!=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MouseButtons<span class="token punctuation">.</span>None <span class="token operator">&amp;&amp;</span> servicesClass<span class="token punctuation">.</span>_delegateOfCallBack <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        servicesClass<span class="token punctuation">.</span><span class="token function">_delegateOfCallBack</span><span class="token punctuation">(</span>mb<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 执行回调</span>
                        <span class="token keyword">return</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">WndProc</span><span class="token punctuation">(</span><span class="token keyword">ref</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token preprocessor property">#<span class="token directive keyword">endregion</span></span>
</code></pre></div><p><strong>用法示例</strong>：</p><ol><li><p>简单示例：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button2_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArLi<span class="token punctuation">.</span>CommonPrj<span class="token punctuation">.</span>Shell_NotifyIconEx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddNotifyBox</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Icon<span class="token punctuation">.</span>Handle<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Text<span class="token punctuation">,</span> <span class="token string">&quot;zpcity.com/arli&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单击这里开始，我将带你畅游API 世界&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>支持菜单和回调的示例：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">GetPoc1</span><span class="token punctuation">(</span><span class="token class-name">MouseButtons</span> mb<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 回调处理</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mb <span class="token operator">==</span> MouseButtons<span class="token punctuation">.</span>Left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;来自菜单1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token class-name">ArLi<span class="token punctuation">.</span>CommonPrj<span class="token punctuation">.</span>Shell_NotifyIconEx</span> o1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArLi<span class="token punctuation">.</span>CommonPrj<span class="token punctuation">.</span>Shell_NotifyIconEx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//这个放外面是用在 o.DelNotifyBox</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button1_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    o1<span class="token punctuation">.</span><span class="token function">AddNotifyBox</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Icon<span class="token punctuation">.</span>Handle<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>Text<span class="token punctuation">,</span><span class="token string">&quot;菜单1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;单击这里开始，我将带你畅游API 世界&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    o1<span class="token punctuation">.</span><span class="token function">ConnectMyMenu</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Handle<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>contextMenu1<span class="token punctuation">.</span>Handle<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 挂上菜单，可选</span>
    o1<span class="token punctuation">.</span>_delegateOfCallBack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArLi<span class="token punctuation">.</span>CommonPrj<span class="token punctuation">.</span>Shell_NotifyIconEx<span class="token punctuation">.</span>delegateOfCallBack</span><span class="token punctuation">(</span>GetPoc1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//定义回调</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>多个notifyicon 的高级应用：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">GetPoc1</span><span class="token punctuation">(</span><span class="token class-name">MouseButtons</span> mb<span class="token punctuation">)</span>
<span class="token punctuation">{</span>   <span class="token comment">// 回调处理</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mb <span class="token operator">==</span> MouseButtons<span class="token punctuation">.</span>Left<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;来自菜单1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token class-name">ArLi<span class="token punctuation">.</span>CommonPrj<span class="token punctuation">.</span>Shell_NotifyIconEx</span> o1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArLi<span class="token punctuation">.</span>CommonPrj<span class="token punctuation">.</span>Shell_NotifyIconEx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//这个放外面是用在 o.DelNotifyBox</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button1_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    o1<span class="token punctuation">.</span><span class="token function">AddNotifyBox</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Icon<span class="token punctuation">.</span>Handle<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Text<span class="token punctuation">,</span> <span class="token string">&quot;菜单1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单击这里开始，我将带你畅游API 世界&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    o1<span class="token punctuation">.</span><span class="token function">ConnectMyMenu</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Handle<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>contextMenu1<span class="token punctuation">.</span>Handle<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 挂上菜单，可选</span>
    o1<span class="token punctuation">.</span>_delegateOfCallBack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArLi<span class="token punctuation">.</span>CommonPrj<span class="token punctuation">.</span>Shell_NotifyIconEx<span class="token punctuation">.</span>delegateOfCallBack</span><span class="token punctuation">(</span>GetPoc1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//定义回调</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">GetPoc2</span><span class="token punctuation">(</span><span class="token class-name">MouseButtons</span> mb<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mb <span class="token operator">==</span> MouseButtons<span class="token punctuation">.</span>Left<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;来自菜单2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token class-name">ArLi<span class="token punctuation">.</span>CommonPrj<span class="token punctuation">.</span>Shell_NotifyIconEx</span> o2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArLi<span class="token punctuation">.</span>CommonPrj<span class="token punctuation">.</span>Shell_NotifyIconEx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//第二个nofityicon 和上面一样</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button2_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    o2<span class="token punctuation">.</span><span class="token function">AddNotifyBox</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Icon<span class="token punctuation">.</span>Handle<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Text<span class="token punctuation">,</span> <span class="token string">&quot;菜单2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单击这里开始，我将带你畅游API 世界&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    o2<span class="token punctuation">.</span><span class="token function">ConnectMyMenu</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Handle<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>contextMenu2<span class="token punctuation">.</span>Handle<span class="token punctuation">)</span><span class="token punctuation">;</span>
    o2<span class="token punctuation">.</span>_delegateOfCallBack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArLi<span class="token punctuation">.</span>CommonPrj<span class="token punctuation">.</span>Shell_NotifyIconEx<span class="token punctuation">.</span>delegateOfCallBack</span><span class="token punctuation">(</span>GetPoc2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>编译成DLL 组件给其它语言：</p><p><code>csc /t:library /doc:./cls_Shell_NotifyIconEx.xml cls_Shell_NotifyIconEx.cs</code></p></li><li><p>关于检测版本是否相符：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> o2<span class="token punctuation">.</span>VersionPass<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 有可能是win98 第一版或95</span>
    <span class="token comment">//todo: 用.net 自己的notifyicon</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>关于ModiNotifyBox：</p><p>它的用法和 AddNotifyBox 基本一样，它主要用来修改原有的图标，比如 MailCheck 模块要用到的实时多次提示、动画图标等等</p></li></ol><h2 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献" aria-hidden="true">#</a> 参考文献</h2><ul><li>Using the Microsoft .NET Compact Framework MessageWindow Class</li></ul><p>http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnnetcomp/html/messagewindow.asp</p><hr><hr><p><strong>对该文的评论</strong>人气：605</p><p>ArLi2003 (2003-9-15 7:08:22)</p><blockquote><p>如何保护不小心多次 AddNotifyBox 失误： // 设o1 为本组件的实例，推荐这样检测 <code>if (o1.VersionPass &amp;&amp; o1._delegateOfCallBack == null) { }</code> 如何删除图标（不删除的话组件析构时也会自动删）： <code>o1.DelNotifyBox(); o1.Dispose(); //可选</code></p></blockquote>`,19),c=[e];function l(k,u){return s(),a("div",null,c)}const r=n(o,[["render",l],["__file","diag7.html.vue"]]);export{r as default};
