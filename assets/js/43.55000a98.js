(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{452:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"随机数的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#随机数的使用"}},[s._v("#")]),s._v(" 随机数的使用")]),s._v(" "),t("p",[s._v("大家可能都用过Chinaren的校友录，不久前它的留言簿上加了一个防止灌水的方法，就是系统每次产生一个由随机的数字和字母组成的图片，每次留言必须正确地输入这些随机产生的字符，否则不能添加留言。这是一个很好的防止恶意攻击的方法，其核心的技术就是如何产生随机数。Chinaren网站是使用PHP实现的，而我们可以充分利用ASP.net的强大功能很轻易地实现。")]),s._v(" "),t("p",[s._v("在.net Framework中提供了一个专门用来产生随机数的类"),t("code",[s._v("System.Random")]),s._v(",使用这个类时必须导入System命名空间。当然，命名空间System在每个ASP.net页面中都是自动导入的，所以我们可以直接使用这个类。")]),s._v(" "),t("p",[s._v("对于随机数，大家都知道，计算机不可能产生完全随机的数字，所谓的随机数发生器都是通过一定的算法对事先选定的随机种子做复杂的运算，用产生的结果来近似的模拟完全随机数，这种随机数被称作伪随机数。伪随机数是以相同的概率从一组有限的数字中选取的。所选数字并不具有完全的随机性，但是从实用的角度而言，其随机程度已足够了。伪随机数的选择是从随机种子开始的，所以为了保证每次得到的伪随机数都足够地“随机”，随机种子的选择就显得非常重要。如果随机种子一样，那么同一个随机数发生器产生的随机数也会一样。一般地，我们使用同系统时间有关的参数作为随机种子，这也是.net Framework中的随机数发生器默认采用的方法。")]),s._v(" "),t("p",[s._v("我们可以使用两种方式初始化一个随机数发生器：")]),s._v(" "),t("p",[s._v("第一种方法不指定随机种子，系统自动选取当前时间作为随机种子：")]),s._v(" "),t("p",[t("code",[s._v("Random ro = new Random();")])]),s._v(" "),t("p",[s._v("第二种方法可以指定一个int型参数作为随机种子：")]),s._v(" "),t("div",{staticClass:"language-csharp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" iSeed"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")]),s._v(" ro "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("Random")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n")])])]),t("p",[s._v("之后，我们就可以使用这个Random类的对象来产生随机数，这时候要用到"),t("code",[s._v("Random.Next()")]),s._v("方法。这个方法使用相当灵活，你甚至可以指定产生的随机数的上下限。")]),s._v(" "),t("p",[s._v("不指定上下限的使用如下：")]),s._v(" "),t("div",{staticClass:"language-csharp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" iResult"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\niResult"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Next")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n")])])]),t("p",[s._v("下面的代码指定返回小于100的随机数：")]),s._v(" "),t("div",{staticClass:"language-csharp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" iResult"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" iUp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\niResult"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Next")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("iUp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])])]),t("p",[s._v("而下面这段代码则指定返回值必须在50-100的范围之内：")]),s._v(" "),t("div",{staticClass:"language-csharp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" iResult"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" iUp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" iDown"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\niResult"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Next")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("iDown"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("iUp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("除了"),t("code",[s._v("Random.Next()")]),s._v("方法之外，Random类还提供了"),t("code",[s._v("Random.NextDouble()")]),s._v("方法产生一个范围在0.0-1.0之间的随机的双精度浮点数：")]),s._v(" "),t("div",{staticClass:"language-csharp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")])]),s._v(" dResult"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ndResult"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NextDouble")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);