(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{456:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"c-中结构与类的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-中结构与类的区别"}},[s._v("#")]),s._v(" c#中结构与类的区别")]),s._v(" "),t("p",[s._v("目录")]),s._v(" "),t("ul",[t("li",[s._v("类与结构的实例比较")]),s._v(" "),t("li",[s._v("类与结构的差别")]),s._v(" "),t("li",[s._v("如何选择结构还是类")])]),s._v(" "),t("h2",{attrs:{id:"一-类与结构的示例比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-类与结构的示例比较"}},[s._v("#")]),s._v(" 一．类与结构的示例比较")]),s._v(" "),t("p",[s._v("结构示例：")]),s._v(" "),t("div",{staticClass:"language-csharp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" Name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v("  height"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v("  weight"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("overWeight")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//implement something")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("类示例：")]),s._v(" "),t("div",{staticClass:"language-csharp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestTime")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" hours"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" minutes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" seconds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("passtime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//implementation of behavior")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("调用过程：")]),s._v(" "),t("div",{staticClass:"language-csharp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s._v("ovid")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" Myperson "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//声明结构")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestTime")]),s._v(" Mytime "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("TestTime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//声明类")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("从上面的例子中我们可以看到，类的声明和结构的声明非常类似，只是限定符后面是 "),t("code",[s._v("struct")]),s._v(" 还是 "),t("code",[s._v("class")]),s._v(" 的区别，而且使用时，定义新的结构和定义新的类的方法也非常类似。那么类和结构的具体区别是什么呢？")]),s._v(" "),t("h2",{attrs:{id:"二-类与结构的差别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-类与结构的差别"}},[s._v("#")]),s._v(" 二 .类与结构的差别")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("值类型与引用类型")]),s._v(" "),t("p",[s._v("结构是值类型：值类型在堆栈上分配地址，所有的基类型都是结构类型，例如："),t("code",[s._v("int")]),s._v(" 对应"),t("code",[s._v("System.int32")]),s._v(" 结构，"),t("code",[s._v("string")]),s._v(" 对应 "),t("code",[s._v("system.string")]),s._v(" 结构 ，通过使用结构可以创建更多的"),t("strong",[s._v("值类型")])]),s._v(" "),t("p",[s._v("类是引用类型：引用类型在堆上分配地址")]),s._v(" "),t("p",[s._v("堆栈的执行效率要比堆的执行效率高，可是堆栈的资源有限，不适合处理大的逻辑复杂的对象。所以结构处理作为基类型对待的小对象，而类处理某个商业逻辑")]),s._v(" "),t("p",[s._v("因为结构是值类型所以结构之间的赋值可以创建新的结构，而类是引用类型，类之间的赋值只是复制引用")]),s._v(" "),t("p",[s._v("注：")]),s._v(" "),t("p",[s._v("虽然结构与类的类型不一样，可是他们的基类型都是对象"),t("code",[s._v("（object）")]),s._v(",c#中所有类型的基类型都是"),t("code",[s._v("object")])]),s._v(" "),t("p",[s._v("虽然结构的初始化也使用了 "),t("code",[s._v("new")]),s._v(" 操作符可是结构对象依然分配在堆栈上而不是堆上，如果不使用“新建”(new)，那么在初始化所有字段之前，字段将保持未赋值状态，且对象不可用")])]),s._v(" "),t("li",[t("p",[s._v("继承性")]),s._v(" "),t("p",[s._v("结构：不能从另外一个结构或者类继承，本身也不能被继承，虽然结构没有明确的用"),t("code",[s._v("sealed")]),s._v("声明，可是结构是隐式的"),t("code",[s._v("sealed")]),s._v(".")]),s._v(" "),t("p",[s._v("类：完全可扩展的，除非显示的声明"),t("code",[s._v("sealed")]),s._v("否则类可以继承其他类和接口，自身也能被继承")]),s._v(" "),t("p",[s._v("注：虽然结构不能被继承 可是结构能够继承接口，方法和类继承接口一样")]),s._v(" "),t("p",[s._v("例如:结构实现接口")]),s._v(" "),t("div",{staticClass:"language-csharp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IImage")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Paint")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Picture")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token type-list"}},[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IImage")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Paint")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// painting code goes here")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" z"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// other struct members")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("内部结构：")]),s._v(" "),t("p",[s._v("结构：")]),s._v(" "),t("ul",[t("li",[s._v("没有默认的构造函数，但是可以添加构造函数")]),s._v(" "),t("li",[s._v("没有析构函数")]),s._v(" "),t("li",[s._v("没有 "),t("code",[s._v("abstract")]),s._v(" 和 "),t("code",[s._v("sealed")]),s._v("(因为不能继承)")]),s._v(" "),t("li",[s._v("不能有"),t("code",[s._v("protected")]),s._v("修饰符")]),s._v(" "),t("li",[s._v("可以不使用"),t("code",[s._v("new")]),s._v("初始化")])]),s._v(" "),t("p",[s._v("在结构中初始化实例字段是错误的")]),s._v(" "),t("p",[s._v("类：")]),s._v(" "),t("ul",[t("li",[s._v("有默认的构造函数")]),s._v(" "),t("li",[s._v("有析构函数")]),s._v(" "),t("li",[s._v("可以使用 "),t("code",[s._v("abstract")]),s._v(" 和 "),t("code",[s._v("sealed")])]),s._v(" "),t("li",[s._v("可以有"),t("code",[s._v("protected")]),s._v("修饰符")]),s._v(" "),t("li",[s._v("必须使用"),t("code",[s._v("new")]),s._v("初始化")])])])]),s._v(" "),t("h2",{attrs:{id:"三-如何选择结构还是类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三-如何选择结构还是类"}},[s._v("#")]),s._v(" 三．如何选择结构还是类")]),s._v(" "),t("p",[s._v("讨论了结构与类的相同之处和差别之后，下面讨论如何选择使用结构还是类：")]),s._v(" "),t("ol",[t("li",[s._v("堆栈的空间有限，对于大量的逻辑的对象，创建类要比创建结构好一些")]),s._v(" "),t("li",[s._v("结构表示如点、矩形和颜色这样的轻量对象，例如，如果声明一个含有 1000 个点对象的数组，则将为引用每个对象分配附加的内存。在此情况下，结构的成本较低。")]),s._v(" "),t("li",[s._v("在表现抽象和多级别的对象层次时，类是最好的选择")]),s._v(" "),t("li",[s._v("大多数情况下该类型只是一些数据时，结构时最佳的选择")])])])}),[],!1,null,null,null);t.default=e.exports}}]);