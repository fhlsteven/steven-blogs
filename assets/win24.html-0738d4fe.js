import{_ as n,o as s,c as a,a as t}from"./app-d9da1b6d.js";const p={},o=t(`<h1 id="窗体技巧集合" tabindex="-1"><a class="header-anchor" href="#窗体技巧集合" aria-hidden="true">#</a> 窗体技巧集合</h1><h2 id="窗体技巧集-原创" tabindex="-1"><a class="header-anchor" href="#窗体技巧集-原创" aria-hidden="true">#</a> 窗体技巧集（原创）</h2><p>1。窗体总在最前面： 设置topMost属性</p><p>2。将窗体程序编译成类库</p><p>项目属性/通用属性/常规/输出类型 选择“类库”</p><p>继承窗体的使用</p><p>添加继承的窗体/打开/浏览/ 选择一个类库文件（*.dll）</p><p>3。设置窗体图标：</p><ul><li>通过属性栏ICON来设。</li><li><code>Icon i=new Icon(&quot;..\\\\..\\\\banana.ico&quot;); this.Icon=i;</code></li></ul><p>4.动态设置窗体的光标</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">Cursor</span> cr<span class="token punctuation">;</span>
cr <span class="token operator">=</span> <span class="token keyword">new</span>  <span class="token constructor-invocation class-name">Cursor</span><span class="token punctuation">(</span><span class="token string">&quot;..\\\\..\\\\no.cur&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>Cursor <span class="token operator">=</span> cr<span class="token punctuation">;</span>
</code></pre></div><h2 id="窗体的动画效果" tabindex="-1"><a class="header-anchor" href="#窗体的动画效果" aria-hidden="true">#</a> 窗体的动画效果</h2><h3 id="一。形状变化" tabindex="-1"><a class="header-anchor" href="#一。形状变化" aria-hidden="true">#</a> 一。形状变化</h3><p>1 函数AnimateWindow</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">AnimateWindow</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hwnd<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> dwTime<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> dwFlags<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> AW_HOR_POSITIVE <span class="token operator">=</span> <span class="token number">0x0001</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> AW_HOR_NEGATIVE <span class="token operator">=</span> <span class="token number">0x0002</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> AW_VER_POSITIVE <span class="token operator">=</span> <span class="token number">0x0004</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> AW_VER_NEGATIVE <span class="token operator">=</span> <span class="token number">0x0008</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> AW_CENTER <span class="token operator">=</span> <span class="token number">0x0010</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> AW_HIDE <span class="token operator">=</span> <span class="token number">0x10000</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> AW_ACTIVATE <span class="token operator">=</span> <span class="token number">0x20000</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> AW_SLIDE <span class="token operator">=</span> <span class="token number">0x40000</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> AW_BLEND <span class="token operator">=</span> <span class="token number">0x80000</span><span class="token punctuation">;</span>  
</code></pre></div><p>函数原型：BOOL AnimateWindow(HWND hWnd，DWORD dwTime，DWORD dwFlags)。<br> 函数功能：该函数能在显示与隐藏窗口时产生两种特殊类型的动画效果：滚动动画和滑动动画。<br> 参数含义：<br> hWnd：指定产生动画的窗口的句柄。<br> dwTime：指明动画持续的时间（以微秒计），完成一个动画的标准时间为200微秒。</p><p>dwFags：指定动画类型。这个参数可以是一个或多个下列标志的组合。标志描述：</p><p>AW_SLIDE：使用滑动类型。缺省则为滚动动画类型。当使用AW_CENTER标志时，这个标志就被忽略。<br> AW_ACTIVATE：激活窗口。在使用了AW_HIDE标志后不能使用这个标志。</p><p>AW_BLEND：实现淡出效果。只有当hWnd为顶层窗口的时候才可以使用此标志。</p><p>AW_HIDE：隐藏窗口，缺省则显示窗口。</p><p>AW_CENTER：若使用了AW_HIDE标志，则使窗口向内重叠，即收缩窗口；若未使用AW_HIDE标志，则使窗口向外扩展，即展开窗口。</p><p>AW_HOR_POSITIVE：自左向右显示窗口。该标志可以在滚动动画和滑动动画中使用。当使用AW_CENTER标志时，该标志将被忽略。</p><p>AW_VER_POSITIVE：自顶向下显示窗口。该标志可以在滚动动画和滑动动画中使用。当使用AW_CENTER标志时，该标志将被忽略。</p><p>AW_VER_NEGATIVE：自下向上显示窗口。该标志可以在滚动动画和滑动动画中使用。当使用AW_CENTER标志时，该标志将被忽略。</p><p>返回值：如果函数成功，返回值为非零；如果函数失败，返回值为零。</p><p>在下列情况下函数将失败：</p><p>1 窗口使用了窗口边界；<br> 2 窗口已经可见仍要显示窗口；<br> 3 窗口已经隐藏仍要隐藏窗口。</p><p>2。调用</p><p>显示：<br><code>AnimateWindow(this.Handle,1000, AW_CENTER | AW_ACTIVATE);</code></p><p>消失：</p><div class="language-txt" data-ext="txt"><pre class="language-txt"><code>AnimateWindow(this.Handle,1000,AW_CENTER | AW_HIDE);收缩
AnimateWindow(this.Handle,1000,AW_HIDE| AW_BLEND) 淡出
AnimateWindow(this.Handle, 1000, AW_SLIDE | AW_HIDE | AW_VER_POSITIVE);上下左右滑动消失
</code></pre></div><h3 id="二。设置窗体渐显效果" tabindex="-1"><a class="header-anchor" href="#二。设置窗体渐显效果" aria-hidden="true">#</a> 二。设置窗体渐显效果</h3><p>添加 timer 控件</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Form1_Load</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>timer1<span class="token punctuation">.</span>Enabled<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>Opacity<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">timer1_Tick</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Opacity<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Opacity<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>Opacity<span class="token operator">+</span><span class="token number">0.05</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>timer1<span class="token punctuation">.</span>Enabled<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="如何使窗体部分区域透明" tabindex="-1"><a class="header-anchor" href="#如何使窗体部分区域透明" aria-hidden="true">#</a> 如何使窗体部分区域透明</h2><p><strong>实现</strong>：</p><p>向窗体添加 panel 控件，将其设置为一种颜色。<br> 设置窗体的 TransparencyKey 属性设为和 panel 相同的颜色。</p><p><code>this.TransparencyKey = System.Drawing.Color.White;</code></p><p><strong>窗体透明</strong>；</p><p><code>this.Opacity=0.5;</code></p><h2 id="多边形窗体" tabindex="-1"><a class="header-anchor" href="#多边形窗体" aria-hidden="true">#</a> 多边形窗体</h2><ol><li><p>引用 <code>using System.Runtime.InteropServices;</code></p></li><li><p>函数</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">CreatePolygonRgn</span><span class="token punctuation">(</span><span class="token class-name">Point<span class="token punctuation">[</span><span class="token punctuation">]</span></span> lpPoint<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> nCount<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> nPolyFillMode<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">SetWindowRgn</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">,</span><span class="token class-name">IntPtr</span> hRgn<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">bool</span></span> bRedraw<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> WINDING <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>创建形状</p></li></ol><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Form1_Load</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Point<span class="token punctuation">[</span><span class="token punctuation">]</span></span> pt<span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Width <span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>Height<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>Height<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Width<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>Height<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Width<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token class-name">IntPtr</span> m_rgn<span class="token punctuation">;</span>
    m_rgn<span class="token operator">=</span><span class="token function">CreatePolygonRgn</span><span class="token punctuation">(</span>pt<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>WINDING<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">SetWindowRgn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Handle<span class="token punctuation">,</span>m_rgn<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="字型窗体" tabindex="-1"><a class="header-anchor" href="#字型窗体" aria-hidden="true">#</a> 字型窗体</h2><p><strong>实现</strong>：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">CreateFont</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> H<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> W<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> E<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> O<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> FW<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> I<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> u<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> S<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> C<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> OP<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> CP<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> Q<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> PAF<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">string</span></span> F<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">GetDC</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hwnd<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">BeginPath</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hdc<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">EndPath</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hdc<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">PathToRegion</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hdc<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">SetBkMode</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hdc<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> nBkMode<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">SelectObject</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hdc<span class="token punctuation">,</span><span class="token class-name">IntPtr</span> hObject<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">TextOut</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hdc<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> x<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> y<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">string</span></span> lpString<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> nCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">SetWindowRgn</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hwnd<span class="token punctuation">,</span><span class="token class-name">IntPtr</span> hRgn<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">bool</span></span> bRedraw<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> FW_HEAVY <span class="token operator">=</span> <span class="token number">900</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> ANSI_CHARSET <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> OUT_DEFAULT_PRECIS <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> CLIP_DEFAULT_PRECIS <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> DEFAULT_QUALITY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> DEFAULT_PITCH <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> FF_SWISS <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> TRANSPARENT <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Form1_Load</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">IntPtr</span> dc<span class="token operator">=</span><span class="token function">GetDC</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Handle<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IntPtr</span> m_Font<span class="token operator">=</span><span class="token function">CreateFont</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> FW_HEAVY<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
                    <span class="token number">0</span><span class="token punctuation">,</span> ANSI_CHARSET<span class="token punctuation">,</span> OUT_DEFAULT_PRECIS<span class="token punctuation">,</span>
                    CLIP_DEFAULT_PRECIS<span class="token punctuation">,</span> DEFAULT_QUALITY<span class="token punctuation">,</span>
                    DEFAULT_PITCH <span class="token operator">|</span> FF_SWISS<span class="token punctuation">,</span> <span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//创建字体</span>

    <span class="token function">BeginPath</span><span class="token punctuation">(</span>dc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//开始记录窗体轮廓路径</span>

    <span class="token function">SetBkMode</span><span class="token punctuation">(</span>dc<span class="token punctuation">,</span>TRANSPARENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//设置背景为透明模式,这是必须有的</span>

    <span class="token class-name">IntPtr</span> m_OldFont<span class="token operator">=</span><span class="token function">SelectObject</span><span class="token punctuation">(</span>dc<span class="token punctuation">,</span>m_Font<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">TextOut</span><span class="token punctuation">(</span>dc<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;C#&quot;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">SelectObject</span><span class="token punctuation">(</span>dc<span class="token punctuation">,</span>m_OldFont<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">EndPath</span><span class="token punctuation">(</span>dc<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//结束记录窗体轮廓路径</span>

    <span class="token class-name">IntPtr</span> m_wndRgn<span class="token operator">=</span><span class="token function">PathToRegion</span><span class="token punctuation">(</span>dc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//把所记录的路径转化为窗体轮廓句柄</span>

    <span class="token function">SetWindowRgn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Handle<span class="token punctuation">,</span>m_wndRgn<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//赋予窗体指定的轮廓形状</span>

<span class="token punctuation">}</span>
</code></pre></div><h2 id="用获取路径的方法得到圆形窗体" tabindex="-1"><a class="header-anchor" href="#用获取路径的方法得到圆形窗体" aria-hidden="true">#</a> 用获取路径的方法得到圆形窗体</h2><p>1.<strong>相关函数</strong></p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">BeginPath</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hdc<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">SetBkMode</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hdc<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> nBkMode<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> TRANSPARENT <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">EndPath</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hdc<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">PathToRegion</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hdc<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">Ellipse</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hdc<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> X1<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> Y1<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> X2<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> Y2<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">SetWindowRgn</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hwnd<span class="token punctuation">,</span><span class="token class-name">IntPtr</span> hRgn<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">bool</span></span> bRedraw<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">GetDC</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hwnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>2.<strong>创建窗体</strong></p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Form1_Load</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">IntPtr</span> dc<span class="token punctuation">;</span>
    <span class="token class-name">IntPtr</span> region<span class="token punctuation">;</span>
    dc<span class="token operator">=</span><span class="token function">GetDC</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Handle<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">BeginPath</span><span class="token punctuation">(</span>dc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//根据路径创建不规则窗体</span>
    <span class="token function">SetBkMode</span><span class="token punctuation">(</span>dc<span class="token punctuation">,</span>TRANSPARENT<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//设置为透明模式</span>
    <span class="token function">Ellipse</span><span class="token punctuation">(</span>dc<span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">220</span><span class="token punctuation">,</span><span class="token number">220</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">EndPath</span><span class="token punctuation">(</span>dc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    region<span class="token operator">=</span><span class="token function">PathToRegion</span><span class="token punctuation">(</span>dc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">SetWindowRgn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Handle<span class="token punctuation">,</span>region<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre></div><p>3.<strong>移动窗体过程</strong></p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> WM_NCHITTEST <span class="token operator">=</span> <span class="token number">0x0084</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> HTCLIENT <span class="token operator">=</span> <span class="token number">0x0001</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> HTCAPTION <span class="token operator">=</span> <span class="token number">0x0002</span><span class="token punctuation">;</span>
<span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">WndProc</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Message</span> m<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">switch</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>Msg<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">case</span> WM_NCHITTEST<span class="token punctuation">:</span>
            <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">WndProc</span><span class="token punctuation">(</span><span class="token keyword">ref</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span>Result<span class="token operator">==</span><span class="token punctuation">(</span>IntPtr<span class="token punctuation">)</span>HTCLIENT<span class="token punctuation">)</span>
                m<span class="token punctuation">.</span>Result<span class="token operator">=</span><span class="token punctuation">(</span>IntPtr<span class="token punctuation">)</span>HTCAPTION<span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token punctuation">:</span>
            <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">WndProc</span><span class="token punctuation">(</span><span class="token keyword">ref</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="渐变的窗口背景" tabindex="-1"><a class="header-anchor" href="#渐变的窗口背景" aria-hidden="true">#</a> 渐变的窗口背景</h2><p><strong>实现</strong>：</p><p>1.<code>using System.Drawing.Drawing2D;</code></p><p>2.Form1_Paint</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Form1_Paint</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>PaintEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Graphics</span> g<span class="token operator">=</span>e<span class="token punctuation">.</span>Graphics<span class="token punctuation">;</span>
    <span class="token class-name">Color</span> FColor<span class="token operator">=</span>Color<span class="token punctuation">.</span>Blue<span class="token punctuation">;</span>
    <span class="token class-name">Color</span> TColor<span class="token operator">=</span>Color<span class="token punctuation">.</span>Yellow<span class="token punctuation">;</span>

    <span class="token class-name">Brush</span> b <span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">LinearGradientBrush</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ClientRectangle<span class="token punctuation">,</span> FColor<span class="token punctuation">,</span> TColor<span class="token punctuation">,</span> LinearGradientMode<span class="token punctuation">.</span>ForwardDiagonal<span class="token punctuation">)</span><span class="token punctuation">;</span>

    g<span class="token punctuation">.</span><span class="token function">FillRectangle</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>ClientRectangle<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>3.Form1_Resize</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Form1_Resize</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">Invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="无标题窗体的拖动" tabindex="-1"><a class="header-anchor" href="#无标题窗体的拖动" aria-hidden="true">#</a> 无标题窗体的拖动</h2><p><strong>方法1</strong>：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token class-name">Point</span> m_point<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SmallWindow_MouseDown</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MouseEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    m_point<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>X<span class="token punctuation">,</span>e<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SmallWindow_MouseMove</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MouseEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>Button<span class="token operator">==</span>MouseButtons<span class="token punctuation">.</span>Left<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//Point cp=new Point(e.X,e.Y);</span>
        <span class="token class-name">Point</span> cp<span class="token operator">=</span>Control<span class="token punctuation">.</span>MousePosition<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Location<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>cp<span class="token punctuation">.</span>X<span class="token operator">-</span>m_point<span class="token punctuation">.</span>X<span class="token punctuation">,</span>cp<span class="token punctuation">.</span>Y<span class="token operator">-</span>m_point<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p><strong>方法2</strong>：</p><p>1。<code>using System.Runtime.InteropServices;</code></p><p>2。倒入库</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">ReleaseCapture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">SendMessage</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hwnd<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> wMsg<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> wParam<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> lParam<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>3。定义常量</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> WM_SYSCOMMAND<span class="token operator">=</span><span class="token number">0x0112</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> SC_MOVE<span class="token operator">=</span><span class="token number">0xF010</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> HTCAPTION<span class="token operator">=</span><span class="token number">0x0002</span><span class="token punctuation">;</span>
</code></pre></div><p>4。添加 MouseDown 消息</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Form1_MouseDown</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MouseEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">ReleaseCapture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">SendMessage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Handle<span class="token punctuation">,</span>WM_SYSCOMMAND<span class="token punctuation">,</span>SC_MOVE<span class="token operator">+</span>HTCAPTION<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,71),e=[o];function c(l,u){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","win24.html.vue"]]);export{i as default};
