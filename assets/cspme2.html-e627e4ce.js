import{_ as s,o as n,c as a,d as p}from"./app-35fb03de.js";const t={},e=p(`<h1 id="c-的消息处理方法" tabindex="-1"><a class="header-anchor" href="#c-的消息处理方法" aria-hidden="true">#</a> C#的消息处理方法</h1><p>ju_feng csdn 2003-6-4</p><p>在C#中，程序采用了的驱动采用了事件驱动而不是原来的消息驱动，虽然.net框架提供的事件已经十分丰富，但是在以前的系统中定义了丰富的消息对系统的编程提供了方便的实现方法，因此在C#中使用消息有时候还是大大提高编程的效率的。</p><h2 id="_1-定义消息" tabindex="-1"><a class="header-anchor" href="#_1-定义消息" aria-hidden="true">#</a> 1 定义消息</h2><p>在c#中消息需要定义成windows系统中的原始的16进制数字，比如</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> WM_Lbutton <span class="token operator">=</span> <span class="token number">0x201</span><span class="token punctuation">;</span> <span class="token comment">//定义了鼠标的左键点击消息</span>
<span class="token keyword">public</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> USER <span class="token operator">=</span> <span class="token number">0x0400</span> <span class="token comment">// 是windows系统定义的用户消息</span>
</code></pre></div><h2 id="_2-消息发送" tabindex="-1"><a class="header-anchor" href="#_2-消息发送" aria-hidden="true">#</a> 2 消息发送</h2><p>消息发送是通过windows提供的API函数SendMessage来实现的它的原型定义为</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;User32.dll&quot;</span><span class="token punctuation">,</span>EntryPoint<span class="token operator">=</span><span class="token string">&quot;SendMessage&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">SendMessage</span><span class="token punctuation">(</span>
    <span class="token class-name"><span class="token keyword">int</span></span> hWnd<span class="token punctuation">,</span> <span class="token comment">// handle to destination window</span>
    <span class="token class-name"><span class="token keyword">int</span></span> Msg<span class="token punctuation">,</span> <span class="token comment">// message</span>
    <span class="token class-name"><span class="token keyword">int</span></span> wParam<span class="token punctuation">,</span> <span class="token comment">// first message parameter</span>
    <span class="token keyword">int</span> lParam <span class="token comment">// second message parameter</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="_3-消息的接受" tabindex="-1"><a class="header-anchor" href="#_3-消息的接受" aria-hidden="true">#</a> 3 消息的接受</h3><p>在C#中，任何一个窗口都有也消息的接收处理函数，就是defproc函数</p><p>你可以在form中重载该函数来处理消息</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DefWndProc</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token class-name">System<span class="token punctuation">.</span>WinForms<span class="token punctuation">.</span>Message</span> m<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">switch</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>msg<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">case</span> WM_Lbutton <span class="token punctuation">:</span>
            <span class="token doc-comment comment">///string与MFC中的CString的Format函数的使用方法有所不同</span>
            <span class="token class-name"><span class="token keyword">string</span></span> message <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;收到消息!参数为:{0},{1}&quot;</span><span class="token punctuation">,</span>m<span class="token punctuation">.</span>wParam<span class="token punctuation">,</span>m<span class="token punctuation">.</span>lParam<span class="token punctuation">)</span><span class="token punctuation">;</span>
            MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token doc-comment comment">///显示一个消息框</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token punctuation">:</span>
            <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">DefWndProc</span><span class="token punctuation">(</span><span class="token keyword">ref</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token doc-comment comment">///调用基类函数处理非自定义消息。</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>其实，C#中的事件也是通过封装系统消息来实现的，如果你在DefWndProc函数中不处理该<br> 那么，他会交给系统来处理该消息，系统便会通过代理来实现鼠标单击的处理函数，因此你可以通过defproc函数来拦截消息，比如你想拦截某个按钮的单击消息</p><h3 id="_4-c-中其他的消息处理方法" tabindex="-1"><a class="header-anchor" href="#_4-c-中其他的消息处理方法" aria-hidden="true">#</a> 4 C#中其他的消息处理方法</h3><p>在C#中有的时候需要对控件的消息进行预处理，比如你用owc的spreedsheet控件来处理Excel文件，你不想让用户可以随便选中数据进行编辑，你就可以屏蔽掉鼠标事件，这个时候就必须拦截系统预先定义好的事件（这在MFC中称为子类化），你可以通过C#提供的一个接口IMessageFilter来实现消息的过滤</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Form1</span><span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Form</span><span class="token punctuation">,</span><span class="token class-name">IMessageFilter</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> WM_MOUSEMOVE <span class="token operator">=</span> <span class="token number">0x200</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">PreFilterMessage</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token class-name">Message</span> m<span class="token punctuation">)</span> 
    <span class="token punctuation">{</span> 
        <span class="token class-name">Keys</span> keyCode <span class="token operator">=</span> <span class="token punctuation">(</span>Keys<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>m<span class="token punctuation">.</span>WParam <span class="token operator">&amp;</span> Keys<span class="token punctuation">.</span>KeyCode<span class="token punctuation">;</span> 
        <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>Msg <span class="token operator">==</span> m<span class="token punctuation">.</span>Msg<span class="token operator">==</span>WM_MOUSEMOVE<span class="token punctuation">)</span> <span class="token comment">//||m.Msg == WM_LBUTTONDOWN </span>
        <span class="token punctuation">{</span> 
            <span class="token comment">//MessageBox.Show(&quot;Ignoring Escape...&quot;); </span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> 
        <span class="token punctuation">}</span> 
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,17),o=[e];function c(l,k){return n(),a("div",null,o)}const r=s(t,[["render",c],["__file","cspme2.html.vue"]]);export{r as default};
