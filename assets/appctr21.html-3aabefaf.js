import{_ as n,o as s,c as a,a as t}from"./app-d9da1b6d.js";const p={},o=t(`<h1 id="全面掌握c-中的拖放操作" tabindex="-1"><a class="header-anchor" href="#全面掌握c-中的拖放操作" aria-hidden="true">#</a> 全面掌握C＃中的拖放操作</h1><p>随着桌面系统的推出，利用鼠标的拖放（Drag and Drop）操作由于其简单、直接，受到了越来越多的读者的欢迎，为迎合这种趋势，越来越多程序员在自己的程序中使用了拖放操作。拖放操作方便了程序的使用者，但由于拖放操作在程序中的设计工作比较还有点麻烦，甚至是一个难点，许多程序员对其都有点心有余悸。本文就结合微软公司最新的.Net程序开发语言--C＃，来全面介绍一下在C＃中是如何处理拖放操作的。</p><p>在本文中，我们是通过二个代表组件，也是在拖放操作中经常使用到的二个组件--TreeView组件和ListView组件，之间互相进行拖放操作来说明此类问题的。在进行拖放操作之前，必须要对进行拖放操作的组件的&quot;AllowDrop&quot;属性值设定为&quot;True&quot;，因为此属性是确定组件是否可以进行拖放操作的。</p><h2 id="一-本文中介绍的程序的设计和运行的软件环境" tabindex="-1"><a class="header-anchor" href="#一-本文中介绍的程序的设计和运行的软件环境" aria-hidden="true">#</a> 一． 本文中介绍的程序的设计和运行的软件环境</h2><p>（1）.微软公司视窗2000服务器版</p><p>（2）..Net FrameWork SDK Beta 2</p><h2 id="二-由treeview组件到listview组件的拖放操作" tabindex="-1"><a class="header-anchor" href="#二-由treeview组件到listview组件的拖放操作" aria-hidden="true">#</a> 二． 由TreeView组件到ListView组件的拖放操作</h2><p>要完成此次的拖放操作，必须处理好三种事件：&quot;ItemDrag&quot;、&quot;DragEnter&quot;、&quot;DragDrop&quot;。其中只有第一种事件是在源组件中触发的，另外二种事件是在目标组件中触发的。其中当用户拖动组件触发&quot;ItemDrag&quot;事件；当拖动数据进入目标组件区域触发&quot;DragEnter&quot;事件；当用户在目标组件区域放置拖动的数据触发&quot;DragDrop&quot;事件。下面就根据拖放操作的操作顺序来详细介绍：</p><h3 id="_1-开始-拖-drag-操作" tabindex="-1"><a class="header-anchor" href="#_1-开始-拖-drag-操作" aria-hidden="true">#</a> （1）.开始&quot;拖&quot;（Drag）操作</h3><p>通过&quot;DoDragDrop&quot;方法拉开了拖放操作的第一步。&quot;DoDragDrop&quot;方法的语法为：</p><p><code>DoDragDrop (object data , DragDropEffects allowedEffects);</code></p><p>其中第二个参数来是说明此次拖放操作最后所要实现的效果，因为拖放操作有时实现的效果是把源组件中的内容&quot;拖&quot;到目标组件中，这种效果就是&quot;Move&quot;；有时拖放的效果是在目标组件中加入拖动的数据，对源组件的内容是没有什么影响的，这种效果就是&quot;Copy&quot;。当然无论是&quot;Move&quot;还是&quot;Copy&quot;，这都要通过具体的编程来实现，设定这些效果只是告诉操作系统，你进行拖放操作的类型，从而为拖放操作设定特定的图标。此例中实现开始&quot;拖放&quot;操作的具体实现代码如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">treeView1_ItemDrag</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">ItemDragEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">string</span></span> strItem <span class="token operator">=</span> e<span class="token punctuation">.</span>Item<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//开始进行&quot;Drag&quot;操作</span>
    <span class="token function">DoDragDrop</span><span class="token punctuation">(</span>strItem<span class="token punctuation">,</span> DragDropEffects<span class="token punctuation">.</span>Copy <span class="token operator">|</span> DragDropEffects<span class="token punctuation">.</span>Move<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>在上面代码中，我们定义的拖放数据类型是字符串，其实拖放的数据类型可以是很多种的，你可以通过修改&quot;DoDragDrop&quot;方法的第一个参数来设定你所要拖放数据类型，譬如：位图或者其他什么。</p><h3 id="_2-目标组件允许进行拖放操作" tabindex="-1"><a class="header-anchor" href="#_2-目标组件允许进行拖放操作" aria-hidden="true">#</a> （2）.目标组件允许进行拖放操作</h3><p>既然你已经开始进行拖放操作，你还必须告诉你要拖放到的目标组件，要接受你所拖放的数据，&quot;DragEnter&quot;事件正好可以处理。在下列的代码中，我们是通过判断拖放数据类型来确定是否接受拖放，如果是字符串，则可以，否则，则不行。具体代码如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">listView1_DragEnter</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">DragEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//判断是否目前拖动的数据是字符串，如果是，则拖动符串对目的组件进行拷贝</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Data<span class="token punctuation">.</span><span class="token function">GetDataPresent</span><span class="token punctuation">(</span>DataFormats<span class="token punctuation">.</span>Text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        e<span class="token punctuation">.</span>Effect <span class="token operator">=</span> DragDropEffects<span class="token punctuation">.</span>Move<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        e<span class="token punctuation">.</span>Effect <span class="token operator">=</span> DragDropEffects<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_3-获得拖放的字符串-在目标组件中加入相应的内容" tabindex="-1"><a class="header-anchor" href="#_3-获得拖放的字符串-在目标组件中加入相应的内容" aria-hidden="true">#</a> （3）.获得拖放的字符串，在目标组件中加入相应的内容</h3><p>此步的处理过程是十分明确的，要分成二步来进行，首先要得到拖放的字符串，其次是在目标组件中加入以此字符串为标题的项目。当然还要在相应的位置了。下面就是实现这二步操作的具体代码：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">listView1_DragDrop</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">DragEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">string</span></span> dummy <span class="token operator">=</span> <span class="token string">&quot;temp&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//获得进行&quot;Drag&quot;操作中拖动的字符串</span>
    <span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">)</span>e<span class="token punctuation">.</span>Data<span class="token punctuation">.</span><span class="token function">GetData</span><span class="token punctuation">(</span>dummy<span class="token punctuation">.</span><span class="token function">GetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">IndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Position<span class="token punctuation">.</span>X <span class="token operator">=</span> e<span class="token punctuation">.</span>X<span class="token punctuation">;</span>
    Position<span class="token punctuation">.</span>Y <span class="token operator">=</span> e<span class="token punctuation">.</span>Y<span class="token punctuation">;</span>
    Position <span class="token operator">=</span> listView1<span class="token punctuation">.</span><span class="token function">PointToClient</span><span class="token punctuation">(</span>Position<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//在目标组件中加入以此字符串为标题的项目</span>
    listView1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListViewItem</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>此致通过对这三个事件的编程，已经完成了由TreeView组件到ListView组件的拖放操作。</p><h2 id="三-由listview组件到treeview组件的拖放操作" tabindex="-1"><a class="header-anchor" href="#三-由listview组件到treeview组件的拖放操作" aria-hidden="true">#</a> 三． 由ListView组件到TreeView组件的拖放操作</h2><p>由ListView组件到TreeView组件的拖放操作和从TreeView组件到ListView组件相类似，也是通过&quot;ItemDrag&quot;、&quot;DragEnter&quot;、&quot;DragDrop&quot;三个事件来处理的，具体如下：</p><p>（1）.开始&quot;拖&quot;（Drag）操作：</p><p>这和前者没有什么实质上的区别，只是在此次的拖放操作开始之前，多加入了一些逻辑判断，让程序更稳健的允许，实现的代码如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">listView1_ItemDrag</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">ItemDragEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//判断是否是鼠标右键按动</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Button <span class="token operator">==</span> MouseButtons<span class="token punctuation">.</span>Right<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    
    <span class="token class-name"><span class="token keyword">int</span></span> nTotalSelected <span class="token operator">=</span> listView1<span class="token punctuation">.</span>SelectedIndices<span class="token punctuation">.</span>Count<span class="token punctuation">;</span>
    <span class="token comment">//判断组件中是否存在项目</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nTotalSelected <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

    <span class="token class-name">IEnumerator</span> selCol <span class="token operator">=</span> listView1<span class="token punctuation">.</span>SelectedItems<span class="token punctuation">.</span><span class="token function">GetEnumerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    selCol<span class="token punctuation">.</span><span class="token function">MoveNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ListViewItem</span> lvi <span class="token operator">=</span> <span class="token punctuation">(</span>ListViewItem<span class="token punctuation">)</span>selCol<span class="token punctuation">.</span>Current<span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">string</span></span> mDir <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lvi<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        mDir <span class="token operator">+=</span> lvi<span class="token punctuation">.</span>SubItems<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">+</span> <span class="token string">&quot;  ,&quot;</span><span class="token punctuation">;</span>
    
    <span class="token class-name"><span class="token keyword">string</span></span> str <span class="token operator">=</span> mDir<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> mDir<span class="token punctuation">.</span>Length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">==</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

    <span class="token comment">//对组件中的字符串开始拖放操作</span>
    listView1<span class="token punctuation">.</span><span class="token function">DoDragDrop</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> DragDropEffects<span class="token punctuation">.</span>Copy <span class="token operator">|</span> DragDropEffects<span class="token punctuation">.</span>Move<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>（2）.目标组件允许进行拖放操作：</p><p>这一步是进行拖放操作最为一致的，除非你所要进行拖放的数据类型有改变，否则，没有必要对源代码进行什么修改，具体如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">treeView1_DragEnter</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">DragEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//判断是否目前拖动的数据是字符串，如果是，则拖动符串对目的组件进行拷贝</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Data<span class="token punctuation">.</span><span class="token function">GetDataPresent</span><span class="token punctuation">(</span>DataFormats<span class="token punctuation">.</span>Text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        e<span class="token punctuation">.</span>Effect <span class="token operator">=</span> DragDropEffects<span class="token punctuation">.</span>Copy<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        e<span class="token punctuation">.</span>Effect <span class="token operator">=</span> DragDropEffects<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>（3）.获得拖放的字符串，在目标组件中加入相应的内容：</p><p>对于进行拖放操作的不同组件，获得其拖放的数据的实现方法是不一样的，在本步骤中也不例外，但总归大同小异，掌握程序设计的步骤和要点，加上探索、研究的精神，这个问题应该能够解决，下面是实现此步骤的程序代码：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">treeView1_DragDrop</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">DragEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//获得进行&quot;Drag&quot;操作中拖动的字符串</span>
    <span class="token class-name"><span class="token keyword">string</span></span> dummy <span class="token operator">=</span> <span class="token string">&quot;temp&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">)</span>e<span class="token punctuation">.</span>Data<span class="token punctuation">.</span><span class="token function">GetData</span><span class="token punctuation">(</span>dummy<span class="token punctuation">.</span><span class="token function">GetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">IndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Position<span class="token punctuation">.</span>X <span class="token operator">=</span> e<span class="token punctuation">.</span>X<span class="token punctuation">;</span>
    Position<span class="token punctuation">.</span>Y <span class="token operator">=</span> e<span class="token punctuation">.</span>Y<span class="token punctuation">;</span>
    Position <span class="token operator">=</span> treeView1<span class="token punctuation">.</span><span class="token function">PointToClient</span><span class="token punctuation">(</span>Position<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">TreeNode</span> DropNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>treeView1<span class="token punctuation">.</span><span class="token function">GetNodeAt</span><span class="token punctuation">(</span>Position<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//在目标组件中加入以此字符串为标题的项目</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>DropNode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">TreeNode</span> DragNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeNode</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        treeView1<span class="token punctuation">.</span>Nodes<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>DropNode<span class="token punctuation">.</span>Index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> DragNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="四-二个组件进行拖放操作的完整源程序代码-dragdrop-cs" tabindex="-1"><a class="header-anchor" href="#四-二个组件进行拖放操作的完整源程序代码-dragdrop-cs" aria-hidden="true">#</a> 四． 二个组件进行拖放操作的完整源程序代码（dragdrop.cs）</h2><p>在掌握了上面的这些步骤过以后，可以得到这二个组件相互进行拖放操作的完整代码和编译后程序的运行界面，如下：</p><p>图01：二个组件相互进行拖放的程序运行界面</p><p>dragdrop.cs的代码如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>ComponentModel</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data</span><span class="token punctuation">;</span>

<span class="token comment">//导入程序中使用的命名空间</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Form1</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Form</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">TreeView</span> treeView1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Point</span> Position <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// bool  lv1_mdown  =  false    ;</span>
    <span class="token keyword">private</span> <span class="token class-name">ListView</span> listView1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>Container</span> components <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">Form1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//初始化窗体中的各个组件</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//清除程序中使用到的各种资源</span>
    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">bool</span></span> disposing<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>disposing<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>components <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                components<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span>disposing<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">ListViewItem</span> listViewItem1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListViewItem</span><span class="token punctuation">(</span><span class="token string">&quot;Item01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ListViewItem</span> listViewItem2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListViewItem</span><span class="token punctuation">(</span><span class="token string">&quot;Item02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        treeView1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        listView1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">SuspendLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//此属性必须设定为&quot;真&quot;，这样才能进行拖放操作</span>
        treeView1<span class="token punctuation">.</span>AllowDrop <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        treeView1<span class="token punctuation">.</span>ImageIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        treeView1<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        treeView1<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;treeView1&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//在TreeView组件中加入初始化的节点</span>
        treeView1<span class="token punctuation">.</span>Nodes<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeNode</span><span class="token punctuation">(</span><span class="token string">&quot;节点01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        treeView1<span class="token punctuation">.</span>Nodes<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeNode</span><span class="token punctuation">(</span><span class="token string">&quot;节点02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        treeView1<span class="token punctuation">.</span>SelectedImageIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        treeView1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">144</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        treeView1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        treeView1<span class="token punctuation">.</span>DragEnter <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DragEventHandler</span><span class="token punctuation">(</span>treeView1_DragEnter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        treeView1<span class="token punctuation">.</span>ItemDrag <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ItemDragEventHandler</span><span class="token punctuation">(</span>treeView1_ItemDrag<span class="token punctuation">)</span><span class="token punctuation">;</span>
        treeView1<span class="token punctuation">.</span>DragDrop <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DragEventHandler</span><span class="token punctuation">(</span>treeView1_DragDrop<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//此属性必须设定为&quot;真&quot;，这样才能进行拖放操作</span>
        listView1<span class="token punctuation">.</span>AllowDrop <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token comment">//在ListView组件中加入项目</span>
        listView1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>listViewItem1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        listView1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>listViewItem2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        listView1<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">208</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        listView1<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;listView1&quot;</span><span class="token punctuation">;</span>
        listView1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">144</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        listView1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
        listView1<span class="token punctuation">.</span>View <span class="token operator">=</span> View<span class="token punctuation">.</span>List<span class="token punctuation">;</span>
        listView1<span class="token punctuation">.</span>DragDrop <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DragEventHandler</span><span class="token punctuation">(</span>listView1_DragDrop<span class="token punctuation">)</span><span class="token punctuation">;</span>
        listView1<span class="token punctuation">.</span>DragEnter <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DragEventHandler</span><span class="token punctuation">(</span>listView1_DragEnter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        listView1<span class="token punctuation">.</span>ItemDrag <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ItemDragEventHandler</span><span class="token punctuation">(</span>listView1_ItemDrag<span class="token punctuation">)</span><span class="token punctuation">;</span>
        AutoScaleBaseSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ClientSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span><span class="token number">376</span><span class="token punctuation">,</span> <span class="token number">237</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>listView1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>treeView1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>MaximizeBox <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>MinimizeBox <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Form1&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;全面掌握C＃中的拖放操作&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">ResumeLayout</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Application<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Form1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">treeView1_ItemDrag</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">ItemDragEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">string</span></span> strItem <span class="token operator">=</span> e<span class="token punctuation">.</span>Item<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//开始进行&quot;Drag&quot;操作</span>
        <span class="token function">DoDragDrop</span><span class="token punctuation">(</span>strItem<span class="token punctuation">,</span> DragDropEffects<span class="token punctuation">.</span>Copy <span class="token operator">|</span> DragDropEffects<span class="token punctuation">.</span>Move<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">listView1_DragEnter</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">DragEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//判断是否目前拖动的数据是字符串，如果是，则拖动符串对目的组件进行拷贝</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Data<span class="token punctuation">.</span><span class="token function">GetDataPresent</span><span class="token punctuation">(</span>DataFormats<span class="token punctuation">.</span>Text<span class="token punctuation">)</span><span class="token punctuation">)</span>
            e<span class="token punctuation">.</span>Effect <span class="token operator">=</span> DragDropEffects<span class="token punctuation">.</span>Move<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            e<span class="token punctuation">.</span>Effect <span class="token operator">=</span> DragDropEffects<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">listView1_DragDrop</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">DragEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">string</span></span> dummy <span class="token operator">=</span> <span class="token string">&quot;temp&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//获得进行&quot;Drag&quot;操作中拖动的字符串</span>
        <span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">)</span>e<span class="token punctuation">.</span>Data<span class="token punctuation">.</span><span class="token function">GetData</span><span class="token punctuation">(</span>dummy<span class="token punctuation">.</span><span class="token function">GetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">IndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Position<span class="token punctuation">.</span>X <span class="token operator">=</span> e<span class="token punctuation">.</span>X<span class="token punctuation">;</span>
        Position<span class="token punctuation">.</span>Y <span class="token operator">=</span> e<span class="token punctuation">.</span>Y<span class="token punctuation">;</span>
        Position <span class="token operator">=</span> listView1<span class="token punctuation">.</span><span class="token function">PointToClient</span><span class="token punctuation">(</span>Position<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//在目标组件中加入以此字符串为标题的项目</span>
        listView1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListViewItem</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">listView1_ItemDrag</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">ItemDragEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//判断是否是鼠标右键按动</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Button <span class="token operator">==</span> MouseButtons<span class="token punctuation">.</span>Right<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">int</span></span> nTotalSelected <span class="token operator">=</span> listView1<span class="token punctuation">.</span>SelectedIndices<span class="token punctuation">.</span>Count<span class="token punctuation">;</span>
        <span class="token comment">//判断组件中是否存在项目</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nTotalSelected <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

        <span class="token class-name">IEnumerator</span> selCol <span class="token operator">=</span> listView1<span class="token punctuation">.</span>SelectedItems<span class="token punctuation">.</span><span class="token function">GetEnumerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        selCol<span class="token punctuation">.</span><span class="token function">MoveNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ListViewItem</span> lvi <span class="token operator">=</span> <span class="token punctuation">(</span>ListViewItem<span class="token punctuation">)</span>selCol<span class="token punctuation">.</span>Current<span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">string</span></span> mDir <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lvi<span class="token punctuation">.</span>SubItems<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            mDir <span class="token operator">+=</span> lvi<span class="token punctuation">.</span>SubItems<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">+</span> <span class="token string">&quot;  ,&quot;</span><span class="token punctuation">;</span>
        
        <span class="token class-name"><span class="token keyword">string</span></span> str <span class="token operator">=</span> mDir<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> mDir<span class="token punctuation">.</span>Length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">==</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

        <span class="token comment">//对组件中的字符串开始拖放操作</span>
        listView1<span class="token punctuation">.</span><span class="token function">DoDragDrop</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> DragDropEffects<span class="token punctuation">.</span>Copy <span class="token operator">|</span> DragDropEffects<span class="token punctuation">.</span>Move<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">treeView1_DragEnter</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">DragEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//判断是否目前拖动的数据是字符串，如果是，则拖动符串对目的组件进行拷贝</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Data<span class="token punctuation">.</span><span class="token function">GetDataPresent</span><span class="token punctuation">(</span>DataFormats<span class="token punctuation">.</span>Text<span class="token punctuation">)</span><span class="token punctuation">)</span>
            e<span class="token punctuation">.</span>Effect <span class="token operator">=</span> DragDropEffects<span class="token punctuation">.</span>Copy<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            e<span class="token punctuation">.</span>Effect <span class="token operator">=</span> DragDropEffects<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">treeView1_DragDrop</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">DragEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//获得进行&quot;Drag&quot;操作中拖动的字符串</span>
        <span class="token class-name"><span class="token keyword">string</span></span> dummy <span class="token operator">=</span> <span class="token string">&quot;temp&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">)</span>e<span class="token punctuation">.</span>Data<span class="token punctuation">.</span><span class="token function">GetData</span><span class="token punctuation">(</span>dummy<span class="token punctuation">.</span><span class="token function">GetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">IndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Position<span class="token punctuation">.</span>X <span class="token operator">=</span> e<span class="token punctuation">.</span>X<span class="token punctuation">;</span>
        Position<span class="token punctuation">.</span>Y <span class="token operator">=</span> e<span class="token punctuation">.</span>Y<span class="token punctuation">;</span>
        Position <span class="token operator">=</span> treeView1<span class="token punctuation">.</span><span class="token function">PointToClient</span><span class="token punctuation">(</span>Position<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">TreeNode</span> DropNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>treeView1<span class="token punctuation">.</span><span class="token function">GetNodeAt</span><span class="token punctuation">(</span>Position<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//在目标组件中加入以此字符串为标题的项目</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>DropNode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">TreeNode</span> DragNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeNode</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
            treeView1<span class="token punctuation">.</span>Nodes<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>DropNode<span class="token punctuation">.</span>Index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> DragNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="五-其他组件的拖放操作" tabindex="-1"><a class="header-anchor" href="#五-其他组件的拖放操作" aria-hidden="true">#</a> 五． 其他组件的拖放操作</h2><p>本文虽然对TreeView组件和ListView组件之间的拖放操作进行了详细的介绍，对于其他的可以用于拖放操作的组件，很多组件的拖放操作的实现方法都和这二种差不多。但也有一些组件有一些区别，譬如：ListBox组件等，在进行拖放操作的时候，他就没有本文介绍的&quot;ItemDrag&quot;事件，那这怎么办。我们是通过一个变通的方法来实现的。具体是通过&quot;MouseMove&quot;事件和&quot;MouseDown&quot;事件来代替&quot;ItemDrag&quot;事件，其中&quot;MouseMove&quot;事件主要是起到触发拖放操作的作用，&quot;MouseDown&quot;事件主要是起着判断此次拖放操作是否已经完成的作用。对于ListBox组件拖放操作的其他步骤也和上面介绍的二个组件没有什么太大区别。由于篇幅的关系ListBox组件和其他不存在&quot;ItemDrag&quot;事件的组件的拖放操作，这里就不一一介绍了，相信大家能够搞定。</p><h2 id="六-总结" tabindex="-1"><a class="header-anchor" href="#六-总结" aria-hidden="true">#</a> 六． 总结</h2><p>对于大多数组件来说掌握了&quot;ItemDrag&quot;、&quot;DragEnter&quot;、&quot;DragDrop&quot;三个事件的解决办法也就掌握了组件间的拖放操作。当然还有一些例外的组件，但总而言之，拖放操作的实现步骤都是一样的，解决的思路也是大致一致的。由于拖放操作的自身的优点，对于程序员来说尽快掌握是十分必要的，希望本文介绍的内容能够令你满意。</p>`,41),e=[o];function c(u,l){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","appctr21.html.vue"]]);export{i as default};
