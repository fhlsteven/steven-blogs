import{_ as n,o as s,c as a,a as t}from"./app-a2b6e588.js";const p={},o=t(`<h1 id="c-小经验" tabindex="-1"><a class="header-anchor" href="#c-小经验" aria-hidden="true">#</a> C#小经验</h1><h2 id="c-的回车换行表示法" tabindex="-1"><a class="header-anchor" href="#c-的回车换行表示法" aria-hidden="true">#</a> c#的回车换行表示法</h2><p>使用 <code>System.Enviroment.NewLine</code>，因为换行的表示方法会在不同的操作系统上有区别。</p><hr><h2 id="反射生成窗体" tabindex="-1"><a class="header-anchor" href="#反射生成窗体" aria-hidden="true">#</a> 反射生成窗体</h2><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">buuton1_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Assembly</span> _myAssembly <span class="token operator">=</span> Assembly<span class="token punctuation">.</span><span class="token function">LoadFrom</span><span class="token punctuation">(</span><span class="token string">@&quot;e:windowsApplication6.dll&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Type</span> _myType <span class="token operator">=</span> _myAssembly<span class="token punctuation">.</span><span class="token function">GetType</span><span class="token punctuation">(</span> <span class="token string">&quot;WindowsApplication6.Form1&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">object</span></span> obj<span class="token punctuation">;</span>
    obj <span class="token operator">=</span> Activator<span class="token punctuation">.</span><span class="token function">CreateInstance</span><span class="token punctuation">(</span> _myType <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Form</span> frmform <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    frmform <span class="token operator">=</span> <span class="token punctuation">(</span>Form<span class="token punctuation">)</span>obj<span class="token punctuation">;</span>
    frmform<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><hr><h2 id="从局域网中找出所有的机器" tabindex="-1"><a class="header-anchor" href="#从局域网中找出所有的机器" aria-hidden="true">#</a> 从局域网中找出所有的机器</h2><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token class-name">DirectoryEntry</span> domain <span class="token keyword">in</span> root<span class="token punctuation">.</span>Children<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    lb_pcName<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;★★★&quot;</span><span class="token operator">+</span>domain<span class="token punctuation">.</span>Name<span class="token operator">+</span><span class="token string">&quot;★★★&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token class-name">DirectoryEntry</span> pc <span class="token keyword">in</span> domain<span class="token punctuation">.</span>Children<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>pc<span class="token punctuation">.</span>Name<span class="token operator">!=</span><span class="token string">&quot;Schema&quot;</span><span class="token punctuation">)</span><span class="token comment">//Schema是结束标记</span>
            lb_pcName<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token operator">+</span>pc<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>有谁可以给我仔细讲讲这段代码吗？谢谢啦。初学！</p><hr><h2 id="在自己的程序中使用自己画的光标" tabindex="-1"><a class="header-anchor" href="#在自己的程序中使用自己画的光标" aria-hidden="true">#</a> 在自己的程序中使用自己画的光标</h2><p><code>this.Cursor=new Cursor(&quot;你的光标文件&quot;);</code></p><hr>`,14),e=[o];function c(u,l){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","cspbasesexps.html.vue"]]);export{r as default};
