import{_ as n,o as s,c as a,a as t}from"./app-a2b6e588.js";const p="/steven-blogs/assets/filerw5_1-92ce5f75.png",o="/steven-blogs/assets/filerw5_2-c4b17ec3.png",e={},c=t(`<h1 id="c-处理文本文件" tabindex="-1"><a class="header-anchor" href="#c-处理文本文件" aria-hidden="true">#</a> C＃处理文本文件</h1><p>文本文件是一种常用的文件格式，所以如何处理文本文件也就成为编程的一个重点。本文就来探讨一下用C＃是如何来处理文本文件。其内容重点就是如何读取文本文件内容、如何改变文本文件的内容，以及如何用C＃来实现对读取后的文本文件的打印预览和打印。</p><p><strong>（1）.如何读取文本文件内容</strong>：</p><p>在本文介绍的程序中，是把读取的文本文件，用一个richTextBox组件显示出来。要读取文本文件，必须使用到&quot;StreamReader&quot;类，这个类是由名字空间&quot;System.IO&quot;中定义的。通过&quot;StreamReader&quot;类的&quot;ReadLine()&quot;方法，就可以读取打开数据流当前行的数据了。下面代码实现的功能就是读取&quot;C:\\file.txt&quot;并在richTextBox1组件中显示出来：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">FileStream</span> fs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileStream</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\file.txt&quot;</span><span class="token punctuation">,</span> FileMode<span class="token punctuation">.</span>Open<span class="token punctuation">,</span> FileAccess<span class="token punctuation">.</span>Read<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">StreamReader</span> m_streamReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamReader</span><span class="token punctuation">(</span>fs<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//使用StreamReader类来读取文件</span>
m_streamReader<span class="token punctuation">.</span>BaseStream<span class="token punctuation">.</span><span class="token function">Seek</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> SeekOrigin<span class="token punctuation">.</span>Begin<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 从数据流中读取每一行，直到文件的最后一行，并在richTextBox1中显示出内容</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>richTextBox1<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">string</span></span> strLine <span class="token operator">=</span> m_streamReader<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>strLine <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>richTextBox1<span class="token punctuation">.</span>Text <span class="token operator">+=</span> strLine <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">;</span>
    strLine <span class="token operator">=</span> m_streamReader<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//关闭此StreamReader对象</span>
m_streamReader<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>其实现的功能如下图：</p><p><img src="`+p+`" alt="img_1"><br> 图01：读取文本文件并显示出来</p><p><strong>（2）.如何改变文本文件中数据内容</strong>：</p><p>在本文介绍的程序中，改变文本文件数据内容的功能是通过改变richTextBox1中的内容来实现的，当richTextBox1这的内容改变后，按动&quot;另存为&quot;，就把richTextBox1中内容存储到指定的文本文件中了。要想改变文本文件内容，要使用到&quot;StreamWriter&quot;类，这个类和&quot;StreamReader&quot;一样，都是由&quot;System.IO&quot;名字空间来定义的。通过&quot;StreamWriter&quot;类的&quot;Write()&quot;方法，就可以轻松实现文本文件内容的更改了。下面代码的功能是：如果&quot;C&quot;盘存在&quot;file.txt&quot;，则把richTextBox1中的内容写入到&quot;file.txt&quot;中，如果不存在，则创建此文件，然后在写入文本数据。</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//创建一个文件流，用以写入或者创建一个StreamWriter</span>
<span class="token class-name">FileStream</span> fs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileStream</span><span class="token punctuation">(</span><span class="token string">&quot;C\\\\file.txt&quot;</span><span class="token punctuation">,</span> FileMode<span class="token punctuation">.</span>OpenOrCreate<span class="token punctuation">,</span> FileAccess<span class="token punctuation">.</span>Write<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">StreamWriter</span> m_streamWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamWriter</span><span class="token punctuation">(</span>fs<span class="token punctuation">)</span><span class="token punctuation">;</span>
m_streamWriter<span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 使用StreamWriter来往文件中写入内容</span>
m_streamWriter<span class="token punctuation">.</span>BaseStream<span class="token punctuation">.</span><span class="token function">Seek</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> SeekOrigin<span class="token punctuation">.</span>Begin<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 把richTextBox1中的内容写入文件</span>
m_streamWriter<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>richTextBox1<span class="token punctuation">.</span>Text<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//关闭此文件</span>
m_streamWriter<span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
m_streamWriter<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>从上面这二个代码可以，写入数据比起读取数据要显得容易些。</p><p><strong>（3）.如何实现打印预览</strong>：</p><p>打印预览是通过打印预览对话框来实现的，实现对读取得文本文件的打印预览，最为重要的就是要通知打印预览对话框所要预览的文件的内容。下面代码就是把richTextBox1中显示的内容，通过打印预览对话框显示出来：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> strText <span class="token operator">=</span> richTextBox1<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
<span class="token class-name">StringReader</span> myReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringReader</span><span class="token punctuation">(</span>strText<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">PrintPreviewDialog</span> printPreviewDialog1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PrintPreviewDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
printPreviewDialog1<span class="token punctuation">.</span>Document <span class="token operator">=</span> ThePrintDocument<span class="token punctuation">;</span>
printPreviewDialog1<span class="token punctuation">.</span>FormBorderStyle <span class="token operator">=</span> FormBorderStyle<span class="token punctuation">.</span>Fixed3D<span class="token punctuation">;</span>
printPreviewDialog1<span class="token punctuation">.</span><span class="token function">ShowDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>其实现的功能的如下图：</p><p><img src="`+o+`" alt="img_2"><br> 图02：对文本文件实现打印预览</p><p><strong>（4）.如何打印文件</strong>：</p><p>在名字空间&quot;System.Drawing.Printing&quot;中定义了一个类&quot;PrintDocument&quot;，通过调用此类的&quot;Print&quot;方法就可以触发在此名字空间中封装的另外一个事件&quot;PrintPage&quot;。在此事件中设定要打印的文档内容，从而实现队文本文件的打印操作。下面代码是调用&quot;PrintDocument&quot;的&quot;Print&quot;方法，和调用事件&quot;PrintPage&quot;来打印richTextBox1中的内容：</p><p><code>ThePrintDocument.Print ( ) ;//其中ThePrintDocument是&quot;PrintDocument&quot;类的一个对象</code></p><p>下列代码是设定打印内容即打印richTextBox1中的内容：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code>
<span class="token class-name"><span class="token keyword">float</span></span> linesPerPage <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">float</span></span> yPosition <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">int</span></span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">float</span></span> leftMargin <span class="token operator">=</span> ev<span class="token punctuation">.</span>MarginBounds<span class="token punctuation">.</span>Left<span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">float</span></span> topMargin <span class="token operator">=</span> ev<span class="token punctuation">.</span>MarginBounds<span class="token punctuation">.</span>Top<span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> line <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token class-name">Font</span> printFont <span class="token operator">=</span> richTextBox1<span class="token punctuation">.</span>Font<span class="token punctuation">;</span>
<span class="token class-name">SolidBrush</span> myBrush <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SolidBrush</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Black<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//计算每一页打印多少行 </span>
linesPerPage <span class="token operator">=</span> ev<span class="token punctuation">.</span>MarginBounds<span class="token punctuation">.</span>Height <span class="token operator">/</span> printFont<span class="token punctuation">.</span><span class="token function">GetHeight</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>Graphics<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//重复使用StringReader对象 ,打印出richTextBox1中的所有内容</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;</span> linesPerPage <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> myReader<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 计算出要打印的下一行所基于页面的位置</span>
    yPosition <span class="token operator">=</span> topMargin <span class="token operator">+</span> <span class="token punctuation">(</span>count <span class="token operator">*</span> printFont<span class="token punctuation">.</span><span class="token function">GetHeight</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>Graphics<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 打印出richTextBox1中的下一行内容</span>
    ev<span class="token punctuation">.</span>Graphics<span class="token punctuation">.</span><span class="token function">DrawString</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> printFont<span class="token punctuation">,</span> myBrush<span class="token punctuation">,</span> leftMargin<span class="token punctuation">,</span> yPosition<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    count<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 判断如果还要下一页，则继续打印</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>line <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    ev<span class="token punctuation">.</span>HasMorePages <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">else</span>
    ev<span class="token punctuation">.</span>HasMorePages <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
myBrush<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>注释：由于在上述的代码中省掉了这些类所对于地名字空间，所以要想成功的编译和运行上述代码，就要在程序头部要导入所使用的名字空间。</p><h2 id="三-用c-处理文本文件的完整源程序代码-control-cs" tabindex="-1"><a class="header-anchor" href="#三-用c-处理文本文件的完整源程序代码-control-cs" aria-hidden="true">#</a> 三． 用C＃处理文本文件的完整源程序代码（control.cs）</h2><p>掌握了上面这些关键步骤，就可以方便的得到用C＃来处理文本文件的一个完整的源程序，具体如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>ComponentModel</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Printing</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Form1</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Form</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">RichTextBox</span> richTextBox1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Button</span> button1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Button</span> button2<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Button</span> button3<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Button</span> button4<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Button</span> button5<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">OpenFileDialog</span> openFileDialog1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">SaveFileDialog</span> saveFileDialog1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">PrintDialog</span> printDialog1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">PrintDocument</span> ThePrintDocument<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">PrintPreviewDialog</span> printPreviewDialog1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">StringReader</span> myReader<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>Container</span> components <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">Form1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//初始化窗体中的各个组件</span>
        <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//清除程序中使用多的资源</span>
    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">bool</span></span> disposing<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>disposing<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>components <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                components<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span>disposing<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        richTextBox1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RichTextBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        saveFileDialog1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SaveFileDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        openFileDialog1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenFileDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        printPreviewDialog1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PrintPreviewDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        printDialog1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PrintDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ThePrintDocument <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PrintDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ThePrintDocument<span class="token punctuation">.</span>PrintPage <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PrintPageEventHandler</span><span class="token punctuation">(</span>ThePrintDocument_PrintPage<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">SuspendLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        richTextBox1<span class="token punctuation">.</span>Anchor <span class="token operator">=</span> AnchorStyles<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
        richTextBox1<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;richTextBox1&quot;</span><span class="token punctuation">;</span>
        richTextBox1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span><span class="token number">448</span><span class="token punctuation">,</span> <span class="token number">280</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        richTextBox1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        richTextBox1<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        button1<span class="token punctuation">.</span>Anchor <span class="token operator">=</span> AnchorStyles<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
        button1<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">289</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button1<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;button1&quot;</span><span class="token punctuation">;</span>
        button1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        button1<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;打开&quot;</span><span class="token punctuation">;</span>
        button1<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span>button1_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>
        button2<span class="token punctuation">.</span>Anchor <span class="token operator">=</span> AnchorStyles<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
        button2<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">274</span><span class="token punctuation">,</span> <span class="token number">288</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button2<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;button2&quot;</span><span class="token punctuation">;</span>
        button2<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button2<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
        button2<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;预览&quot;</span><span class="token punctuation">;</span>
        button2<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span>button2_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>
        button3<span class="token punctuation">.</span>Anchor <span class="token operator">=</span> AnchorStyles<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
        button3<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">288</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button3<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;button3&quot;</span><span class="token punctuation">;</span>
        button3<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button3<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
        button3<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;保存&quot;</span><span class="token punctuation">;</span>
        button3<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span>button3_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>
        button4<span class="token punctuation">.</span>Anchor <span class="token operator">=</span> AnchorStyles<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
        button4<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">174</span><span class="token punctuation">,</span> <span class="token number">288</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button4<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;button4&quot;</span><span class="token punctuation">;</span>
        button4<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button4<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
        button4<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;打印机设置&quot;</span><span class="token punctuation">;</span>
        button4<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span>button4_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>
        button5<span class="token punctuation">.</span>Anchor <span class="token operator">=</span> AnchorStyles<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
        button5<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">345</span><span class="token punctuation">,</span> <span class="token number">288</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button5<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;button5&quot;</span><span class="token punctuation">;</span>
        button5<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button5<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
        button5<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;打印&quot;</span><span class="token punctuation">;</span>
        button5<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span>button5_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>
        saveFileDialog1<span class="token punctuation">.</span>DefaultExt <span class="token operator">=</span> <span class="token string">&quot;*.txt&quot;</span><span class="token punctuation">;</span>
        saveFileDialog1<span class="token punctuation">.</span>FileName <span class="token operator">=</span> <span class="token string">&quot;file.txt&quot;</span><span class="token punctuation">;</span>
        saveFileDialog1<span class="token punctuation">.</span>InitialDirectory <span class="token operator">=</span> <span class="token string">&quot;c:\\\\&quot;</span><span class="token punctuation">;</span>
        saveFileDialog1<span class="token punctuation">.</span>Title <span class="token operator">=</span> <span class="token string">&quot;另存为！&quot;</span><span class="token punctuation">;</span>
        openFileDialog1<span class="token punctuation">.</span>DefaultExt <span class="token operator">=</span> <span class="token string">&quot;*.txt&quot;</span><span class="token punctuation">;</span>
        openFileDialog1<span class="token punctuation">.</span>FileName <span class="token operator">=</span> <span class="token string">&quot;file.txt&quot;</span><span class="token punctuation">;</span>
        openFileDialog1<span class="token punctuation">.</span>InitialDirectory <span class="token operator">=</span> <span class="token string">&quot;c:\\\\&quot;</span><span class="token punctuation">;</span>
        openFileDialog1<span class="token punctuation">.</span>Title <span class="token operator">=</span> <span class="token string">&quot;打开文本文件！&quot;</span><span class="token punctuation">;</span>
        AutoScaleBaseSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ClientSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span><span class="token number">448</span><span class="token punctuation">,</span> <span class="token number">325</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>button1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>button2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>button3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>button4<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>button5<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>richTextBox1<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>MaximizeBox <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Form1&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;C＃来操作文本文件&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">ResumeLayout</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Application<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Form1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button1_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>openFileDialog1<span class="token punctuation">.</span><span class="token function">ShowDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> DialogResult<span class="token punctuation">.</span>OK<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name">FileStream</span> fs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileStream</span><span class="token punctuation">(</span>openFileDialog1<span class="token punctuation">.</span>FileName<span class="token punctuation">,</span> FileMode<span class="token punctuation">.</span>Open<span class="token punctuation">,</span> FileAccess<span class="token punctuation">.</span>Read<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">StreamReader</span> m_streamReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamReader</span><span class="token punctuation">(</span>fs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//使用StreamReader类来读取文件</span>
                m_streamReader<span class="token punctuation">.</span>BaseStream<span class="token punctuation">.</span><span class="token function">Seek</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> SeekOrigin<span class="token punctuation">.</span>Begin<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 从数据流中读取每一行，直到文件的最后一行，并在richTextBox1中显示出内容</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>richTextBox1<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">string</span></span> strLine <span class="token operator">=</span> m_streamReader<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>strLine <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>richTextBox1<span class="token punctuation">.</span>Text <span class="token operator">+=</span> strLine <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">;</span>
                    strLine <span class="token operator">=</span> m_streamReader<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//关闭此StreamReader对象</span>
                m_streamReader<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> em<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>em<span class="token punctuation">.</span>Message<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button3_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//获得另存为的文件名称</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>saveFileDialog1<span class="token punctuation">.</span><span class="token function">ShowDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> DialogResult<span class="token punctuation">.</span>OK<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token comment">//创建一个文件流，用以写入或者创建一个StreamWriter</span>
                <span class="token class-name">FileStream</span> fs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileStream</span><span class="token punctuation">(</span>@saveFileDialog1<span class="token punctuation">.</span>FileName<span class="token punctuation">,</span> FileMode<span class="token punctuation">.</span>OpenOrCreate<span class="token punctuation">,</span> FileAccess<span class="token punctuation">.</span>Write<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">StreamWriter</span> m_streamWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamWriter</span><span class="token punctuation">(</span>fs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                m_streamWriter<span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// 使用StreamWriter来往文件中写入内容</span>
                m_streamWriter<span class="token punctuation">.</span>BaseStream<span class="token punctuation">.</span><span class="token function">Seek</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> SeekOrigin<span class="token punctuation">.</span>Begin<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 把richTextBox1中的内容写入文件</span>
                m_streamWriter<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>richTextBox1<span class="token punctuation">.</span>Text<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//关闭此文件</span>
                m_streamWriter<span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                m_streamWriter<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> em<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>em<span class="token punctuation">.</span>Message<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button4_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        printDialog1<span class="token punctuation">.</span>Document <span class="token operator">=</span> ThePrintDocument<span class="token punctuation">;</span>
        printDialog1<span class="token punctuation">.</span><span class="token function">ShowDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//预览打印文档</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button2_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">string</span></span> strText <span class="token operator">=</span> richTextBox1<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
            myReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringReader</span><span class="token punctuation">(</span>strText<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">PrintPreviewDialog</span> printPreviewDialog1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PrintPreviewDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            printPreviewDialog1<span class="token punctuation">.</span>Document <span class="token operator">=</span> ThePrintDocument<span class="token punctuation">;</span>
            printPreviewDialog1<span class="token punctuation">.</span>FormBorderStyle <span class="token operator">=</span> FormBorderStyle<span class="token punctuation">.</span>Fixed3D<span class="token punctuation">;</span>
            printPreviewDialog1<span class="token punctuation">.</span><span class="token function">ShowDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> exp<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>exp<span class="token punctuation">.</span>Message<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//打印richTextBox1中的内容</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button5_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        printDialog1<span class="token punctuation">.</span>Document <span class="token operator">=</span> ThePrintDocument<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> strText <span class="token operator">=</span> richTextBox1<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
        myReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringReader</span><span class="token punctuation">(</span>strText<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>printDialog1<span class="token punctuation">.</span><span class="token function">ShowDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> DialogResult<span class="token punctuation">.</span>OK<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            ThePrintDocument<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ThePrintDocument_PrintPage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">PrintPageEventArgs</span> ev<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">float</span></span> linesPerPage <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">float</span></span> yPosition <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">int</span></span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">float</span></span> leftMargin <span class="token operator">=</span> ev<span class="token punctuation">.</span>MarginBounds<span class="token punctuation">.</span>Left<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">float</span></span> topMargin <span class="token operator">=</span> ev<span class="token punctuation">.</span>MarginBounds<span class="token punctuation">.</span>Top<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> line <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">Font</span> printFont <span class="token operator">=</span> richTextBox1<span class="token punctuation">.</span>Font<span class="token punctuation">;</span>
        <span class="token class-name">SolidBrush</span> myBrush <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SolidBrush</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Black<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//计算每一页打印多少行 </span>
        linesPerPage <span class="token operator">=</span> ev<span class="token punctuation">.</span>MarginBounds<span class="token punctuation">.</span>Height <span class="token operator">/</span> printFont<span class="token punctuation">.</span><span class="token function">GetHeight</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>Graphics<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//重复使用StringReader对象 ,打印出richTextBox1中的所有内容</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;</span> linesPerPage <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> myReader<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// 计算出要打印的下一行所基于页面的位置</span>
            yPosition <span class="token operator">=</span> topMargin <span class="token operator">+</span> <span class="token punctuation">(</span>count <span class="token operator">*</span> printFont<span class="token punctuation">.</span><span class="token function">GetHeight</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>Graphics<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 打印出richTextBox1中的下一行内容</span>
            ev<span class="token punctuation">.</span>Graphics<span class="token punctuation">.</span><span class="token function">DrawString</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> printFont<span class="token punctuation">,</span> myBrush<span class="token punctuation">,</span> leftMargin<span class="token punctuation">,</span> yPosition<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            count<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 判断如果还要下一页，则继续打印</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>line <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            ev<span class="token punctuation">.</span>HasMorePages <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            ev<span class="token punctuation">.</span>HasMorePages <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        myBrush<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="四-总结" tabindex="-1"><a class="header-anchor" href="#四-总结" aria-hidden="true">#</a> 四．总结</h2><p>本文虽然只是介绍了用C＃处理文本文件，但其实对C＃处理其他文件也有很多的参考价值，这是因为在名字空间&quot;System.IO&quot;中定义的用以处理其他文件的类的结构和用以处理文本文件的类的结构有很多是相同的。希望本文对你用C＃进行文件方面的编程有所帮助。</p><blockquote><p>（责任编辑 赵正北）</p></blockquote>`,28),u=[c];function l(k,i){return s(),a("div",null,u)}const m=n(e,[["render",l],["__file","filerw5.html.vue"]]);export{m as default};
