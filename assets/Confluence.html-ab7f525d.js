import{_ as o,r as p,o as c,c as l,b as a,d as n,e,a as t}from"./app-a2b6e588.js";const r="/steven-blogs/assets/db-8a213330.png",u="/steven-blogs/assets/build_err-73421713.png",k={},i=a("h1",{id:"confluence-挖矿病毒-升级现有系统",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#confluence-挖矿病毒-升级现有系统","aria-hidden":"true"},"#"),n(" Confluence 挖矿病毒 升级现有系统")],-1),d=a("h2",{id:"背景",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#背景","aria-hidden":"true"},"#"),n(" 背景")],-1),b={href:"https://www.huaweicloud.com/notice/2021/20210826160403127.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://confluence.atlassian.com/doc/confluence-security-advisory-2021-08-25-1077906215.html",target:"_blank",rel:"noopener noreferrer"},f=t(`<p>说明：现有的环境都是在Linux的 docker 部署的，我在升级的时候也对docker 有了更深的了解，之前也就是知道一丢丢。</p><h2 id="场景复现" tabindex="-1"><a class="header-anchor" href="#场景复现" aria-hidden="true">#</a> 场景复现</h2><p>由于现在用的数据也还蛮多，蛮重要，又不知道在升级过程会遇到啥情况，所以我处理的第一步是在自己的电脑上还原场景，然后在本地进行升级测试，然后再到现有环境操作的。</p><h3 id="本地搭建问题版本" tabindex="-1"><a class="header-anchor" href="#本地搭建问题版本" aria-hidden="true">#</a> 本地搭建问题版本</h3><p>1、获取镜像 有三个镜像需要获取，通用的数据库 postgres(11.2是因为现有的就用的这个，其实不用这个版本的也没事用最新的)；问题版本confluence：（cptactionhank/atlassian-confluence:6.14.0）；安全版本（atlassian/confluence-server:7.13）</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull postgres:11.2
<span class="token function">docker</span> pull cptactionhank/atlassian-confluence:6.14.0
<span class="token function">docker</span> pull atlassian/confluence-server:7.13
</code></pre></div><p>2、环境部署安装</p><p>2.1 部署postgres</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">mkdir</span> /d/dockerData/sqlData <span class="token comment"># 在系统根目录创建存储数据的目录</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> run <span class="token parameter variable">--name</span> postgres <span class="token parameter variable">-e</span> <span class="token assign-left variable">POSTGRES_PASSWORD</span><span class="token operator">=</span><span class="token number">123456</span> <span class="token parameter variable">--restart</span> always <span class="token parameter variable">--publish</span> <span class="token number">5432</span>:5432 <span class="token parameter variable">-v</span> /d/dockerData/sqlData:/var/lib/postgresql/data <span class="token parameter variable">-d</span> postgres:11.2 <span class="token comment"># 让 postgres 跑起来，注意-e POSTGRES_PASSWORD=123456 这个是必须的</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> postgres <span class="token function">bash</span>  <span class="token comment"># 进入 postgres 容器，也就是postgres运行的实体</span>
root@fb7aaeb61067:/ <span class="token function">su</span> postgres  <span class="token comment"># 进入后就这样了，切换到 postgres 用户</span>
postgres@fb7aaeb61067:/ psql       <span class="token comment"># 进入 postgres </span>

<span class="token assign-left variable">postgres</span><span class="token operator">=</span> create user confluence WITH PASSWORD <span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span>  <span class="token comment"># 创建 confluence 用户</span>
CREATE ROLE
<span class="token assign-left variable">postgres</span><span class="token operator">=</span> CREATE DATABASE <span class="token string">&quot;confluence&quot;</span> WITH OWNER <span class="token operator">=</span> <span class="token string">&quot;confluence&quot;</span><span class="token punctuation">;</span> <span class="token comment"># 创建 confluence 要用的数据库，到这儿数据库就准备完成了</span>
CREATE DATABASE
<span class="token assign-left variable">postgres</span><span class="token operator">=</span> <span class="token builtin class-name">exit</span>  <span class="token comment"># 退出数据库</span>
postgres@fb7aaeb61067:/$ <span class="token builtin class-name">exit</span> <span class="token comment"># 退出当前用户</span>
root@fb7aaeb61067:/ <span class="token builtin class-name">exit</span>      <span class="token comment"># 退出容器</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> 
</code></pre></div><p>2.2 部署 confluence</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">mkdir</span> /d/dockerData/confluence/data <span class="token comment"># 在系统根目录创建存储数据的目录</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> run <span class="token parameter variable">--name</span> confluence <span class="token parameter variable">--detach</span> <span class="token parameter variable">--publish</span> <span class="token number">8090</span>:8090 <span class="token parameter variable">--publish</span> <span class="token number">8091</span>:8091 <span class="token parameter variable">--restart</span> always <span class="token parameter variable">-v</span> /d/dockerData/confluence/data:/var/atlassian/confluence cptactionhankuence:6.14.0 <span class="token comment"># 让问题版本的confluence跑起来</span>
</code></pre></div><p>在浏览器访问confluence，<code>http://{ip}:8090/</code>替换自己的ip地址</p><blockquote><p>note: 如果报错，需要读写权限，执行授权命令即可：<code>chmod -R 777 /d/dockerData/confluence</code> 然后重启 confluence <code>docker restart confluence</code></p></blockquote>`,13),h={href:"https://blog.csdn.net/cojn52/article/details/109094433",target:"_blank",rel:"noopener noreferrer"},v=t(`<p>1、查看confluence的运行目录 使用命令查看当前confluence的一些基本信息，<code>docker inspect confluence</code>,我们要用到的如下图所示， 这几个目录其中<code>MergedDir(/var/lib/docker/overlay2/b6001125fefd698e3c370f86f87f7b7f6d055eb740445008f08abd7bab3ad5e1/merged)</code>这个只有当confluence处于运行状态的时候才会存在，如果你进去没有看到很正常。</p><div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;GraphDriver&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
         <span class="token property">&quot;Data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
             <span class="token property">&quot;LowerDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/var/lib/docker/overlay2/b6001125fefd698e3c370f86f87f7b7f6d055eb740445008f08abd7bab3ad5e1-init/diff:/var/lib/docker/overlay2/b9962167cb303ddb46e738e69d4d972c7d0da6b7c2e74c25213571d198114a25/diff:/var/lib/docker/overlay2/e843d64b208f0c4c6ba5ee1a3ddbc5af6c7dad20b9e7b566a6c79299cb740cc0/diff:/var/lib/docker/overlay2/361252f1ae37a2f894074bb49f4ab21651526689fa31bc7cd355261475a12e4c/diff:/var/lib/docker/overlay2/28ecaf8ef11d78bfc006d0f5dacedf5e1e036726cf5b6c6466f55bd6de12dc23/diff:/var/lib/docker/overlay2/9012db03194ab642501ec18df815f070033999f936a76255dc5e317d029daf6f/diff&quot;</span><span class="token punctuation">,</span>
             <span class="token property">&quot;MergedDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/var/lib/docker/overlay2/b6001125fefd698e3c370f86f87f7b7f6d055eb740445008f08abd7bab3ad5e1/merged&quot;</span><span class="token punctuation">,</span>
             <span class="token property">&quot;UpperDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/var/lib/docker/overlay2/b6001125fefd698e3c370f86f87f7b7f6d055eb740445008f08abd7bab3ad5e1/diff&quot;</span><span class="token punctuation">,</span>
             <span class="token property">&quot;WorkDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/var/lib/docker/overlay2/b6001125fefd698e3c370f86f87f7b7f6d055eb740445008f08abd7bab3ad5e1/work&quot;</span>
         <span class="token punctuation">}</span><span class="token punctuation">,</span>
         <span class="token property">&quot;Name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;overlay2&quot;</span>
</code></pre></div><p>2、 查找对应的目录，主要是为了找到文件，后续需要copy来copy去的 比如 <code>/opt/atlassian/confluence/confluence/WEB-INF/lib/atlassian-extras-decoder-v2-3.4.1.jar</code>对应的是这个目录下的文件<code>/var/lib/docker/overlay2/b6001125fefd698e3c370f86f87f7b7f6d055eb740445008f08abd7bab3ad5e1/merged/opt/atlassian/confluence/confluence/WEB-INF/lib/atlassian-extras-decoder-v2-3.4.1.jar</code></p><p>至此，两个环境就复现了，我们去操作一下，弄一点数据，包括上传附件啥的，后面可以进行迁移测试。</p><h2 id="迁移" tabindex="-1"><a class="header-anchor" href="#迁移" aria-hidden="true">#</a> 迁移</h2><p>刚开始想了好几个方案，都试了一遍，失败了好几次，我这儿直接开始我最后成功的这个方案吧。</p><p>方案：新建一个安全版本的 confluence，然后将数据库链接改到老的数据库上面去。下面我们讲一下详细的过程！</p><p>1、创建初始化要用的数据库postgres 因为新建的如果链接老的，它会提示要重写数据库，重写可不就完蛋了，这儿我们临时建一个postgres数据库备用</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> run <span class="token parameter variable">--name</span> postgresnew <span class="token parameter variable">-e</span> <span class="token assign-left variable">POSTGRES_PASSWORD</span><span class="token operator">=</span><span class="token number">123</span> <span class="token parameter variable">--restart</span> always <span class="token parameter variable">--publish</span> <span class="token number">5433</span>:5432 <span class="token parameter variable">-d</span> postgres:11.2 <span class="token comment"># 运行一个新的 postgres 名字叫 postgresnew</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> postgresnew <span class="token function">bash</span>  <span class="token comment"># 进入 postgres 容器，也就是postgres运行的实体</span>
root@72c46c58b2a8:/ <span class="token function">su</span> postgres
postgres@72c46c58b2a8:/ psql
<span class="token assign-left variable">postgres</span><span class="token operator">=</span> create user confluence WITH PASSWORD <span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span>  <span class="token comment"># 创建 confluence 用户</span>
CREATE ROLE
<span class="token assign-left variable">postgres</span><span class="token operator">=</span> CREATE DATABASE <span class="token string">&quot;confluence&quot;</span> WITH OWNER <span class="token operator">=</span> <span class="token string">&quot;confluence&quot;</span><span class="token punctuation">;</span> <span class="token comment"># 创建 confluence 要用的数据库，到这儿数据库就准备完成了</span>
CREATE DATABASE
<span class="token assign-left variable">postgres</span><span class="token operator">=</span> <span class="token builtin class-name">exit</span>                <span class="token comment"># 退出数据库</span>
postgres@72c46c58b2a8:/$ <span class="token builtin class-name">exit</span> <span class="token comment"># 退出当前用户</span>
root@72c46c58b2a8:/ <span class="token builtin class-name">exit</span>      <span class="token comment"># 退出容器</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> 
</code></pre></div><blockquote><p>注意这里将新的端口映射到了 <code>5433</code>，另外没有指定 <code>-v</code> 参数，就是用docker 自己内部的存储数据了(也在你的机器上，查找方法和上面破解的方法一样)</p></blockquote><p>2、 搭建新的安全版本的 Confluence 7.13</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> stop confluence   <span class="token comment"># 停掉旧的</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /d/dockerData/confluenceNew/data <span class="token comment"># 创建存储新的</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> run <span class="token parameter variable">--name</span> confluenceNew <span class="token parameter variable">--detach</span> <span class="token parameter variable">--publish</span> <span class="token number">8090</span>:8090 <span class="token parameter variable">--publish</span> <span class="token number">8091</span>:8091 <span class="token parameter variable">--restart</span> always <span class="token parameter variable">-v</span> /d/dockerData/confluenceNew/data:/var/atlassian/application-data/confluence atlassian/confluence-server:7.13 <span class="token comment"># 跑一个安全版本的confluence，这里要注意前后两个版本运行数据的目录 application-data</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> <span class="token function">cp</span> /d/atlassian-agent.jar confluenceNew:/opt/atlassian/confluence/   <span class="token comment"># 拷贝一个代理的jar包 破解用的，参见 https://gitee.com/pengzhile/atlassian-agent</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> confluenceNew <span class="token function">bash</span>  <span class="token comment"># 进入 新的confluence </span>
root@6ad1c13b2ea6:/var/atlassian/application-data/confluence <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;\\nexport CATALINA_OPTS=&quot;-javaagent:/opt/atlassian/confluence/atlassian-agent.jar \${CATALINA_OPTS}&quot;&#39;</span> <span class="token operator">&gt;&gt;</span> /opt/atlassian/confluence/bin/setenv.sh  <span class="token comment"># 在confluence配置里面设置从这个代理启动，这个是看了后面链接里的一个破解的文档，我看它自己打包了一个，里面有一句这个，我搜索和琢磨了一下，应该是要修改这个文件，结果发现自己的想法是真确的，然后这个让我对 docker file 也有了一些基本的认知</span>
root@6ad1c13b2ea6:/var/atlassian/application-data/confluence <span class="token builtin class-name">exit</span>  <span class="token comment"># 退出 confluenceNew</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> restart confluenceNew
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> /d/atlassian-agent.jar <span class="token parameter variable">-d</span> <span class="token parameter variable">-m</span> test@qq.com <span class="token parameter variable">-n</span> confluence <span class="token parameter variable">-p</span> conf <span class="token parameter variable">-o</span> http://192.168.31.11 <span class="token parameter variable">-s</span> B4Y8-H71P-VBXN-TBFK <span class="token comment"># 输入这个可以得到一个密钥，用它开启</span>
</code></pre></div><p>访问confluence，<code>http://{ip}:8090/</code>替换自己的ip地址， 密钥用上面生成的，然后数据库配置需要特别注意，的用那个临时的数据库(我这儿只是端口不一样，其他和那个一模一样就是为了后面改的少)，如图：</p><p><img src="`+r+`" alt="dbtemp"></p><p>点击直到 新的 confluence 完成。</p><p>删除atlassian-agent.jar <code>rm -rf /d/atlassian-agent.jar</code></p><p>3、 迁移(数据库+confluence附件)</p><p>修改新的数据库连接 <code>/d/dockerData/confluenceNew/data/confluence.cfg.xml</code></p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /d/dockerData/confluenceNew/data/confluence.cfg.xml

<span class="token comment">#  &lt;property name=&quot;hibernate.connection.url&quot;&gt;jdbc:postgresql://192.168.31.11:5433/confluence&lt;/property&gt;</span>
<span class="token comment"># 修改这行的 5433 为 5432 就 OK 了；因为建的临时数据库，高保真呀，所以改的少</span>

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> restart confluenceNew <span class="token comment"># 重启 confluenceNew</span>
</code></pre></div><p>我们重新访问新的confluence，<code>http://{ip}:8090/</code>替换自己的ip地址，我们会发现报错了</p><table><thead><tr><th>Description</th><th>Time</th><th>Level</th><th>Exception</th></tr></thead><tbody><tr><td>This installation of Confluence has failed one or more bootstrap configuration checks. Please check the logs for details.</td><td>2021-11-29 09:35:30</td><td>fatal</td><td>Confluence will not start up because the build number in the home directory [8703] doesn&#39;t match the build number in the database [7901].</td></tr></tbody></table><p>如图：</p><p><img src="`+u+`" alt="build number"></p><p><strong>处理方式</strong>: 千万记得改配置文件里面的 build number 不要更改数据库里面的，要不然会有其他问题。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /d/dockerData/confluenceNew/data/confluence.cfg.xml
<span class="token comment">#  &lt;buildNumber&gt;8703&lt;/buildNumber&gt;</span>
<span class="token comment"># 修改这个 8703 为 7901 就 OK 了；</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> restart confluenceNew <span class="token comment"># 重启 confluenceNew</span>

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> stop postgresnew <span class="token comment"># 停止临时的 postgres，没用了</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> container <span class="token function">rm</span> postgresnew  <span class="token comment"># 删除临时的 postgres</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">docker</span> volume prune     <span class="token comment"># 清空刚删除的 卷，省空间</span>

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> /d/dockerData/confluenceNew/data/attachments <span class="token comment"># 删除新的里面的附件文件夹，没有的话可以不处理</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token function">mv</span> /d/dockerData/confluence/data/attachments /d/dockerData/confluenceNew/data/ <span class="token comment"># 老系统的附件移到新系统</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span> <span class="token builtin class-name">cd</span> /d/dockerData/confluenceNew/data/
<span class="token punctuation">[</span>root@localhost data<span class="token punctuation">]</span> <span class="token function">ls</span> <span class="token parameter variable">-lh</span>   <span class="token comment"># 列出文件，就能看出有个猫腻， 有个 daemon </span>
total 84K
drwxr-x---. <span class="token number">2</span>   <span class="token number">2002</span>   <span class="token number">2002</span>  <span class="token number">214</span> Nov <span class="token number">29</span> 07:26 analytics-logs
drwxr-x---. <span class="token number">3</span> daemon daemon   <span class="token number">20</span> Nov <span class="token number">29</span> 00:54 attachments  <span class="token comment"># 就是这行，我们的处理一下才能让附件正常</span>
drwxr-x---. <span class="token number">2</span>   <span class="token number">2002</span>   <span class="token number">2002</span>    <span class="token number">6</span> Nov <span class="token number">29</span> 04:22 backups
drwxr-x---. <span class="token number">2</span>   <span class="token number">2002</span>   <span class="token number">2002</span>    <span class="token number">6</span> Nov <span class="token number">29</span> 04:20 bundled-plugins
-rw-r-----. <span class="token number">1</span>   <span class="token number">2002</span>   <span class="token number">2002</span> <span class="token number">5</span>.8K Nov <span class="token number">29</span> 07:27 confluence.cfg.xml
-rw-r--r--. <span class="token number">1</span>   <span class="token number">2002</span>   <span class="token number">2002</span>    <span class="token number">1</span> Nov <span class="token number">29</span> 07:23 docker-app.pid
drwxr-x---. <span class="token number">2</span>   <span class="token number">2002</span>   <span class="token number">2002</span>    <span class="token number">6</span> Nov <span class="token number">29</span> 04:21 imgEffects
drwxr-x---. <span class="token number">5</span>   <span class="token number">2002</span>   <span class="token number">2002</span> <span class="token number">4</span>.0K Nov <span class="token number">29</span> 07:27 index
drwxr-x---. <span class="token number">2</span>   <span class="token number">2002</span>   <span class="token number">2002</span>   <span class="token number">62</span> Nov <span class="token number">29</span> 07:07 journal
-rw-r-----. <span class="token number">1</span>   <span class="token number">2002</span>   <span class="token number">2002</span>    <span class="token number">0</span> Nov <span class="token number">29</span> 04:20 lock
drwxr-x---. <span class="token number">3</span>   <span class="token number">2002</span>   <span class="token number">2002</span>   <span class="token number">19</span> Nov <span class="token number">29</span> 04:24 log
drwxr-x---. <span class="token number">2</span>   <span class="token number">2002</span>   <span class="token number">2002</span> <span class="token number">4</span>.0K Nov <span class="token number">29</span> 04:01 logs
drwxr-x---. <span class="token number">2</span>   <span class="token number">2002</span>   <span class="token number">2002</span> <span class="token number">4</span>.0K Nov <span class="token number">29</span> 07:24 plugins-cache
drwxr-x---. <span class="token number">5</span>   <span class="token number">2002</span>   <span class="token number">2002</span>   <span class="token number">71</span> Nov <span class="token number">29</span> 04:20 plugins-osgi-cache
drwxr-x---. <span class="token number">2</span>   <span class="token number">2002</span>   <span class="token number">2002</span>    <span class="token number">6</span> Nov <span class="token number">29</span> 04:20 plugins-temp
drwxr-x---. <span class="token number">2</span>   <span class="token number">2002</span>   <span class="token number">2002</span>  <span class="token number">107</span> Nov <span class="token number">29</span> 07:06 recovery
drwxr-x---. <span class="token number">3</span>   <span class="token number">2002</span>   <span class="token number">2002</span>   <span class="token number">46</span> Nov <span class="token number">29</span> 04:24 shared-home
-rw-r-----. <span class="token number">1</span>   <span class="token number">2002</span>   <span class="token number">2002</span>  <span class="token number">450</span> Nov <span class="token number">29</span> 04:24 synchrony-args.properties
drwxr-x---. <span class="token number">2</span>   <span class="token number">2002</span>   <span class="token number">2002</span>    <span class="token number">6</span> Nov <span class="token number">29</span> 04:31 temp
drwxr-x---. <span class="token number">3</span>   <span class="token number">2002</span>   <span class="token number">2002</span>   <span class="token number">18</span> Nov <span class="token number">29</span> 04:23 viewfile
drwxr-x---. <span class="token number">2</span>   <span class="token number">2002</span>   <span class="token number">2002</span>  36K Nov <span class="token number">29</span> 07:36 webresource-temp

<span class="token punctuation">[</span>root@localhost data<span class="token punctuation">]</span>  <span class="token function">chown</span> <span class="token parameter variable">-R</span> <span class="token number">2002</span>:2002 attachments <span class="token comment"># 这样子就OK了</span>
</code></pre></div><p>访问 confluence，一切应该都正常了。</p><h2 id="其他问题" tabindex="-1"><a class="header-anchor" href="#其他问题" aria-hidden="true">#</a> 其他问题</h2><p>1、 空间目录里面看不到全部的空间 解决方法： 一般配置-&gt;内容索引 （重建索引就OK了）</p>`,28),g={href:"https://community.atlassian.com/t5/Jira-Software-questions/server-xml-is-overwritten-by-Dockerfile/qaq-p/1173279",target:"_blank",rel:"noopener noreferrer"},x=t(`<p>我的操作备份一份模板文件，然后在原来的模板文件里面改的</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost attachments<span class="token punctuation">]</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> confluenceNew <span class="token function">bash</span>
root@6ad1c13b2ea6:/var/atlassian/application-data/confluence <span class="token builtin class-name">cd</span> /opt/atlassian/etc
root@6ad1c13b2ea6:/opt/atlassian/etc <span class="token function">ls</span> <span class="token parameter variable">-lh</span>
total 20K
-rw-rw-rw-. <span class="token number">1</span> root root <span class="token number">4</span>.8K Nov <span class="token number">13</span> <span class="token number">16</span>:15 confluence.cfg.xml.j2
-rw-rw-rw-. <span class="token number">1</span> root root   <span class="token number">82</span> Nov <span class="token number">13</span> <span class="token number">16</span>:15 confluence-init.properties.j2
-rw-rw-rw-. <span class="token number">1</span> root root <span class="token number">3</span>.1K Nov <span class="token number">13</span> <span class="token number">16</span>:15 seraph-config.xml.j2
-rw-rw-rw-. <span class="token number">1</span> root root <span class="token number">3</span>.4K Nov <span class="token number">13</span> <span class="token number">16</span>:15 server.xml.j2  <span class="token comment"># 就是这个文件，copy一份修改就行了，找不到文件记得看第一个破解的那儿会有介绍怎么找对应的docker存在本地的文件</span>
</code></pre></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>一开始的思路还是没有想明白，最后搞定了之后感觉刚开始有点傻了，不过这个过程中也是学到了很多，中途补了linux的一些知识，再加上 docker 的一些东西，真的是收获良多。</p><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,5),w={href:"https://blog.csdn.net/cojn52/article/details/109094433",target:"_blank",rel:"noopener noreferrer"},N={href:"https://www.cnblogs.com/sanduzxcvbnm/p/13809276.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://blog.csdn.net/qq_41411704/article/details/120286617",target:"_blank",rel:"noopener noreferrer"};function q(y,D){const s=p("ExternalLinkIcon");return c(),l("div",null,[i,d,a("p",null,[n("服务器很多服务都很卡，通过检查发现是一起运行的confluence异常，被挖矿病毒挖矿，"),a("a",b,[n("华为云"),e(s)]),n("和"),a("a",m,[n("官网"),e(s)]),n("也有说明。 知道问题之后，处理方式就是将现有的问题版本升级成安全版本(可在官网查看安全版本)，我们选择的是Atlassian Confluence Server/Data Center 7.13.0，由于之前只是使用，这个confluence之前搭建的大神已经离职了，所以让我重新整，中间经历了不少，也学了不少东西，在此记录一下。")]),f,a("p",null,[n("想要破解，参看这片文章"),a("a",h,[n("Confluence破解"),e(s)]),n("，别人写过的不想再写了；需要注意的是告诉你们怎么找到对应的文件，其他就按照上面的那个做吧。需要出一期的话，可以评论一下。")]),v,a("p",null,[n("2、 更改域名配置后重启被修改 解决办法： 参考"),a("a",g,[n("官网的文章server-xml-is-overwritten-by-Dockerfile"),e(s)])]),x,a("p",null,[a("a",w,[n("Confluence破解"),e(s)]),a("a",N,[n("Docker 部署 Confluence(破解版)"),e(s)]),a("a",_,[n("docker confluence挖矿病毒处理及版本升级"),e(s)])])])}const E=o(k,[["render",q],["__file","Confluence.html.vue"]]);export{E as default};
