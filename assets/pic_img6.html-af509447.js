import{_ as n,o as s,c as a,a as p}from"./app-f0851ed3.js";const t="/steven-blogs/assets/pic_img6_1-2312807f.png",o="/steven-blogs/assets/pic_img6_2-ecd38f9f.png",c="/steven-blogs/assets/pic_img6_3-203d6ef3.png",e="/steven-blogs/assets/pic_img6_4-e367a6b6.png",u="/steven-blogs/assets/pic_img6_5-56e3269e.png",l={},k=p('<h1 id="在visual-c-下实现图像的透明处理" tabindex="-1"><a class="header-anchor" href="#在visual-c-下实现图像的透明处理" aria-hidden="true">#</a> 在Visual C#下实现图像的透明处理</h1><p>以前编程实现图像的透明处理是比较困难的，代码量多，工作又复杂。不过，现在随着微软VS.Net开发工具的逐渐普及，伴随而来的新兴开发语言C#以及GDI+等新的编程机制正为广大开发人员所接受。本文就向大家介绍在Visual C#中，如何运用GDI+中Alpha Blending技术实现图像的透明处理。</p><p>在各类有关.Net的技术论坛上常有人问如何实现透明的图像或图形效果，答案很简单，就是Alpha Blending技术。Alpha Blending技术是一个混合各种颜色值并产生透明效果的过程。具体的实现原理也很简单：在GDI+中，任何一种颜色由四种成分组成――Alpha，Red，Green和Blue。其中的Alpha成分则代表了一种颜色的透明程度，它的值在0到255之间变化。不言而喻，0代表完全透明而255则表示完全不透明。因此，你只要用透明效果创建一种颜色并用该颜色来画图像就可以完成图像的透明处理了。</p><p>原理虽然比较简单，但是要初学者实际操作起来可能也并不是那么容易。所以下面我就向大家展示一个很好的实例。在该实例中，我先在窗体上画了一些图形，这些图形包括直线、曲线、椭圆等，同时这些图形有的是不透明的、有的是半透明的、有的是强透明的（注：其中的&quot;强透明&quot;意思为非常透明，几乎为全透明，但是又隐约可见）。如果你有GDI+编程的一些基本知识，完成这些应该并不困难。然后，我在这些图形上覆盖了一幅图像，在正常情况（也就是不透明的情况）下，窗体上的图形为图像所遮盖，所以应该是看不见的。接着，我通过一个按钮的消息响应函数使得图像具有透明效果，这样一来的话，窗体上原来的那些图形就会浮现出来。</p><h2 id="实现方法" tabindex="-1"><a class="header-anchor" href="#实现方法" aria-hidden="true">#</a> 实现方法</h2><p>首先，打开VS.net，新建一个Visual C#的项目，选择模板为&quot;Windows应用程序&quot;，同时不妨命名为&quot;TransparentImage&quot;，图示如下：</p><p><img src="'+t+'" alt="img_1"><br> 图1</p><p>接着，进行窗体布局。往窗体上添加三个按钮以完成用户输入控制。将窗体的Text属性设置为&quot;图像的透明处理示例&quot;；将三个按钮的Text属性分别设置为&quot;半透明&quot;、&quot;强透明&quot;、&quot;不透明&quot;；同时，为界面美观起见将三个按钮的FlatStyle属性均设置为Flat。最终，窗体布局的图示如下：</p><p><img src="'+o+`" alt="img_2"><br> 图2</p><p>完成了窗体布局，我们接着开始编写代码。首先，我们添加窗体的Paint消息响应函数。读者可以发现，我们在进行窗体布局的时候并没有在窗体上添加pictureBox控件，那么我们怎么显示图像并画出各种图形呢？这就要用到窗体的Paint消息响应函数了，函数实现如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Form1_Paint</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>PaintEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Graphics</span> g <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">CreateGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>BackColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">DrawPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//画一幅图像</span>
    <span class="token class-name">Image</span> curImage <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">@&quot;e:\\photo.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">DrawImage</span><span class="token punctuation">(</span>curImage<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> curImage<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> curImage<span class="token punctuation">.</span>Height<span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>（注：其中的e:\\photo.jpg为笔者电脑上图像文件的路径，读者可以将它改为自己电脑上图像文件的路径，下同。该文件可在源代码文件夹中找到。）</p><p>在上面的函数中，我们先建立了一个<code>Graphics</code>对象，该对象就是专门用来画图形和图像的。我们还调用了本类的一个私有成员函数<code>DrawPerson()</code>，该函数实现的功能就是在窗体上画一些图形，这些图形包括了椭圆、曲线、三角形，而这些图形合在一起恰好构成了一个人的头部轮廓，所以我姑且将该函数命名为了<code>DrawPerson()</code>。在调用完毕后，就在窗体上画出一幅图像（用一个图像文件完成）。最后就是<code>Graphics</code>对象的<code>Dispose</code>工作。其中，<code>DrawPerson()</code>函数的具体实现如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DrawPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Graphics</span> g <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">CreateGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>BackColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//画人头轮廓</span>
    <span class="token class-name">Rectangle</span> rect1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rectangle</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    g<span class="token punctuation">.</span><span class="token function">FillEllipse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SolidBrush</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token function">FromArgb</span><span class="token punctuation">(</span><span class="token number">225</span><span class="token punctuation">,</span> <span class="token number">155</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rect1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//定义三支画笔，其中第一支为不透明，第二支为半透明，第三支为强透明</span>
    <span class="token class-name">Pen</span> opqPen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Pen</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token function">FromArgb</span><span class="token punctuation">(</span><span class="token number">155</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">205</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Pen</span> transPen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Pen</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token function">FromArgb</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Pen</span> totTransPen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Pen</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token function">FromArgb</span><span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//画人头的眼睛</span>
    <span class="token class-name">Rectangle</span> rect2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rectangle</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">DrawArc</span><span class="token punctuation">(</span> opqPen<span class="token punctuation">,</span> rect2<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">DrawArc</span><span class="token punctuation">(</span> opqPen<span class="token punctuation">,</span> rect2<span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">40</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//画人头的鼻子</span>
    <span class="token class-name">Point<span class="token punctuation">[</span><span class="token punctuation">]</span></span> threePoints<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> 
    <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">DrawPolygon</span><span class="token punctuation">(</span>transPen<span class="token punctuation">,</span>threePoints<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//画人头的嘴巴</span>
    <span class="token class-name">Rectangle</span> rect3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rectangle</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">DrawEllipse</span><span class="token punctuation">(</span>totTransPen<span class="token punctuation">,</span>rect3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>请读者注意，在上面的函数中，我们定义画笔的时候定义了三支透明程度不同的画笔：不透明、半透明、强透明，如此一来就可以完成图形的透明效果。不过，图像的透明效果实现起来相对复杂，我将会在后面介绍。</p><p>这样，我们就完成了窗体的初始化工作。在运行程序后，窗体上就不是空白一片，而是有具体的图像了。由于我们的图像比较大，所以窗体上的图形在最初的时候是看不见的，只有当图像为透明时，其中的人头图形才会显现，这就正好符合我们程序的初衷了。</p><p>接下来，我们就着手实现图像的透明效果。在实现图像的透明效果过程中，我们需要用到了<code>ColorMatrix</code>和<code>ImageAttributes</code>等类，而这些类包含在<code>System.Drawing.Imaging</code>名字空间中，所以我们在源代码文件的开始处需添加：<code>using System.Drawing.Imaging;</code>来实现对这些类的调用。还有，<code>ImageAttributes</code>类是用来设置图像的一系列属性的，它被用作<code>Graphics</code>类对象的<code>DrawImage</code>方法的一个参数。而<code>ImageAttributes</code>类对象的方法<code>SetColorMatrix</code>则调用<code>ColorMatrix</code>来设置图像的颜色值。而图像的透明效果正是又<code>ColorMatrix</code>中部分值所决定的。下面就是具体的实现方法了。</p><p>添加三个按钮的消息响应函数如下：</p><p>&quot;半透明&quot;按钮：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button1_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Graphics</span> g <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">CreateGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>BackColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">DrawPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Bitmap</span> bitmap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Bitmap</span><span class="token punctuation">(</span><span class="token string">@&quot;e:\\photo.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> ptsArray <span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5f</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//注意：此处为0.5f，图像为半透明</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name">ColorMatrix</span> clrMatrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ColorMatrix</span><span class="token punctuation">(</span>ptsArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ImageAttributes</span> imgAttributes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ImageAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//设置图像的颜色属性</span>
    imgAttributes<span class="token punctuation">.</span><span class="token function">SetColorMatrix</span><span class="token punctuation">(</span>clrMatrix<span class="token punctuation">,</span> ColorMatrixFlag<span class="token punctuation">.</span>Default<span class="token punctuation">,</span> ColorAdjustType<span class="token punctuation">.</span>Bitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//画图像</span>
    g<span class="token punctuation">.</span><span class="token function">DrawImage</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rectangle</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bitmap<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> bitmap<span class="token punctuation">.</span>Height<span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bitmap<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> bitmap<span class="token punctuation">.</span>Height<span class="token punctuation">,</span>
                GraphicsUnit<span class="token punctuation">.</span>Pixel<span class="token punctuation">,</span> imgAttributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>&quot;强透明&quot;按钮：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button2_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Graphics</span> g <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">CreateGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>BackColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">DrawPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Bitmap</span> bitmap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Bitmap</span><span class="token punctuation">(</span><span class="token string">@&quot;e:\\photo.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> ptsArray <span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1f</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//注意：此处为0.1f，图像为强透明</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name">ColorMatrix</span> clrMatrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ColorMatrix</span><span class="token punctuation">(</span>ptsArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ImageAttributes</span> imgAttributes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ImageAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//设置图像的颜色属性</span>
    imgAttributes<span class="token punctuation">.</span><span class="token function">SetColorMatrix</span><span class="token punctuation">(</span>clrMatrix<span class="token punctuation">,</span>  ColorMatrixFlag<span class="token punctuation">.</span>Default<span class="token punctuation">,</span> ColorAdjustType<span class="token punctuation">.</span>Bitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//画图像</span>
    g<span class="token punctuation">.</span><span class="token function">DrawImage</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rectangle</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bitmap<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> bitmap<span class="token punctuation">.</span>Height<span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bitmap<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> bitmap<span class="token punctuation">.</span>Height<span class="token punctuation">,</span>
                    GraphicsUnit<span class="token punctuation">.</span>Pixel<span class="token punctuation">,</span> imgAttributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>&quot;不透明&quot;按钮：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button3_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Graphics</span> g <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">CreateGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>BackColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">DrawPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//画一幅图像</span>
    <span class="token class-name">Image</span> curImage <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">@&quot;e:\\photo.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">DrawImage</span><span class="token punctuation">(</span>curImage<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> curImage<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> curImage<span class="token punctuation">.</span>Height<span class="token punctuation">)</span><span class="token punctuation">;</span>
    g<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>这样，我们就完成了三个按钮的消息响应函数，整个程序也完毕了。按下Ctll+F5运行程序，我们将得到如下所示的界面：</p><p><img src="`+c+'" alt="img_3"><br> 图3</p><p>上面的情况是最初始时的状态。所以我们只可以看到一幅图像却看不到后面的图形，为了验证后面的图形是否存在，我们点击&quot;半透明&quot;按钮。这样，上面的图像就呈半透明状态，我们可以通过该图像看到隐藏在图像后面的图形了，图形就是上面所说的人头啊。效果图示如下：</p><p><img src="'+e+'" alt="img_4"><br> 图4</p><p>不过这里的人头图形还不是那么明显，不用着急，最后还有一个&quot;强透明&quot;效果还没有试过呢，下面就看看效果如何吧。（&quot;不透明&quot;就是恢复到原来的状态，不用解释了吧？呵呵！！）</p><p><img src="'+u+'" alt="img_5"><br> 图5</p><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2><p>本文通过一个实例向大家介绍了如何运用Visual C#实现图像的透明处理，其原理相对来说是比较简单的，这主要得归功于.Net框架中的类库，它们为我们提供了强大的功能，大大地简化了我们的编程工作。因此，要学习图像处理，就得掌握System.Drawing及其以下的各个命名空间中的类库。而要成为一名优秀的.Net程序员，学习整个.Net框架以及其类库才是最重要的，而并非是掌握那门编程语言的事。最后希望本文能对广大读者有所帮助。</p><p>源代码文件为TransparentImage.rar(下载)</p>',33),i=[k];function r(m,d){return s(),a("div",null,i)}const g=n(l,[["render",r],["__file","pic_img6.html.vue"]]);export{g as default};
