import{_ as t,r as p,o,c,b as n,d as s,e,a as u}from"./app-57d1f7b1.js";const l={},k={id:"socket编程",tabindex:"-1"},i=n("a",{class:"header-anchor",href:"#socket编程","aria-hidden":"true"},"#",-1),r={href:"http://www.cnblogs.com/.net%20lover/archive/2004/09/14/43091.aspx",target:"_blank",rel:"noopener noreferrer"},d=u(`<blockquote><p>posted on 2004-09-14 19:01 I have I can 阅读(814)</p></blockquote><p>socket在我平时的项目中好象从来都没用过，不过一般的聊天小程序都是用它来完成的。</p><p>常规做法：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code>socket<span class="token punctuation">.</span>connect                   <span class="token comment">//连接</span>
socket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment">//发送</span>
</code></pre></div><p>接收端：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">IPHostEntry</span> entry<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">IPHostEntry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entry<span class="token operator">=</span>Dns<span class="token punctuation">.</span><span class="token function">Resolve</span><span class="token punctuation">(</span>Dns<span class="token punctuation">.</span><span class="token function">GetHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//得到本机的机器名并解析</span>
<span class="token class-name">IPAddress<span class="token punctuation">[</span><span class="token punctuation">]</span></span> address<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">IPAddress</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
address<span class="token operator">=</span>entry<span class="token punctuation">.</span>AddressList<span class="token punctuation">;</span>
<span class="token class-name">IPEndPoint</span> point<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">IPEndPoint</span><span class="token punctuation">(</span>address<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//得到本机的ip和选择端口</span>
socket<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Socket</span><span class="token punctuation">(</span>AddressFamily<span class="token punctuation">.</span>InterNetwork<span class="token punctuation">,</span>SocketType<span class="token punctuation">.</span>Stream<span class="token punctuation">,</span>ProtocolType<span class="token punctuation">.</span>IP<span class="token punctuation">)</span><span class="token punctuation">;</span>
socket<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">//socket绑定端口</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    socket<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">//监听</span>
    <span class="token class-name">Socket</span> t<span class="token operator">=</span>socket<span class="token punctuation">.</span><span class="token function">Accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">//接受</span>
    t<span class="token punctuation">.</span><span class="token function">Receive</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token comment">//接收数据，存入byte[] b</span>
<span class="token punctuation">}</span>
</code></pre></div>`,6);function m(_,h){const a=p("ExternalLinkIcon");return o(),c("div",null,[n("h1",k,[i,s(),n("a",r,[s("socket编程"),e(a)])]),d])}const v=t(l,[["render",m],["__file","netsoc18.html.vue"]]);export{v as default};
