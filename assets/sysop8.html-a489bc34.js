import{_ as n,o as s,c as a,a as p}from"./app-a2b6e588.js";const t={},o=p(`<h1 id="c-代码关闭windows-xp" tabindex="-1"><a class="header-anchor" href="#c-代码关闭windows-xp" aria-hidden="true">#</a> C#代码关闭Windows XP</h1><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">shoutdown</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">StructLayout</span><span class="token attribute-arguments"><span class="token punctuation">(</span>LayoutKind<span class="token punctuation">.</span>Sequential<span class="token punctuation">,</span> Pack <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">internal</span> <span class="token keyword">struct</span> <span class="token class-name">TokPriv1Luid</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> Count<span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">long</span></span> Luid<span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> Attr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;kernel32.dll&quot;</span><span class="token punctuation">,</span> ExactSpelling <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">GetCurrentProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;advapi32.dll&quot;</span><span class="token punctuation">,</span> ExactSpelling <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">OpenProcessToken</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> h<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> acc<span class="token punctuation">,</span> <span class="token keyword">ref</span> <span class="token class-name">IntPtr</span> phtok<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;advapi32.dll&quot;</span><span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">LookupPrivilegeValue</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> host<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">,</span> <span class="token keyword">ref</span> <span class="token class-name"><span class="token keyword">long</span></span> pluid<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;advapi32.dll&quot;</span><span class="token punctuation">,</span> ExactSpelling <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">AdjustTokenPrivileges</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> htok<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> disall<span class="token punctuation">,</span> <span class="token keyword">ref</span> <span class="token class-name">TokPriv1Luid</span> newst<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> len<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> prev<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> relen<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> ExactSpelling <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">internal</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">ExitWindowsEx</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> flg<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> rea<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> SE_PRIVILEGE_ENABLED <span class="token operator">=</span> <span class="token number">0x00000002</span><span class="token punctuation">;</span>
    <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> TOKEN_QUERY <span class="token operator">=</span> <span class="token number">0x00000008</span><span class="token punctuation">;</span>
    <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> TOKEN_ADJUST_PRIVILEGES <span class="token operator">=</span> <span class="token number">0x00000020</span><span class="token punctuation">;</span>
    <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> SE_SHUTDOWN_NAME <span class="token operator">=</span> <span class="token string">&quot;SeShutdownPrivilege&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> EWX_LOGOFF <span class="token operator">=</span> <span class="token number">0x00000000</span><span class="token punctuation">;</span>
    <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> EWX_SHUTDOWN <span class="token operator">=</span> <span class="token number">0x00000001</span><span class="token punctuation">;</span>
    <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> EWX_REBOOT <span class="token operator">=</span> <span class="token number">0x00000002</span><span class="token punctuation">;</span>
    <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> EWX_FORCE <span class="token operator">=</span> <span class="token number">0x00000004</span><span class="token punctuation">;</span>
    <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> EWX_POWEROFF <span class="token operator">=</span> <span class="token number">0x00000008</span><span class="token punctuation">;</span>
    <span class="token keyword">internal</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> EWX_FORCEIFHUNG <span class="token operator">=</span> <span class="token number">0x00000010</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DoExitWin</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> flg<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">bool</span></span> ok<span class="token punctuation">;</span>
        <span class="token class-name">TokPriv1Luid</span> tp<span class="token punctuation">;</span>
        <span class="token class-name">IntPtr</span> hproc <span class="token operator">=</span> <span class="token function">GetCurrentProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">IntPtr</span> htok <span class="token operator">=</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">;</span>
        ok <span class="token operator">=</span> <span class="token function">OpenProcessToken</span><span class="token punctuation">(</span>hproc<span class="token punctuation">,</span> TOKEN_ADJUST_PRIVILEGES <span class="token operator">|</span> TOKEN_QUERY<span class="token punctuation">,</span> <span class="token keyword">ref</span> htok<span class="token punctuation">)</span><span class="token punctuation">;</span>
        tp<span class="token punctuation">.</span>Count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        tp<span class="token punctuation">.</span>Luid <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        tp<span class="token punctuation">.</span>Attr <span class="token operator">=</span> SE_PRIVILEGE_ENABLED<span class="token punctuation">;</span>
        ok <span class="token operator">=</span> <span class="token function">LookupPrivilegeValue</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> SE_SHUTDOWN_NAME<span class="token punctuation">,</span> <span class="token keyword">ref</span> tp<span class="token punctuation">.</span>Luid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ok <span class="token operator">=</span> <span class="token function">AdjustTokenPrivileges</span><span class="token punctuation">(</span>htok<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">ref</span> tp<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">,</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ok <span class="token operator">=</span> <span class="token function">ExitWindowsEx</span><span class="token punctuation">(</span>flg<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;正在关闭计算机……&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 修改 EWX_SHUTDOWN 或者 EWX_LOGOFF, EWX_REBOOT等实现不同得功能。</span>
        <span class="token comment">// 在XP下可以看到帮助信息，以得到不同得参数</span>
        <span class="token comment">// SHUTDOWN /?</span>
        <span class="token function">DoExitWin</span><span class="token punctuation">(</span>EWX_SHUTDOWN<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div>`,2),e=[o];function c(l,k){return s(),a("div",null,e)}const r=n(t,[["render",c],["__file","sysop8.html.vue"]]);export{r as default};
