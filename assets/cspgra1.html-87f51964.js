import{_ as n,o as s,c as a,a as o}from"./app-57d1f7b1.js";const p={},t=o(`<h1 id="用-间隔是什么意思" tabindex="-1"><a class="header-anchor" href="#用-间隔是什么意思" aria-hidden="true">#</a> 用“|”间隔是什么意思？</h1><div class="language-txt" data-ext="txt"><pre class="language-txt"><code>主　　题：  用“|”间隔是什么意思？
作　　者：  nehc (青义居士)  
等　　级：
信 誉 值：  106
所属论坛：  .NET技术 C#
问题点数：  20
回复次数：  46
发表时间：  2003-9-7 19:30:23
</code></pre></div><p>比如：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">this</span><span class="token punctuation">.</span>dateTimePicker1<span class="token punctuation">.</span>Anchor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>
            <span class="token punctuation">(</span>System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Top 
            <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Bottom<span class="token punctuation">)</span>
            <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Left<span class="token punctuation">)</span>
            <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>非常感谢！</p><hr><hr><p>回复人： Napoleo(蝴蝶)(废墟) ( 二级(初级)) 信誉：100 2003-9-7 19:33:36 得分:0</p><blockquote><p>or 并列</p></blockquote><p>回复人： gatr() ( 四级(中级)) 信誉：98 2003-9-7 19:34:29 得分:0</p><blockquote><p>不错，就是or 操作，或者说是“+”操作。</p></blockquote><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-7 20:13:02 得分:0</p><blockquote><p>是按位“或”运算，不过可不是“＋”，例如：3|1=3,但3+1=4;</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-9-8 3:06:34 得分:0</p><blockquote><p>就是或运算，微软的常数通常是以位1 其它为0为标准，所以| 时可以+ 一样的效果</p></blockquote><p>回复人： Amilsx(一个人住) ( 五级(中级)) 信誉：100 2003-9-8 3:52:51 得分:0</p><blockquote><p>或运算</p></blockquote><p>回复人： skykevin(无招) ( 二级(初级)) 信誉：100 2003-9-8 8:37:33 得分:0</p><blockquote><p>&quot;|&quot;:按位或运算<br> &quot;||&quot;:条件或运算</p></blockquote><p>回复人： zhpsam109(阿波) ( 二级(初级)) 信誉：100 2003-9-8 8:48:25 得分:10</p><blockquote><p>是按位“或”运算</p></blockquote><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-8 9:26:53 得分:0</p><blockquote><p>ArLi2003(阿利 路过.NET) <br> 就是或运算，微软的常数通常是以位1 其它为0为标准，所以<code>|</code>时可以<code>+</code>一样的效果<br> 大部分枚举常量确实如此。不过&quot;|&quot;与&quot;+&quot;概念完全不一样。不能误导啊！就算严格满足你说的条件，也不是一样的效果，如：1<code>|</code>1=1,而1<code>+</code>1=2;再如：4<code>|</code>4=4；而4<code>+</code>4=8;他们都是1位为1，就象微软的枚举常量一样，但&quot;位或&quot;与相加不一样啊！<br> 再&quot;Or&quot;或&quot;||&quot;一般是表示逻辑&quot;或&quot;，同&quot;|&quot;也不是一回事。</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-9-8 11:16:39 得分:10</p><blockquote><p>晕。。。jjccc 我没有说 <code>|</code> 和 <code>+</code> 是相等的</p><p>你去查下微软的SDK，它的常数标准是这样排的（二进制）：</p><p>000001 000010 000100 001000 010000 100000 类推，所以在VC 上很多人包括我习惯用<code>|</code></p></blockquote><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-8 11:21:27 得分:0</p><blockquote><p>ArLi2003(阿利 路过.NET) ：<br> 4:二进制为：00000100,但00000100<code>|</code>00000100 与 00000100<code>+</code>00000100一样吗？</p></blockquote><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-8 11:24:08 得分:0</p><blockquote><p>当然某些情况：如0001<code>+</code>0010 与 0001<code>|</code>0010结果是一样的。没别的意思，不过是和你研究研究....</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-9-8 22:11:33 得分:0</p><blockquote><p>呵呵，可能你不是很理解| 在微软界的参数重加法，比如楼主的例子：</p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">this</span><span class="token punctuation">.</span>dateTimePicker1<span class="token punctuation">.</span>Anchor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Top <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Bottom<span class="token punctuation">)</span>
                <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Left<span class="token punctuation">)</span>
                <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>其实就是</p><p><code>this.dateTimePicker1.Anchor = ((((System.Windows.Forms.AnchorStyles) 1|2)|4)|8);</code></p><p>System.Windows.Forms.AnchorStyles. 的 top 是1，2进制为 0001<br> Bottom是2，2进制为 0010<br> left是4，2进制为 0100<br> right是8，2进制为 1000<br></p><p>所以它们的<code>|</code>和<code>+</code>是一样的，至于说的 00100 和 00100 这种二个相同的常数相和是不存在的，因为我上面已经说了，微软的常数都是以单个位为1其它都为0</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-9-8 22:19:19 得分:0</p><blockquote><p>比如：</p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">this</span><span class="token punctuation">.</span>textBox1<span class="token punctuation">.</span>Anchor <span class="token operator">=</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">2</span><span class="token operator">|</span><span class="token number">4</span><span class="token operator">|</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>textBox1<span class="token punctuation">.</span>Anchor <span class="token operator">=</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">4</span><span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>是一样的，因为微软的常数是不可能有任何一个BIT 是与同应用域的其它常数相同的（某个bit 不可能同时为1）<br> 这就是为什么2之后是4之后又是8 的原因，这是它的一个规则</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-9-8 22:20:50 得分:0</p><blockquote><p><code>|</code>和<code>+</code>在数学上是不会同等的，是二种运算，但在微软的标准常数上是相等的</p></blockquote><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-8 23:03:32 得分:0</p><blockquote><p>呵呵，继续研究：<br> 在微软的标准常数上是相等的＝＝》<br><code>this.textBox1.Anchor = (System.Windows.Forms.AnchorStyles)(1|1|1|1);</code><br><br><code>this.textBox1.Anchor = (System.Windows.Forms.AnchorStyles)(1+1+1=1);</code><br> 一样吗？不信作个Form试试。<br> 当然一般情况下绝对不会这么用，但用来作例子足以说明在C,C++,C#语言里，&quot;|&quot;和&quot;+&quot;绝对不一样。只不过在某些情况下(如你说微&gt;软标准常数，那是因为你每个参数都不一样，也就是说没有两个参数在同一位上都视&quot;1&quot;)碰巧运算结果一样罢了。就比方数学上<code>2&gt;+2＝4；8-4＝4</code>，总不能说&quot;+&quot;和&quot;-&quot;是一样的效果罢？<br> 总之,&quot;|&quot;和&quot;+&quot;是任何时候都绝对不是一回事。要不你比较两个运算符反汇编后的汇编码看看，就知道真正的区别在哪了！<br></p></blockquote><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-8 23:05:30 得分:0</p><blockquote><p>对不起，打错了一个字符，上面<br><code>this.textBox1.Anchor = (System.Windows.Forms.AnchorStyles)(1+1+1=1);</code><br>应该是<br><code>this.textBox1.Anchor = (System.Windows.Forms.AnchorStyles)(1+1+1＋1);</code></p></blockquote><p>回复人： JGTM2000(铁马小子) ( 二级(初级)) 信誉：100 2003-9-8 23:15:21 得分:0</p><blockquote><p>jjcccc完全正确，而ArLi2003大概是笔误，大家就不必再纠缠了。我个人认为jjcccc的解释非常到位，讲出了问题的本质，尤其对于这样一个非常简单的问题，绝对不能从表面现象看结果。有时候就是这样，越是简单的问题就越有嚼头。😃</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-9-8 23:18:15 得分:0</p><blockquote><p>或运算和加运算谁不知道是有差别。。你的意思是要我去学一下和运算是怎么回事罗，呵呵</p><p>晕，我不是说了，微软的常数没有存在1+1 这种算法，所有的常数都不可能有任何一位是相同的，只可能是1|2|4 这样的加法，不可&gt;能有1|2|3 这样的加法，你找找微软同域有哪个常数是有2 又有3 的。。</p><p>因为3的2进制是 00000011 这样的话和 1 的二进制 00000001 存在和运算上的冲突，因为二个数的第8 个bit 都是1 存在相同是&gt;不允许的，所以微软的常数加法用|和+是相同的。</p><p>比如上面的，为什么微软定义四个常数为 1/2/4/8 而不是 1/2/3/4？因为</p><p>top 的常数值是1，二进制为 0001，Bottom是2，二进制为 0010 则 left 必须是4 以上而不能是3或1或2(因为会有bit 相同是会与和运算冲突)，right也必须是8 而不能是5或7 这样的，不知你&gt;明白没有。。。</p><p>从事高级编程的朋友是会不理解，慢慢就会接触到了</p></blockquote><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-8 23:20:49 得分:0</p><blockquote><p>是啊是啊，就是个简单问题，可能大家理解的角度不一样，就说岔开了。</p></blockquote><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-8 23:23:48 得分:0</p><blockquote><p>不过最后一次：如下<br></p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">this</span><span class="token punctuation">.</span>dateTimePicker1<span class="token punctuation">.</span>Anchor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Top 
                <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Top<span class="token punctuation">)</span>
                <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Left<span class="token punctuation">)</span>
                <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>大概没有人（包括c#编译器）规定不允许这么做吧！</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-9-8 23:27:38 得分:0</p><blockquote><p>再深入一些吧：</p><p>假设 System.Windows.Forms.AnchorStyles 是一个8bit 的数：</p><p>top 的常数值是1，二进制为 00000001，Bottom是2，二进制为 00000010</p><p>由于后二个bit 都已经被占用，所以第三个常数只能是 1-6 bit可用，所以它选择了第六个bit 置1，所以 left 必须是4 以上而不&gt;能再是1-3 之间任何数，之后的 right 也因为后三个bit 被占用，只能使用 1-5 bit 所以它只能是8 以上而不能是 1-7 之间任&gt;何数</p><p>所以就有了不可能有相同常数相加的情况，这是微软常数的规则，不懂的要学会理解它，应该不难</p><p>因为只可能有：</p><p><code>0001|0010</code> 而不可能有 <code>0001|0011</code> 这种情况，更不可能有 <code>0001|0001</code> 这样的 。。</p><p>(-_-!)</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-9-8 23:33:25 得分:0</p><blockquote><p>非也，<br><br></p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">this</span><span class="token punctuation">.</span>textBox1<span class="token punctuation">.</span>Multiline <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>textBox1<span class="token punctuation">.</span>Anchor <span class="token operator">=</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">)</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Top 
            <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Top 
            <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Left 
            <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>textBox1<span class="token punctuation">.</span>Anchor <span class="token operator">=</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">2</span><span class="token operator">|</span><span class="token number">4</span><span class="token operator">|</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>这二种都是正宗的VC 风格，你自己在C# 试一下行不行</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-9-8 23:38:31 得分:0</p><blockquote><p>上文有二个常数写错了，应为：</p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">this</span><span class="token punctuation">.</span>textBox1<span class="token punctuation">.</span>Anchor <span class="token operator">=</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">)</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Top 
            <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Bottom 
            <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Left 
            <span class="token operator">|</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>AnchorStyles<span class="token punctuation">.</span>Right<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-8 23:40:37 得分:0</p><blockquote><p>to ArLi2003(阿利 路过.NET)：<br> 问题越辩越名，不好意思，犯一次戒：<br> &gt;&gt;&gt;更不可能有 <code>0001|0001</code> 这样的 。。<br> 那只是在正确的情况下，你不会这么写，但不是说不允许这么写。比如无意中写错了代码总是有。<br> 诚心对ArLi2003说一句。你的理解确实有一点小湾没有转过来。若这样，估计写程序的时候，可能容易出些许逻辑上的错误，就是编译和允许都没有问题，但就是得不到自己要的结果。而一旦程序这种错误，还特别难查，所以训练一下严密性没有坏处。<br> 不妥之处，请谅解！</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-9-8 23:41:45 得分:0</p><blockquote><p>因为你的2个 top 和2个left 违背了不能有二个有bit 位相同的常数进行和的原则<br> 而编译器是不会对这种正当的运算进行检查，所以可以编译，但值属于非法</p></blockquote><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-8 23:42:43 得分:0</p><blockquote><p>就是编译和允许都没有问题＝＝》就是编译运行都没有问题</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-9-8 23:44:30 得分:0</p><blockquote><p>要知道象你所举的那个例 <code>top|top</code> 换成 <code>top+top</code> 也是一样的非法值，所以只可能是在常数定义上出错，而不可能在<code>|</code>和<code>+</code>上出错，理解了这些道理，在以后我们自己写常数时也会顾虑到的</p></blockquote><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-8 23:46:42 得分:0</p><blockquote><p><code>top|top＝top</code>，但<code>top+top＝2*top</code></p></blockquote><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-8 23:49:43 得分:0</p><blockquote><p><code>top|top＝top</code>，合法且没有问题；但<code>top+top＝2*top</code>，合法，但可能有问题。</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-9-8 23:50:14 得分:0</p><blockquote><p>晕，你还真是牛。。<br> 你换成<code>+</code>的话得到的是 2*top 一样非法值（因为在常数运算<code>|</code>就是<code>+</code>，所以如果<code>|</code>不允许有相同bit 的数相和也就相当于不能有二个相同的常数相加），你自己试，这就是微软常数的精妙之处，它的精处在于：<br><br></p><p><code>top+top =4;</code> 这是正当的值，也就变成了left 所以就被误会了<br> 而如果你是习惯于 <code>top|top = 2</code> 它就还是原意top，就不会出错了<br><br></p><p>这就是为什么用<code>|</code>而不用<code>+</code>的原因</p></blockquote><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-8 23:52:03 得分:0</p><blockquote><p>这就没办法了。洗洗睡了！</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-9-8 23:53:31 得分:0</p><blockquote><p>我理解你的意思了，你说的对<br> 我文提过的“|就是+”是基于没有错误的情况下，所以搞VC 的代码基本上都是用<code>|</code>而没用<code>+</code>，虽然它们在没有误操作的情况下是相同的，但碰上误操作就可能出错，所以大家都习惯用<code>|</code></p></blockquote><p>回复人： zhouzhouzhou(人生程序) ( 三级(初级)) 信誉：100 2003-9-9 8:07:16 得分:0</p><blockquote><p>我來接分<br> 樓上的說完了。<br> 😃</p></blockquote><p>回复人： xamcsdn2(知了) ( 二级(初级)) 信誉：100 2003-9-9 9:25:54 得分:0</p><blockquote><p>二进制的位或操作得出的值正好和二进制的算术加操作得出的值一样。仅此而已。</p></blockquote><p>回复人： xamcsdn2(知了) ( 二级(初级)) 信誉：100 2003-9-9 9:26:53 得分:0</p><blockquote><p>当然是在某种特殊的情况下。</p></blockquote><p>回复人： JGTM2000(铁马小子) ( 二级(初级)) 信誉：100 2003-9-9 14:01:47 得分:0</p><blockquote><p>to ArLi2003:</p><p>大哥，你是高人你可以很明白怎么做才对，可是既然是技术论坛，最好是给大家一种最正确的用法，以避免有意或无意的错误。对于这个问题，最准确的说法应该是“在特殊情况下”位或运算等同于加法运算，然而两者从概念上绝非可以互相替代的。也就是说，只要是对位标志进行组合运算就一定要用或运算符（<code>|</code>）而绝不可以用加法运算符（<code>+</code>）。我说“绝不可以”是有充分理由的，试问如果你有一个函数，其功能是对某一个可能已经有值的位标志变量组合一个新的标志位，你会怎么写呢？就算所有的常数都已经定义为独位的标志，可是你不能保证传入的标志在该位上一定为0啊！如下：</p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">EnsureFlag</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token class-name"><span class="token keyword">int</span></span> flags<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> newFlag<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    flags <span class="token operator">|=</span> newFlag<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><blockquote><p>对比：</p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">EnsureFlag</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token class-name"><span class="token keyword">int</span></span> flags<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> newFlag<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    flags <span class="token operator">+=</span> newFlag<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><blockquote><p>两者在运行时绝对是有天壤之别！我想如果你在程序中写+=的话，甭说高级程序员，恐怕连最初级的程序员都不会让你做的。另外，关于你所说的“微软的常数规则”其实只是一种简单的现象而已，而且你对这个现象的观察可能还不够仔细，事实上微软也定义了一些非独位的常数，这些常数用于表示一些常见的组合，如<code>XXX_DEFAULT</code>，他可能等于<code>XXX_FLAG1|XXX_FLAG2</code>。这时候你写<code>XXX_DEFAULT|XXX_FLAG1</code>肯定是没错的，然而你写<code>XXX_DEFAULT+XXX_FLAG1</code>肯定就有问题了（编译没问题不等于程序没问题）！<br><br> 总之，<code>|</code>与<code>+</code>绝对是两码事，决不能因为在某些特定的情况下两者可以有相同的答案就认为他们可以相互替换，这绝对是一个严重的问题！技术上的事情容不得半点马虎的！<br><br> 如有得罪还请原谅——为了大多数人对真理的正确理解吧！谢谢：）</p></blockquote><p>回复人： JGTM2000(铁马小子) ( 二级(初级)) 信誉：100 2003-9-9 14:06:31 得分:0</p><blockquote><p>同理，用于排除标志位也只能用and not，绝不可以用<code>-</code>。开关标志是用异或运算（exclusive-OR）<code>^</code>，没有简单的数字运算可以代替。OVER!</p></blockquote><p>回复人： ylc001(白面包青天) ( 二级(初级)) 信誉：100 2003-9-9 14:09:38 得分:0</p><blockquote><p>学到东西了。呵呵</p></blockquote><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-9 14:41:09 得分:0</p><blockquote><p>JGTM2000(铁马小子) ，你不简单！看来我是老朽了，有些问题总以为对方应该明白的，就蜻蜓点水似的说一下，反而这样越说越说不清楚！还是你不含含糊糊！这点得向你学习（真心话！）。因为的确，技术上的事情容不得半点马虎的！。我很早以前做过导弹、卫星发射时的跟踪引导程序。从而有机会接触到或听到国外或前人一些因为程序上一点点小Bug（比这帖子讨论的问题性质还轻！），就导致巨大惨痛的后果的实例。</p></blockquote><p>回复人： jjcccc() ( 一星(中级)) 信誉：100 2003-9-9 14:59:47 得分:0</p><blockquote><p>还可以说的更彻底一些：位操作对CPU（Intel）来说，一般是test指令，而+就是add指令。<br> 再可以说更更彻底，那就要说道数字逻辑电路了，哈哈。</p></blockquote><p>回复人： win32c(清茶+浓咖啡=C#) ( 五级(中级)) 信誉：105 2003-9-9 15:10:52 得分:0</p><blockquote><p>路过<br> 强烈建议总结一下！</p></blockquote><p>回复人： qimini(循序渐进) ( 一星(中级)) 信誉：106 2003-9-9 15:45:12 得分:0</p><blockquote><p>导弹是怎样做成地？中国在这方面是否先进的？（太爱国了）</p></blockquote><p>回复人： ArLi2003(阿利 路过而已) ( 两星(中级)) 信誉：100 2003-9-10 18:11:52 得分:0</p><blockquote><p>晕.. 浪费口水</p></blockquote><p>回复人： Beta4(一会就好) ( 三级(初级)) 信誉：100 2003-9-10 18:34:26 得分:0</p><blockquote><p>使用“|”来处理的枚举在定义时一定要加上属性<code>[Flags]</code>,如</p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//权限字枚举类型</span>
<span class="token punctuation">[</span>Flags<span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">RightWordEnum</span>
<span class="token punctuation">{</span>
    NdaSetting <span class="token operator">=</span> <span class="token number">0X00000001</span><span class="token punctuation">,</span>
    Measure <span class="token operator">=</span> <span class="token number">0X00000002</span><span class="token punctuation">,</span>
    SaveData <span class="token operator">=</span> <span class="token number">0X00000004</span><span class="token punctuation">,</span>
    ViewData <span class="token operator">=</span> <span class="token number">0X00000008</span><span class="token punctuation">,</span>
    ModifyData <span class="token operator">=</span> <span class="token number">0X00000010</span><span class="token punctuation">,</span>
    BackupData <span class="token operator">=</span> <span class="token number">0X00000040</span><span class="token punctuation">,</span>
    Template <span class="token operator">=</span> <span class="token number">0X00000100</span><span class="token punctuation">,</span>
    User <span class="token operator">=</span> <span class="token number">0X00001000</span><span class="token punctuation">,</span>
    SurveyPoint <span class="token operator">=</span> <span class="token number">0X00010000</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><p>回复人： JGTM2000(铁马小子) ( 二级(初级)) 信誉：100 2003-9-11 15:20:53 得分:0</p><blockquote><p>补充，<code>[Flags]</code>属性不是必加的，然而对于标志位枚举类型则加上它有若干好处。以上面朋友给出的枚举定义为例，设<code>RightWordEnum rightWord = RightWordEnum.SaveData | RightWordEnum.User</code>，你可以看看rightWord.ToString()在<code>[Flags]</code>有和没有两种情况下的差别（对于懒得动手的朋友，可以告诉你在有Flags属性的时候ToString会输出文本表示的枚举值，如“SaveData, User”），同理你也可以写<code>rightWord = Enum.Parse(&quot;ViewData, Template&quot;)</code>这样的语句把字符串解析为枚举值。甚至在定义了复合位标志的时候这一技巧仍然管用（如你可以定义<code>RightWordEnum.AllRights = 0x000000FF</code>，当所有8个位都被设置后，<code>rightWord.ToString</code>将直接输出AllRights）。这是一个非常实用的.NET特性噢！</p><p>供您参考，不要拍我！：）</p></blockquote><hr><hr><p>该问题已经结贴 ，得分记录： zhpsam109 (10)、 ArLi2003 (10)、</p>`,114),c=[t];function e(u,l){return s(),a("div",null,c)}const r=n(p,[["render",e],["__file","cspgra1.html.vue"]]);export{r as default};
