import{_ as n,o as s,c as a,a as t}from"./app-a2b6e588.js";const p="/steven-blogs/assets/toolbox30_1-e6220067.png",o="/steven-blogs/assets/toolbox30_2-955e936e.png",e="/steven-blogs/assets/toolbox30_3-a18c2177.png",c="/steven-blogs/assets/toolbox30_4-d98d10dc.png",l="/steven-blogs/assets/toolbox30_5-1d3d3286.png",u="/steven-blogs/assets/toolbox30_6-f48e8f61.png",k="/steven-blogs/assets/toolbox30_7-244d5d71.png",i="/steven-blogs/assets/toolbox30_8-45a39f04.png",r="/steven-blogs/assets/toolbox30_9-361585d0.png",m={},d=t('<h1 id="用c-编写activex控件" tabindex="-1"><a class="header-anchor" href="#用c-编写activex控件" aria-hidden="true">#</a> 用C#编写ActiveX控件</h1><ul><li><a href="#tb1">用C#编写ActiveX控件（一）</a></li><li><a href="#tb2">用C#编写ActiveX控件（二）</a></li><li><a href="#tb3">用C#编写ActiveX控件（三）</a></li></ul><h2 id="用c-编写activex控件-一" tabindex="-1"><a class="header-anchor" href="#用c-编写activex控件-一" aria-hidden="true">#</a> <a id="tb1">用C#编写ActiveX控件（一）</a></h2><p>前些日子做一个Web项目，必须自己编写一个ActiveX控件。如今的ActiveX控件大多是使用VB/C++来开发的，而我对他们并不熟悉，因此考虑使用熟悉的C#编写ActiveX控件。</p><p>首先，建立一个WinForm控件项目HelloWorld，并拖入一个Label控件，文字设为HelloWorld，如图：</p><p><img src="'+p+`" alt="img_1"></p><p>UserControl1.cs内容如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>ComponentModel</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">HelloWorld</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// UserControl1 的摘要说明。</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>UserControl</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Label</span> label1<span class="token punctuation">;</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 必需的设计器变量。</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>Container</span> components <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// 该调用是 Windows.Forms 窗体设计器所必需的。</span>
            <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// TODO: 在 InitComponent 调用后添加任何初始化</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 清理所有正在使用的资源。</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">bool</span></span> disposing<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>disposing<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>components <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    components<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span>disposing<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 组件设计器生成的代码</span>
        <span class="token preprocessor property">#<span class="token directive keyword">region</span> 组件设计器生成的代码</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 设计器支持所需的方法 - 不要使用代码编辑器</span>
        <span class="token doc-comment comment">/// 修改此方法的内容。</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>label1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Label</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">SuspendLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// </span>
            <span class="token comment">// label1</span>
            <span class="token comment">// </span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>label1<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>label1<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;label1&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>label1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>label1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>label1<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;HelloWorld&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>label1<span class="token punctuation">.</span>TextAlign <span class="token operator">=</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>ContentAlignment<span class="token punctuation">.</span>MiddleCenter<span class="token punctuation">;</span>
            <span class="token comment">// </span>
            <span class="token comment">// Demo</span>
            <span class="token comment">// </span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>label1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Demo&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">184</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">ResumeLayout</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token preprocessor property">#<span class="token directive keyword">endregion</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>此时编译项目，可以生成HelloWorld.dll。将此dll拷贝到IIS的虚拟根目录下，然后建立一个helloworld.htm的文件，html代码如下：</p><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>#223344<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>object</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>helloworld<span class="token punctuation">&quot;</span></span> <span class="token attr-name">classid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>’http://localhost/HelloWorld.dll#HelloWorld.Demo’</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>184<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>96<span class="token punctuation">&quot;</span></span> <span class="token attr-name">VIEWASTEXT</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>object</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>在IE地址栏中输入以下地址：<code>http://localhost/helloworld.htm</code>，出现界面：</p><p><img src="`+o+'" alt="img_2"><br> 如图，控件已经成功在页面上显示了。OK，我们已经完成了第一步。</p><p>但是问题到这里还没有解决。不相信？你可以试试在另外一台机器上测试，注意需要修改对应的html代码和URL地址。你可以看到这个在原来显示控件的地方是一个红色的叉，或者还会弹出一个对话框，表示这个控件没有任何权限。出现这个结果是微软的默认设置造成的，作者必须在控件所在的控件的 AssemblyInfo.cs/vb 中执行一个安全声明，声明这个控件必须使用赋予的权限，才可以显示出界面。我们在AssemblyInfo.cs中引用System.Security命名空间，并添加一句：</p><p><code>[assembly : AllowPartiallyTrustedCallers()]</code></p><p>现在重新编译，并且替换以前的dll，界面又可以显示出来了。</p><p>需要提醒的是，到现在为止，我们编写的还不是真正的ActiveX控件。这个控件到现在为止，还只是能够实现自身的显示，并且不能实现更多的功能，比如实现与脚本的交互或者操作客户端的注册表或者磁盘。这是由于.Net Framework的安全模型所限制的。如果我们希望这个控件突破.Net Framework安全模型的限制，实现与脚本的交互或者操作客户端的注册表或者磁盘的话，必须要让它成为真正的ActiveX控件。下面，我们把刚才的控件变成真正的ActiveX控件。</p><p>首先使用 工具—〉创建GUID 生成一个GUID，并修改UserControl1.cs文件。首先增加引用System.Runtime.InteropServices命名空间，并在Demo前面加入一条语句：</p><p><img src="'+e+'" alt="img_3"></p><p>注意Guid中的字符串，就是你生成的Guid字符串。它是你所生成的ActiveX控件的唯一标识符。然后修改项目属性，如图：</p><p><img src="'+c+'" alt="img_4"></p><p>注意面板中的最后一项，我们唯一需要修改的是将其值改为True。</p><p>重新编译。我们使用 工具—〉OLE/COM对象查看器 查看，如图：</p><p><img src="'+l+'" alt="img_5"></p><p>可以看到，我们写的HelloWorld.Demo已经被正确识别为COM组件。现在，我们已经可以像使用其它ActiveX控件一样在网页中显示了。在HelloWorld.Demo点击鼠标右键，如图：</p><p><img src="'+u+`" alt="img_6"></p><p>选择<code>Copy HTML &lt;object&gt; Tag to Clipboard</code>,可以将代码拷入剪贴板。</p><p>现在，我们改写helloworld.htm，html代码如下：</p><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>#223344<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>object</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>helloworld<span class="token punctuation">&quot;</span></span>
   <span class="token attr-name">classid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clsid:9551B223-6188-4387-B293-C7D9D8173E3A<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>184<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>96<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>object</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>使用IE查看，我们的控件又可以在网页中显示了。不过，这个时候它已经不再是以前的.net WinForm控件了，而是货真价实的ActiveX控件了。</p><p>不过，编写ActiveX控件的任务还没有完成。我们还没有实现脚本互动或者读写I/O，也没有实现ActiveX控件的自动分发。在下一篇Blog中，我会完成ActiveX控件的编写。</p><p>PS:这是我在博客园上的第一个Post，希望得到大家的支持。</p><h3 id="feedback" tabindex="-1"><a class="header-anchor" href="#feedback" aria-hidden="true">#</a> Feedback</h3><p>2005-01-04 23:11 by 洛特</p><blockquote><p>支持！接着写下去．建议把你的ＣＳＳ换一下啊．这个黑黑的看不清．<br> 等这个很久了呢．．</p></blockquote><p>2005-01-05 00:20 by suyife</p><blockquote><p>支持作者。</p></blockquote><p>2005-01-05 08:13 by jhtchina</p><blockquote><p>支持作者，我才开始学习.</p></blockquote><p>2005-01-05 08:23 by xp</p><blockquote><p>不过，这个时候它已经不再是以前的.net WinForm控件了，而是货真价实的ActiveX控件了。<br><br><code>======================================</code><br> 请问一下,客户端还要不要装.net framework啊?</p></blockquote><h2 id="用c-编写activex控件-二" tabindex="-1"><a class="header-anchor" href="#用c-编写activex控件-二" aria-hidden="true">#</a> <a id="tb2">用C#编写ActiveX控件（二）</a></h2><p>在我的上一篇blog中，已经实现了一个最基本的ActiveX控件。当然，我们编写的任务还没有完成。首先，我们先尝试实现和JS的交互能力。</p><p>我们在Demo中加入ShowMessage方法：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ShowMessage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> msg<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>msg <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>我们重新编译。在重新访问页面之前，我们先来修改html代码：</p><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>#223344<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>object</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>helloworld<span class="token punctuation">&quot;</span></span> <span class="token attr-name">classid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clsid:9551B223-6188-4387-B293-C7D9D8173E3A<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>184<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>96<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>object</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>button<span class="token punctuation">&#39;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value javascript language-javascript">helloworld<span class="token punctuation">.</span><span class="token function">ShowMessage</span><span class="token punctuation">(</span>“Hello World<span class="token operator">!</span>”<span class="token punctuation">)</span></span><span class="token punctuation">&#39;</span></span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>Click<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>现在，重新访问<code>http://localhost/helloworld.htm</code>，单击Click按钮，应该可以实现交互了。</p><p>但是结果却很遗憾，我们发现IE跳出了对话框，如图所示：</p><p><img src="`+k+`" alt="img_7"></p><p>单击确定之后，我们发现JS报错。根据提示，我们判断可以通过修改IE的设置使控件运行。打开IE的 工具——〉Internet选项——〉安全——〉本地Intranet——〉自定义级别——〉对没有标记为安全的ActiveX控件进行初始化和运行，将其值设为启用。我们刷新页面，现在终于可以正确运行了。</p><p>当然，我们不能指望我们的客户和我们一样修改这个值。毕竟，一是操作麻烦，二是给电脑带来了很大的安全风险。在互联网上搜索之后，发现必须要实现IObjectSafety接口，把ActiveX控件标记为安全的ActiveX控件。在搜索MSDN之后，我找到了IObjectSafety接口的定义。这就好办了。首先我们自己用C#实现这个接口：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Guid</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;CB5BDC81-93C1-11CF-8F20-00805F2CD064&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span><span class="token class-name">InterfaceType</span><span class="token attribute-arguments"><span class="token punctuation">(</span>ComInterfaceType<span class="token punctuation">.</span>InterfaceIsIUnknown<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IObjectSafety</span>
<span class="token punctuation">{</span>
    <span class="token comment">// methods</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">GetInterfacceSafyOptions</span><span class="token punctuation">(</span>
        <span class="token class-name">System<span class="token punctuation">.</span>Int32</span> riid<span class="token punctuation">,</span>
        <span class="token keyword">out</span> <span class="token class-name">System<span class="token punctuation">.</span>Int32</span> pdwSupportedOptions<span class="token punctuation">,</span>
        <span class="token keyword">out</span> <span class="token class-name">System<span class="token punctuation">.</span>Int32</span> pdwEnabledOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SetInterfaceSafetyOptions</span><span class="token punctuation">(</span>
        <span class="token class-name">System<span class="token punctuation">.</span>Int32</span> riid<span class="token punctuation">,</span>
        <span class="token class-name">System<span class="token punctuation">.</span>Int32</span> dwOptionsSetMask<span class="token punctuation">,</span>
        <span class="token class-name">System<span class="token punctuation">.</span>Int32</span> dwEnabledOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>注意，这个GUID是不能改的。然后，我们在Demo类里面实现这个接口。增加一下代码：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token preprocessor property">#<span class="token directive keyword">region</span> IObjectSafety 成员</span>

<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">GetInterfacceSafyOptions</span><span class="token punctuation">(</span><span class="token class-name">Int32</span> riid<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name">Int32</span> pdwSupportedOptions<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name">Int32</span> pdwEnabledOptions<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// TODO:  添加 WebCamControl.GetInterfacceSafyOptions 实现</span>
    pdwSupportedOptions <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    pdwEnabledOptions <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SetInterfaceSafetyOptions</span><span class="token punctuation">(</span><span class="token class-name">Int32</span> riid<span class="token punctuation">,</span> <span class="token class-name">Int32</span> dwOptionsSetMask<span class="token punctuation">,</span> <span class="token class-name">Int32</span> dwEnabledOptions<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// TODO:  添加 WebCamControl.SetInterfaceSafetyOptions 实现</span>
<span class="token punctuation">}</span>

<span class="token preprocessor property">#<span class="token directive keyword">endregion</span></span>
</code></pre></div><p>重新编译，然后将IE里面的设置改回来。现在，我们发现，和JS的交互已经没有问题了。</p><p>这样，一个最基本的ActiveX控件已经写好了。你可以在这个控件的基础上增加任何你需要的功能。到这里，编写控件的任务已经完成了，我们的下一个目标就是发布它。</p><h3 id="feedback-1" tabindex="-1"><a class="header-anchor" href="#feedback-1" aria-hidden="true">#</a> Feedback</h3><p>2005-01-12 10:18 by softye</p><blockquote><p>期待 :用C#编写ActiveX控件（三）（分发）<br><br> 楼主加油哦</p></blockquote><p>2005-01-16 10:54 by 水云间</p><blockquote><p>很不错，支持一下，但这里有一个问题，就是控件里怎么调用页面的JS脚本，期待中。。。。。。</p></blockquote><p>2005-01-16 13:56 by 水云间</p><blockquote><p>http://www.cnblogs.com/liubiqu/articles/92632.html <br><br> 我做好那个控件里调用外面JS的方法，但就是发布的也写了一些，可能有些需要修正的地方。大家有空交流一下。 MSN：liubiqu@hotmail.com</p></blockquote><p>2005-01-18 16:44 by ares</p><blockquote><p>为什么照着楼主说的做了，还是遇到两个问题：<br> 一、我先编译了一次，看到了文本内容，后来添加了showmessage方法后再编译，在html加入代码后，点击却没有信息弹出，也没报js错误。为什么？？<br><br> 二、为何在另外的机器上，看上去还是红叉？<br><br> 盼答复</p></blockquote><p>2005-01-22 05:34 by xxy</p><blockquote><p>非常感谢,等待下一大做</p></blockquote><h2 id="用c-编写activex控件-三" tabindex="-1"><a class="header-anchor" href="#用c-编写activex控件-三" aria-hidden="true">#</a> <a id="tb3" href="https://www.cnblogs.com/homer/archive/2005/01/26/97822.html" target="blank">用C#编写ActiveX控件（三）</a></h2><p>在前面我们已经完成了ActiveX控件的开发，接下来的就是发布它了。</p><p>首先，我们建立一个windows安装项目，并将ActiveX控件的主输出添加到项目输出中。然后，改动ActiveX控件的主输出文件，将其Register属性改为vsdrpCOM.如图:</p><p><img src="`+i+'" alt="img_8"></p><p>下一步，我们改动项目属性，将引导程序更改为 Web引导程序。很遗憾的是，在 Web引导程序设置 中的安装文件夹URL中必须使用绝对路径，不能使用相对路径。这意味着生成安装程序的时候就必须确定路径，不是很方便。在示例中，我使用了localhost，在发布中可以改为实际的域名。</p><p><img src="'+r+`" alt="img_9"></p><p>现在我们生成安装程序，并把相应得程序拷贝到正确的目录中（本例中为默认网站目录下的ActiveX文件夹中）。我们可以直接执行Setup.Exe文件，以验证安装文件的正确性。在我的机器上正确执行了，成功了！</p><p>现在我们又要重新改动helloworld.htm文件了。修改后的结果如下：</p><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>#223344<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>object</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>helloworld<span class="token punctuation">&quot;</span></span>
   <span class="token attr-name">classid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clsid:9551B223-6188-4387-B293-C7D9D8173E3A<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>184<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>96<span class="token punctuation">&quot;</span></span> <span class="token attr-name">codebase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ActiveX/Setup.Exe<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>object</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>button<span class="token punctuation">&#39;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value javascript language-javascript">helloworld<span class="token punctuation">.</span><span class="token function">ShowMessage</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">&#39;</span></span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>Click<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>注意，我们在object块中加入了codebase属性，这就是制定的下载控件的位置，可以使用相对路径。别忙，我们现在还不能正确请求这个页面，因为我们还没有对我们的控件进行签名。签名可以采用两种方式，一种是在上面生成安装程序的时候签名，另一种是使用sn.exe签名。推荐大家使用后者，因为可以提供更多选项。本人很懒，就不多写了，大家可以参考csdn上的文章《发布ActiveX》。先给给大家提个醒，在申请证书的时候选择 高级证书申请。</p><p>至此，《用C#编写ActiveX控件》完结。大家有什么问题，可以和我留言。</p>`,78),g=[d];function b(y,h){return s(),a("div",null,g)}const w=n(m,[["render",b],["__file","toolbox30.html.vue"]]);export{w as default};
