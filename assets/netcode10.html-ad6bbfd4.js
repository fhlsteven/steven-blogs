import{_ as s,o as a,c as t,a as p}from"./app-57d1f7b1.js";const n="/steven-blogs/assets/netcode10_1-82110e33.png",o={},e=p(`<h1 id="用visual-c-获得计算机名称和ip地址" tabindex="-1"><a class="header-anchor" href="#用visual-c-获得计算机名称和ip地址" aria-hidden="true">#</a> 用Visual C＃获得计算机名称和IP地址</h1><blockquote><p>（王天　2001年11月15日 11:19）</p></blockquote><p>Visual C#是微软公司推出的下一代程序开发语言，是微软.Net 框架中的的一个重要组成部分，在推出Visual C#的过程中，微软公司还推出了与之相对应的一个软件开发包--.Net FrameWork SDK。此软件开发包里面封装了许多类、对象。Visual C#就是通过调用这些类、对象来实现许多比较强大的功能。</p><p>在.Net FrameWork SDK中提供了二个可用于网络编程的名称空间，一个是System.Net，另一个是System..Net.Socket。本文就是利用第一个名称空间中封装的类和对象来读取本地计算机名称和机器中所有的IP地址。</p><h2 id="一-概述" tabindex="-1"><a class="header-anchor" href="#一-概述" aria-hidden="true">#</a> 一.概述</h2><p>我们知道对于一台计算机来说，他只有一个计算机名称，但是他可以有多个IP地址。例如当计算机通过拨号上网的时候，在验证完用户名和口令以后，就会动态分配一个IP地址，此时计算机就拥有了二个IP地址，一个时自己设定的局域网用的IP地址，另外一个就是拨号上网动态分配的IP地址了。本文就是来探索一下如何读取此二个IP地址和计算机名称。</p><h2 id="二-程序设计和运行的环境" tabindex="-1"><a class="header-anchor" href="#二-程序设计和运行的环境" aria-hidden="true">#</a> 二.程序设计和运行的环境</h2><p>（1）微软公司视窗2000服务器版<br> （2）.Net FrameWrok SDK Beta 2版</p><h2 id="三-程序设计的主要思路及实现方法" tabindex="-1"><a class="header-anchor" href="#三-程序设计的主要思路及实现方法" aria-hidden="true">#</a> 三.程序设计的主要思路及实现方法</h2><p>（1）.读取计算机的名称：</p><p>在名称空间System.Net中定义了一个类Dns，在此类中定义了一个比较重要的方法 GetHostName ( )，此方法的返回值就是本地计算机名称。在程序设计中首先要导入System.Net名称空间，然后通过调用Dns类中的GetHostName ( )方法读取本地计算机名称，具体实现的主要语句如下：</p><p><code>label1.Text = &quot;主机名称：&quot; + System.Net.Dns.GetHostName ( ) ;</code></p><p>（2）.读取计算机的拨号上网临时的IP地址和局域网分配的固定IP地址：</p><p>在程序设计中，我们是通过一个自定义的函数--getIPAddress ( )来读取IP地址的。首先看一下如何读取本地固定的IP地址的。在Dns类中还定义了一个方法GetHostByName ( )。此方法的返回值时IPHostEntry 对象，此对象有一个属性是AddressList，此属性是一个IPAddress类型的数组，包含了计算机此时的所有的IP地址信息。这当中也就包含了拨号上网得到的临时分配的IP地址和局域网固定的IP地址。具体实现语句如下:</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> getIPAddress <span class="token punctuation">(</span> <span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>IPAddress</span> addr<span class="token punctuation">;</span>
    <span class="token comment">// 获得本机局域网IP地址</span>
    addr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>IPAddress</span> <span class="token punctuation">(</span> Dns<span class="token punctuation">.</span>GetHostByName <span class="token punctuation">(</span> Dns<span class="token punctuation">.</span>GetHostName <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">.</span>AddressList <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Address <span class="token punctuation">)</span> <span class="token punctuation">;</span>
    <span class="token keyword">return</span> addr<span class="token punctuation">.</span>ToString <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="四-读取计算机名称本机固定ip地址源程序" tabindex="-1"><a class="header-anchor" href="#四-读取计算机名称本机固定ip地址源程序" aria-hidden="true">#</a> 四.读取计算机名称本机固定IP地址源程序</h2><p>IP01.cs源程序：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//导入程序用到的名称空间</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Net</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token keyword">static</span> <span class="token class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Mime<span class="token punctuation">.</span>MediaTypeNames</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Reflection<span class="token punctuation">.</span>Emit</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Form3</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Form</span></span>
<span class="token punctuation">{</span>
    <span class="token comment">//定义二个标签</span>
    <span class="token keyword">private</span> <span class="token class-name">Label</span> label1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Label</span> label2<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Application<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Form3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 构造窗体</span>
    <span class="token keyword">public</span> <span class="token function">Form3</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 建立标签并且初始化</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>label1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Label</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>label2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Label</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//先继承一个Label 类</span>
        label1<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        label2<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设定 Label的显示位置</span>
        label1<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;主机名称：&quot;</span> <span class="token operator">+</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Dns<span class="token punctuation">.</span><span class="token function">GetHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 显示本机的计算机名称</span>
        label2<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;IP 地址：&quot;</span> <span class="token operator">+</span> <span class="token function">getIPAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 显示本机的局域网IP地址</span>
        label1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        label2<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设定标签的大小</span>
        label1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        label2<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        label1<span class="token punctuation">.</span>TextAlign <span class="token operator">=</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>ContentAlignment<span class="token punctuation">.</span>MiddleCenter<span class="token punctuation">;</span>
        label2<span class="token punctuation">.</span>TextAlign <span class="token operator">=</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>ContentAlignment<span class="token punctuation">.</span>MiddleCenter<span class="token punctuation">;</span>
        <span class="token comment">// 设定标签的对齐方式</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;获得主机名称和IP地址！&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>StartPosition <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>FormStartPosition<span class="token punctuation">.</span>CenterParent<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>AutoScaleBaseSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>FormBorderStyle <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>FormBorderStyle<span class="token punctuation">.</span>Fixed3D<span class="token punctuation">;</span>
        <span class="token comment">// 设定窗体的边界类型</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ForeColor <span class="token operator">=</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>SystemColors<span class="token punctuation">.</span>Desktop<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Font <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Font</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>FontStyle<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设定字体、大小就字体的式样</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>SizeGripStyle <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>SizeGripStyle<span class="token punctuation">.</span>Hide<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ClientSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//把标签加到窗体中</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>label1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>label2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">getIPAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>IPAddress</span> addr<span class="token punctuation">;</span>
        <span class="token comment">// 获得本机局域网IP地址</span>
        addr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>IPAddress</span><span class="token punctuation">(</span>Dns<span class="token punctuation">.</span><span class="token function">GetHostByName</span><span class="token punctuation">(</span>Dns<span class="token punctuation">.</span><span class="token function">GetHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>AddressList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Address<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> addr<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>在经过以下编译命令编译后，</p><p><code>csc /r:system.dll /r:system.windows.forms.dll /r:system.drawing.dll /t:winexeip01.cs</code></p><p>得到ip01.exe文件，此文件就可以读取本地固定的IP地址。以下是执行后的界面：</p><p><img src="`+n+`" alt="10_1"><br> 图01:读取计算机名称和固定IP地址</p><h2 id="五-读取计算机名称和拨号上网动态分配的ip地址源程序" tabindex="-1"><a class="header-anchor" href="#五-读取计算机名称和拨号上网动态分配的ip地址源程序" aria-hidden="true">#</a> 五.读取计算机名称和拨号上网动态分配的IP地址源程序</h2><p>在前面已经说了，<code>GetHostByName()</code>方法的返回值时<code>IPHostEntry</code> 对象，此对象的属性 AddressList，是一个IPAddress类型的数组，包含了计算机此时的所有的IP地址信息。在ip01.cs中<code>AddressList[0].Address</code>是固定的IP地址，而对于上网动态分配的IP地址是<code>.AddressList [1].Address</code>。据此我们可以的得到读取拨号上网动态分配的IP地址的源程序：</p><p>IP02.cs源程序：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//导入程序用到的名称空间</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Net</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token keyword">static</span> <span class="token class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Mime<span class="token punctuation">.</span>MediaTypeNames</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Reflection<span class="token punctuation">.</span>Emit</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Form3</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Form</span></span>
<span class="token punctuation">{</span>
    <span class="token comment">//定义二个标签</span>
    <span class="token keyword">private</span> <span class="token class-name">Label</span> label1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Label</span> label2<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Application<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Form3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 构造窗体</span>
    <span class="token keyword">public</span> <span class="token function">Form3</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 建立标签并且初始化</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>label1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Label</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>label2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Label</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//先继承一个Label 类</span>
        label1<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        label2<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设定 Label的显示位置</span>
        label1<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;主机名称：&quot;</span> <span class="token operator">+</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Dns<span class="token punctuation">.</span><span class="token function">GetHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 显示本机的计算机名称</span>
        label2<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;IP 地址：&quot;</span> <span class="token operator">+</span> <span class="token function">getIPAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 显示本机的拨号动态分配IP地址</span>
        label1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        label2<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设定标签的大小</span>
        label1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        label2<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        label1<span class="token punctuation">.</span>TextAlign <span class="token operator">=</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>ContentAlignment<span class="token punctuation">.</span>MiddleCenter<span class="token punctuation">;</span>
        label2<span class="token punctuation">.</span>TextAlign <span class="token operator">=</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>ContentAlignment<span class="token punctuation">.</span>MiddleCenter<span class="token punctuation">;</span>
        <span class="token comment">// 设定标签的对齐方式</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;获得主机名称和IP地址！&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>StartPosition <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>FormStartPosition<span class="token punctuation">.</span>CenterParent<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>AutoScaleBaseSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>FormBorderStyle <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>FormBorderStyle<span class="token punctuation">.</span>Fixed3D<span class="token punctuation">;</span>
        <span class="token comment">// 设定窗体的边界类型</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ForeColor <span class="token operator">=</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>SystemColors<span class="token punctuation">.</span>Desktop<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Font <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Font</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>FontStyle<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设定字体、大小就字体的式样</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>SizeGripStyle <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>SizeGripStyle<span class="token punctuation">.</span>Hide<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ClientSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//把标签加到窗体中</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>label1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>label2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">getIPAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>IPAddress</span> addr<span class="token punctuation">;</span>
        <span class="token comment">// 获得拨号动态分配IP地址</span>
        addr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>IPAddress</span><span class="token punctuation">(</span>Dns<span class="token punctuation">.</span><span class="token function">GetHostByName</span><span class="token punctuation">(</span>Dns<span class="token punctuation">.</span><span class="token function">GetHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>AddressList<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Address<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> addr<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>编译完成后，执行可得到如下运行界面：</p><p><img src="`+n+'" alt="10_1"><br> 图02:读取计算机名称和动态IP地址</p><h2 id="六-总结" tabindex="-1"><a class="header-anchor" href="#六-总结" aria-hidden="true">#</a> 六.总结</h2><p>本文是通过二个例子来读出机器的计算机名称和不同的IP地址，通过以上二个例子，我们可以看到如果机器有三个或者更多的IP地址，我们也可以通过设定AddressList的不同值来得到机器不同的IP地址。</p><p>在名称空间System.Net中还提供了很多面向网络编程的的类，这些类的功能是十分巨大的，灵活运用这些类，可以开发出很多功能强大的网络应用程序。</p>',31),c=[e];function u(l,k){return a(),t("div",null,c)}const r=s(o,[["render",u],["__file","netcode10.html.vue"]]);export{r as default};
