import{_ as n,o as s,c as a,a as t}from"./app-f0851ed3.js";const p={},o=t(`<h1 id="用于键盘模拟鼠标的开发" tabindex="-1"><a class="header-anchor" href="#用于键盘模拟鼠标的开发" aria-hidden="true">#</a> 用于键盘模拟鼠标的开发</h1><p>上面的代码是我作的一个用于键盘模拟鼠标的软件，实现了下面的功能：</p><p>1、启动后放在右下角的托盘中，实现实时的监控。（这个很容易，大家自已看看代码就行）。<br> 2、注册全局热键四个，分别为上下左右四个键，实现在任意环境下点击四个键实现鼠标的微调，这里有几个问题和大家说一下：第一个就是如何注册热键，我用的是以前在天极网微软件开发者的一篇文章的代码，贴出来给大家看看：如何处理热键:</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">WndProc</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token class-name">Message</span> m<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> WM_HOTKEY <span class="token operator">=</span> <span class="token number">0x0312</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span>Msg<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">case</span> WM_HOTKEY<span class="token punctuation">:</span>
            MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;Hotkey pressed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">ProcessHotkey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">WndProc</span><span class="token punctuation">(</span><span class="token keyword">ref</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>但是我发现一个问题，就是不能同时注册多个热键，如果想注册多个，不是不可以，是注册后不能分辩出哪个是左，哪个是右？想了很长时间，才找到一个办法，是这样的</p><h2 id="注册热键时" tabindex="-1"><a class="header-anchor" href="#注册热键时" aria-hidden="true">#</a> 注册热键时</h2><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code>    <span class="token class-name">NativeWIN32<span class="token punctuation">.</span>KeyModifiers</span> modifiers <span class="token operator">=</span> NativeWIN32<span class="token punctuation">.</span>KeyModifiers<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
    NativeWIN32<span class="token punctuation">.</span><span class="token function">RegisterHotKey</span><span class="token punctuation">(</span>Handle<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> modifiers<span class="token punctuation">,</span> Keys<span class="token punctuation">.</span>Right<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//注册热键</span>
    NativeWIN32<span class="token punctuation">.</span><span class="token function">RegisterHotKey</span><span class="token punctuation">(</span>Handle<span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> modifiers<span class="token punctuation">,</span> Keys<span class="token punctuation">.</span>Left<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//又注册了一个热键</span>
    NativeWIN32<span class="token punctuation">.</span><span class="token function">RegisterHotKey</span><span class="token punctuation">(</span>Handle<span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> modifiers<span class="token punctuation">,</span> Keys<span class="token punctuation">.</span>Up<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//又注册了一个热键</span>
    NativeWIN32<span class="token punctuation">.</span><span class="token function">RegisterHotKey</span><span class="token punctuation">(</span>Handle<span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> modifiers<span class="token punctuation">,</span> Keys<span class="token punctuation">.</span>Down<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//又注册了一个热键</span>
    taskbarNotifier2<span class="token punctuation">.</span>CloseClickable<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
    taskbarNotifier2<span class="token punctuation">.</span>TitleClickable<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
    taskbarNotifier2<span class="token punctuation">.</span>ContentClickable<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
    taskbarNotifier2<span class="token punctuation">.</span>EnableSelectionRectangle<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
    taskbarNotifier2<span class="token punctuation">.</span>KeepVisibleOnMousOver<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
    taskbarNotifier2<span class="token punctuation">.</span>ReShow<span class="token operator">*</span>onMouseOver<span class="token operator">*=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
    taskbarNotifier2<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;网际浪子简介&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;浪子是一个计算机的狂热爱好者，欢迎和我联系：qq10402852 email:huanghai@bdfsz.com.cn&quot;</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token number">6000</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="处理消息时" tabindex="-1"><a class="header-anchor" href="#处理消息时" aria-hidden="true">#</a> 处理消息时</h2><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">WndProc</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token class-name">Message</span> m<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> WM_HOTKEY <span class="token operator">=</span> <span class="token number">0x0312</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span>Msg<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">case</span> WM_HOTKEY<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span>WParam<span class="token punctuation">.</span><span class="token function">ToInt32</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">100</span><span class="token punctuation">)</span> Cursor<span class="token punctuation">.</span>Position <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>Cursor<span class="token punctuation">.</span>Position<span class="token punctuation">.</span>X <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> Cursor<span class="token punctuation">.</span>Position<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//右移一个 </span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span>WParam<span class="token punctuation">.</span><span class="token function">ToInt32</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">101</span><span class="token punctuation">)</span> Cursor<span class="token punctuation">.</span>Position <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>Cursor<span class="token punctuation">.</span>Position<span class="token punctuation">.</span>X <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> Cursor<span class="token punctuation">.</span>Position<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//左移一个 </span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span>WParam<span class="token punctuation">.</span><span class="token function">ToInt32</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">102</span><span class="token punctuation">)</span> Cursor<span class="token punctuation">.</span>Position <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>Cursor<span class="token punctuation">.</span>Position<span class="token punctuation">.</span>X<span class="token punctuation">,</span> Cursor<span class="token punctuation">.</span>Position<span class="token punctuation">.</span>Y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//上移一个 </span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span>WParam<span class="token punctuation">.</span><span class="token function">ToInt32</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">103</span><span class="token punctuation">)</span> Cursor<span class="token punctuation">.</span>Position <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>Cursor<span class="token punctuation">.</span>Position<span class="token punctuation">.</span>X<span class="token punctuation">,</span> Cursor<span class="token punctuation">.</span>Position<span class="token punctuation">.</span>Y <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下移一个 </span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">WndProc</span><span class="token punctuation">(</span><span class="token keyword">ref</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>哈，一不小心把第三个密秘也告诉大家了，就是如何在没有焦点的情况下移动鼠标。具体的大家看代码吧，希望和你一起进步！</p>`,10),c=[o];function e(u,l){return s(),a("div",null,c)}const i=n(p,[["render",e],["__file","hardctr4.html.vue"]]);export{i as default};
