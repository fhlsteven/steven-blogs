import{_ as p,r as o,o as e,c,b as n,d as a,e as t,a as l}from"./app-f0851ed3.js";const u={},i=l(`<h1 id="直接把结果输出到打印机" tabindex="-1"><a class="header-anchor" href="#直接把结果输出到打印机" aria-hidden="true">#</a> 直接把结果输出到打印机</h1><blockquote><p>作者： 孟宪会 出自： 【孟宪会之精彩世界】 发布日期： 2003-6-15 22:49:57</p></blockquote><p>下面的代码可以通过调用WIN32 API让你直接输出到打印机，因而可以达到最快的速度进行打印，而不是等待Windows的打印系统。此外，示例代码还说明了如何向打印机发送PCL代码。</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// PrintDirect.cs</span>
<span class="token comment">// 本文参考了Microsoft Support 文档号：Q298141</span>
<span class="token comment">// 本代码假定你在file://192.168.1.101/hpl存在共享打印机</span>
<span class="token comment">// 本代码示例了如何向打印机发送Hewlett Packard PCL5代码直接在页面中央打印出一个矩形。</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">StructLayout</span><span class="token attribute-arguments"><span class="token punctuation">(</span> LayoutKind<span class="token punctuation">.</span>Sequential<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">struct</span> <span class="token class-name">DOCINFO</span>
<span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>LPWStr<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span><span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">string</span></span> pDocName<span class="token punctuation">;</span>
  <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>LPWStr<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span><span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">string</span></span> pOutputFile<span class="token punctuation">;</span>
  <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>LPWStr<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span><span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">string</span></span> pDataType<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PrintDirect</span>
<span class="token punctuation">{</span>
  <span class="token punctuation">[</span> <span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span> <span class="token string">&quot;winspool.drv&quot;</span><span class="token punctuation">,</span>CharSet<span class="token operator">=</span>CharSet<span class="token punctuation">.</span>Unicode<span class="token punctuation">,</span>ExactSpelling<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">,</span>
  CallingConvention<span class="token operator">=</span>CallingConvention<span class="token punctuation">.</span>StdCall <span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> <span class="token function">OpenPrinter</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> pPrinterName<span class="token punctuation">,</span><span class="token keyword">ref</span> <span class="token class-name">IntPtr</span> phPrinter<span class="token punctuation">,</span>
  <span class="token class-name"><span class="token keyword">int</span></span> pDefault<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">[</span> <span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span> <span class="token string">&quot;winspool.drv&quot;</span><span class="token punctuation">,</span>CharSet<span class="token operator">=</span>CharSet<span class="token punctuation">.</span>Unicode<span class="token punctuation">,</span>ExactSpelling<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">,</span>
  CallingConvention<span class="token operator">=</span>CallingConvention<span class="token punctuation">.</span>StdCall <span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> <span class="token function">StartDocPrinter</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hPrinter<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> Level<span class="token punctuation">,</span>
  <span class="token keyword">ref</span> <span class="token class-name">DOCINFO</span> pDocInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">[</span> <span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;winspool.drv&quot;</span><span class="token punctuation">,</span>CharSet<span class="token operator">=</span>CharSet<span class="token punctuation">.</span>Unicode<span class="token punctuation">,</span>ExactSpelling<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">,</span>
  CallingConvention<span class="token operator">=</span>CallingConvention<span class="token punctuation">.</span>StdCall<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> <span class="token function">StartPagePrinter</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hPrinter<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">[</span> <span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span> <span class="token string">&quot;winspool.drv&quot;</span><span class="token punctuation">,</span>CharSet<span class="token operator">=</span>CharSet<span class="token punctuation">.</span>Ansi<span class="token punctuation">,</span>ExactSpelling<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">,</span>
  CallingConvention<span class="token operator">=</span>CallingConvention<span class="token punctuation">.</span>StdCall<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> <span class="token function">WritePrinter</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hPrinter<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">string</span></span> data<span class="token punctuation">,</span>
  <span class="token class-name"><span class="token keyword">int</span></span> buf<span class="token punctuation">,</span><span class="token keyword">ref</span> <span class="token class-name"><span class="token keyword">int</span></span> pcWritten<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">[</span> <span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span> <span class="token string">&quot;winspool.drv&quot;</span> <span class="token punctuation">,</span>CharSet<span class="token operator">=</span>CharSet<span class="token punctuation">.</span>Unicode<span class="token punctuation">,</span>ExactSpelling<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">,</span>
  CallingConvention<span class="token operator">=</span>CallingConvention<span class="token punctuation">.</span>StdCall<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> <span class="token function">EndPagePrinter</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hPrinter<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">[</span> <span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span> <span class="token string">&quot;winspool.drv&quot;</span><span class="token punctuation">,</span>CharSet<span class="token operator">=</span>CharSet<span class="token punctuation">.</span>Unicode<span class="token punctuation">,</span>ExactSpelling<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">,</span>
  CallingConvention<span class="token operator">=</span>CallingConvention<span class="token punctuation">.</span>StdCall<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> <span class="token function">EndDocPrinter</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hPrinter<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">[</span> <span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;winspool.drv&quot;</span><span class="token punctuation">,</span>CharSet<span class="token operator">=</span>CharSet<span class="token punctuation">.</span>Unicode<span class="token punctuation">,</span>ExactSpelling<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">,</span>
  CallingConvention<span class="token operator">=</span>CallingConvention<span class="token punctuation">.</span>StdCall <span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> <span class="token function">ClosePrinter</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hPrinter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> Main <span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token class-name">System<span class="token punctuation">.</span>IntPtr</span> lhPrinter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>IntPtr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">DOCINFO</span> di <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DOCINFO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">int</span></span> pcWritten<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">string</span></span> st1<span class="token punctuation">;</span>

    <span class="token comment">// text to print with a form feed character</span>
    st1<span class="token operator">=</span><span class="token string">&quot;This is an example of printing directly to a printer\\f&quot;</span><span class="token punctuation">;</span>
    di<span class="token punctuation">.</span>pDocName<span class="token operator">=</span><span class="token string">&quot;my test document&quot;</span><span class="token punctuation">;</span>
    di<span class="token punctuation">.</span>pDataType<span class="token operator">=</span><span class="token string">&quot;RAW&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// the \\x1b means an ascii escape character</span>
    st1<span class="token operator">=</span><span class="token string">&quot;\\x1b*c600a6b0P\\f&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//lhPrinter contains the handle for the printer opened</span>
    <span class="token comment">//If lhPrinter is 0 then an error has occured</span>
    PrintDirect<span class="token punctuation">.</span><span class="token function">OpenPrinter</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\\\\\192.168.1.101\\\\hpl&quot;</span><span class="token punctuation">,</span><span class="token keyword">ref</span> lhPrinter<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    PrintDirect<span class="token punctuation">.</span><span class="token function">StartDocPrinter</span><span class="token punctuation">(</span>lhPrinter<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">ref</span> di<span class="token punctuation">)</span><span class="token punctuation">;</span>
    PrintDirect<span class="token punctuation">.</span><span class="token function">StartPagePrinter</span><span class="token punctuation">(</span>lhPrinter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
      <span class="token comment">// Moves the cursor 900 dots (3 inches at 300 dpi) in from the left margin, and</span>
      <span class="token comment">// 600 dots (2 inches at 300 dpi) down from the top margin.</span>
      st1<span class="token operator">=</span><span class="token string">&quot;\\x1b*p900x600Y&quot;</span><span class="token punctuation">;</span>
      PrintDirect<span class="token punctuation">.</span><span class="token function">WritePrinter</span><span class="token punctuation">(</span>lhPrinter<span class="token punctuation">,</span>st1<span class="token punctuation">,</span>st1<span class="token punctuation">.</span>Length<span class="token punctuation">,</span><span class="token keyword">ref</span> pcWritten<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Using the print model commands for rectangle dimensions, &quot;600a&quot; specifies a rectangle</span>
      <span class="token comment">// with a horizontal size or width of 600 dots, and &quot;6b&quot; specifies a vertical</span>
      <span class="token comment">// size or height of 6 dots. The 0P selects the solid black rectangular area fill.</span>
      st1<span class="token operator">=</span><span class="token string">&quot;\\x1b*c600a6b0P&quot;</span><span class="token punctuation">;</span>
      PrintDirect<span class="token punctuation">.</span><span class="token function">WritePrinter</span><span class="token punctuation">(</span>lhPrinter<span class="token punctuation">,</span>st1<span class="token punctuation">,</span>st1<span class="token punctuation">.</span>Length<span class="token punctuation">,</span><span class="token keyword">ref</span> pcWritten<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Specifies a rectangle with width of 6 dots, height of 600 dots, and a</span>
      <span class="token comment">// fill pattern of solid black.</span>
      st1<span class="token operator">=</span><span class="token string">&quot;\\x1b*c6a600b0P&quot;</span><span class="token punctuation">;</span>
      PrintDirect<span class="token punctuation">.</span><span class="token function">WritePrinter</span><span class="token punctuation">(</span>lhPrinter<span class="token punctuation">,</span>st1<span class="token punctuation">,</span>st1<span class="token punctuation">.</span>Length<span class="token punctuation">,</span><span class="token keyword">ref</span> pcWritten<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// Moves the current cursor position to 900 dots, from the left margin and</span>
      <span class="token comment">// 1200 dots down from the top margin.</span>
      st1<span class="token operator">=</span><span class="token string">&quot;\\x1b*p900x1200Y&quot;</span><span class="token punctuation">;</span>
      PrintDirect<span class="token punctuation">.</span><span class="token function">WritePrinter</span><span class="token punctuation">(</span>lhPrinter<span class="token punctuation">,</span>st1<span class="token punctuation">,</span>st1<span class="token punctuation">.</span>Length<span class="token punctuation">,</span><span class="token keyword">ref</span> pcWritten<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// Specifies a rectangle with a width of 606 dots, a height of 6 dots and a</span>

      <span class="token comment">// fill pattern of solid black.</span>
      st1<span class="token operator">=</span><span class="token string">&quot;\\x1b*c606a6b0P&quot;</span><span class="token punctuation">;</span>
      PrintDirect<span class="token punctuation">.</span><span class="token function">WritePrinter</span><span class="token punctuation">(</span>lhPrinter<span class="token punctuation">,</span>st1<span class="token punctuation">,</span>st1<span class="token punctuation">.</span>Length<span class="token punctuation">,</span><span class="token keyword">ref</span> pcWritten<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Moves the current cursor position to 1500 dots from the left margin and</span>
      <span class="token comment">// 600 dots down from the top margin.</span>
      st1<span class="token operator">=</span><span class="token string">&quot;\\x1b*p1500x600Y&quot;</span><span class="token punctuation">;</span>
      PrintDirect<span class="token punctuation">.</span><span class="token function">WritePrinter</span><span class="token punctuation">(</span>lhPrinter<span class="token punctuation">,</span>st1<span class="token punctuation">,</span>st1<span class="token punctuation">.</span>Length<span class="token punctuation">,</span><span class="token keyword">ref</span> pcWritten<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Specifies a rectangle with a width of 6 dots, a height of 600 dots and a</span>
      <span class="token comment">// fill pattern of solid black.</span>
      st1<span class="token operator">=</span><span class="token string">&quot;\\x1b*c6a600b0P&quot;</span><span class="token punctuation">;</span>
      PrintDirect<span class="token punctuation">.</span><span class="token function">WritePrinter</span><span class="token punctuation">(</span>lhPrinter<span class="token punctuation">,</span>st1<span class="token punctuation">,</span>st1<span class="token punctuation">.</span>Length<span class="token punctuation">,</span><span class="token keyword">ref</span> pcWritten<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// Send a form feed character to the printer</span>
      st1<span class="token operator">=</span><span class="token string">&quot;\\f&quot;</span><span class="token punctuation">;</span>
      PrintDirect<span class="token punctuation">.</span><span class="token function">WritePrinter</span><span class="token punctuation">(</span>lhPrinter<span class="token punctuation">,</span>st1<span class="token punctuation">,</span>st1<span class="token punctuation">.</span>Length<span class="token punctuation">,</span><span class="token keyword">ref</span> pcWritten<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
      Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    PrintDirect<span class="token punctuation">.</span><span class="token function">EndPagePrinter</span><span class="token punctuation">(</span>lhPrinter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    PrintDirect<span class="token punctuation">.</span><span class="token function">EndDocPrinter</span><span class="token punctuation">(</span>lhPrinter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    PrintDirect<span class="token punctuation">.</span><span class="token function">ClosePrinter</span><span class="token punctuation">(</span>lhPrinter<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,4),k={href:"http://www.c-sharpcorner.com/Code/2002/Oct/PrintDirect.zip",target:"_blank",rel:"noopener noreferrer"},r={href:"http://www.c-sharpcorner.com/Code/2002/Oct/PrintDirect.asp",target:"_blank",rel:"noopener noreferrer"};function d(m,h){const s=o("ExternalLinkIcon");return e(),c("div",null,[i,n("p",null,[n("a",k,[a("下载源代码"),t(s)])]),n("p",null,[n("a",r,[a("原文"),t(s)])])])}const w=p(u,[["render",d],["__file","sysop16.html.vue"]]);export{w as default};
