import{_ as n,o as s,c as a,d as o}from"./app-35fb03de.js";const t={},e=o(`<h1 id="关于c-中console-writeline语句输出格式的问题" tabindex="-1"><a class="header-anchor" href="#关于c-中console-writeline语句输出格式的问题" aria-hidden="true">#</a> 关于C#中Console.WriteLine语句输出格式的问题</h1><div class="language-txt" data-ext="txt"><pre class="language-txt"><code>主　　题：  关于C#中Console.WriteLine语句输出格式的问题
作　　者：  twtetgso (*七匹狼*)  
等　　级：
信 誉 值：  100
所属论坛：  .NET技术 C#
问题点数：  20
回复次数：  5
发表时间：  2003-9-29 11:20:20
</code></pre></div><p>初学C#，按书上例子写这个小程序</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Test</span>
<span class="token punctuation">{</span>
    stativ <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> arr<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">int</span></span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>Length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token operator">*</span>i<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>Length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;arr[{0}]=[1]&quot;</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>其中这一句 <code>Console.WriteLine(&quot;arr[{0}]=[1]&quot;,i,arr[i]);</code> 输出格式是什么意思，哪有关于输出格式的说明啊？？</p><hr><hr><p>回复人： eshusheng(.NET生疏) ( 四级(中级)) 信誉：100 2003-9-29 11:53:00 得分:10</p><blockquote><p><code>Console.WriteLine(&quot;arr[{0}]=[1]&quot;,i,arr[i]);</code>应该改为<br><code>Console.WriteLine(&quot;arr[{0}]={1}&quot;,i,arr[i]);</code></p><p><code>{0},{1}</code>分别表示第一个和第二个参数，这里代表<code>i,arr[i]</code><br> MSDN什么都有。别忘了它。</p></blockquote><p>回复人： twtetgso(*七匹狼*) ( 一级(初级)) 信誉：100 2003-9-29 11:59:38 得分:0</p><blockquote><p>好的，谢谢!</p></blockquote><p>回复人： LinLei(蓝冰) ( 一级(初级)) 信誉：100 2003-9-29 12:05:07 得分:0</p><blockquote><p><code>Console.WriteLine(&quot;arr[{0}]=[1]&quot;,i,arr[i]);</code>应该改为<br><code>Console.WriteLine(&quot;arr[{0}]={1}&quot;,i,arr[i]);</code><br> CSDN 好人多，真的应该有空来坐坐！</p></blockquote><p>回复人： coudoufu(臭豆腐.NET) ( 二级(初级)) 信誉：100 2003-9-29 13:29:48 得分:0</p><blockquote><p>是啊，偶等菜鸟也来混混……</p></blockquote><p>回复人： xixigongzhu(夕夕公主) ( 一星(中级)) 信誉：105 2003-9-29 14:17:51 得分:10</p><blockquote><p>因为<code>Console.WriteLine()</code>关于字符串格式化的部分是用<code>String.Format</code>来实现的，所以可以看<code>String.Format</code>的文档：<br><br> 通过 .NET Framework 复合格式化功能，您可以提供值列表和由交替出现的固定文本和索引占位符组成的源字符串，还能轻松地获得由夹杂着格式化值的原始固定文本组成的结果字符串。复合格式化可以用于一些方法，如 <code>String.Format</code>（返回格式化字符串）方法和 <code>Console.WriteLine</code>（将输出字符串显示到控制台）方法等，也可用于 <code>TextWriter.WriteLine</code>（将输出字符串写到流或文件）的实现。<br><br> 每个索引占位符或格式项都对应值列表中的一个元素。复合格式化功能返回新的输出字符串，其中嵌入源字符串的每个格式项都被对应的格式化值替换。<br><br> 源字符串包含被一个或多个格式项分隔开的零个或多个固定文本段。固定文本可以包含您选择的任何内容。<br><br> 下面是一个 String.Format 示例。<br><br></p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token class-name">Visual</span> Basic<span class="token punctuation">]</span>
Dim myName <span class="token class-name">As</span> String <span class="token operator">=</span> <span class="token string">&quot;Fred&quot;</span>
String<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;Name = {0}, hours = {1:hh}&quot;</span><span class="token punctuation">,</span> myName<span class="token punctuation">,</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">)</span>

<span class="token punctuation">[</span>C#<span class="token punctuation">]</span>
<span class="token class-name"><span class="token keyword">string</span></span> myName <span class="token operator">=</span> <span class="token string">&quot;Fred&quot;</span><span class="token punctuation">;</span>
String<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;Name = {0}, hours = {1:hh}&quot;</span><span class="token punctuation">,</span> myName<span class="token punctuation">,</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>固定文本是“<code>Name =</code>”和“<code>, hours =</code>”，格式项是“<code>{0}</code>”和“<code>{1:hh}</code>”，值为 <code>myName</code> 和 <code>DateTime.Now</code>。<br><br> 格式项语法<br> 所有格式项都采用下面的形式。<br><br><code>{index[,alignment][:formatString]}</code><br><br> 必须使用成对的大括号（“<code>{</code>”和“<code>}</code>”）。因为左右大括号分别被解释为格式项的开始和结束，所以要在固定文本中显示一个左括号（“<code>{</code>”），必须指定两个左括号（“<code>{{</code>”）；要在固定文本中显示一个右括号（“<code>}</code>”）,必须指定两个右括号（“<code>}}</code>”）。<br><br> 格式项由下面的组件构成。<br><br> 索引组件<br> 强制“索引”组件（也叫参数说明符）是一个从 0 开始的数字，可标识值列表中对应的元素。也就是说，参数说明符为 0 的格式项格式化列表中的第一个值，参数说明符为 1 的格式项格式化列表中的第二个值，依次类推。<br><br> 通过指定相同的参数说明符，多个格式项可以引用值列表中的同一个元素。例如，通过指定类似于“<code>{0:X} {0:E} {0:N}</code>”的源字符串，可以将同一个数值格式化为十六进制、科学表示法和数字格式。<br><br> 每一个格式项都可以引用所有的参数。例如，如果有三个值，则可以通过指定类似于“<code>{1} {0} {2}</code>”的源字符串来格式化第二、第一和第三个值。格式项未引用的值会被忽略。如果参数说明符指定了超出值列表范围的项，将导致运行时异常。<br><br> 对齐组件<br> 可选的“对齐”组件是一个带符号的整数，指示首选的格式化字段宽度。如果“对齐”值小于格式化字符串的长度，“对齐”会被忽略，并且使用格式化字符串的长度作为字段宽度。如果“对齐”为正数，字段的格式化数据为右对齐；如果“对齐”为负数，字段的格式化数据为左对齐。如果需要填充，则使用空白。如果指定“对齐”，就需要使用逗号。<br><br> 格式字符串组件<br> 可选的“格式字符串”组件由标准或自定义格式说明符组成。如果不指定“格式字符串”，则使用常规（“G”）格式说明符。如果指定“格式说明符”，需要使用冒号。<br><br> 以上文档摘自ms-help://MS.NETFrameworkSDKv1.1.CHS/cpguidenf/html/cpconcompositeformatting.htm<br> 如果不是2003中文版，请截取cpguidenf/html/cpconcompositeformatting.htm<br></p></blockquote><hr><p>该问题已经结贴 ，得分记录： eshusheng (10)、 xixigongzhu (10)、</p>`,21),p=[e];function c(r,u){return s(),a("div",null,p)}const l=n(t,[["render",c],["__file","cspgra3.html.vue"]]);export{l as default};
