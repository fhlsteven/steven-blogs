import{_ as n,o as s,c as a,a as t}from"./app-d9da1b6d.js";const p={},o=t(`<h1 id="用visual-c-来删除注册表中的注册信息-1" tabindex="-1"><a class="header-anchor" href="#用visual-c-来删除注册表中的注册信息-1" aria-hidden="true">#</a> 用Visual C# 来删除注册表中的注册信息(1)</h1><p>在《用Visual C#读取注册信息》的文中，已经介绍了用 Visual C#来读取注册表中的注册信息。本文就来介绍用Visual C#对注册表的另外一个操作，这也是一个具有破坏性的操作过程--删除注册信息。</p><p>在上文中已经知道，由于Visual C#本身没有带类库，他对注册表的处理过程是通过调用.Net FrameWork SDK中的名称空间Microsoft.Win32中封装的二个类来实现的。这二个类就是Registry类、RegistryKey类。在RegistryKey类中定义了三个方法来删除注册表中的注册信息。他们分别是：DeleteSubKey()方法、DeleteSubKeyTree()方法、DeleteValue()方法。下面就具体介绍一下在Visual C#中如何正确使用这三个方法。</p><h2 id="一-如何用visual-c-中调用这三个方法" tabindex="-1"><a class="header-anchor" href="#一-如何用visual-c-中调用这三个方法" aria-hidden="true">#</a> 一．如何用Visual C#中调用这三个方法</h2><p>在介绍如何使用这三个方法之前，还需要重新介绍一下RegistryKey类中的一个方法--<code>OpenSubKey()</code>方法。在上一文中已经介绍了，此方法是打开指定的子键。其实<code>OpenSubKey()</code>方法有二种调用的方式：</p><p>I &gt; <code>.OpenSubKey(string, subkey)</code> ：这种调用方式是对于此子键只是进行读操作。<br> II &gt; <code>.OpenSubKey(string subkey, Boolean writable)</code>：当对子键使用写操作的时候要用此种调用方法。如果在对子键使用了写操作，但仍然使用第一种调用方法，在程序运行的时候会产生一个错误信息。</p><h3 id="_1-deletesubkey-方法" tabindex="-1"><a class="header-anchor" href="#_1-deletesubkey-方法" aria-hidden="true">#</a> （1）. DeleteSubKey()方法</h3><p>此方法是删除一个指定的子键，在使用此方法的时候，如果在此子键中还存在另外的子键，则会产生一个错误信息。在程序中调用此方法有二种原型，为：</p><p>I &gt; <code>.DeleteSubKey(string, subkey)</code>：这种调用方式就是直接删除指定的子键。</p><p>II &gt; <code>.DeleteSubKey(string subkey, Boolean info)</code>：其中的&quot;string&quot;是要删除的子键的名称，&quot;Boolean&quot;参数的意思是：如果值为&quot;True&quot;，则在程序调用的时候，删除的子键不存在，则产生一个错误信息；如果值为&quot;False&quot;，则在程序调用的时候，删除的子键不存在，也不产生错误信息，程序依然正确运行。所以在具体的程序设计过程中，我还是推荐使用第二种调用方法。</p><h3 id="_2-deletesubkeytree-方法" tabindex="-1"><a class="header-anchor" href="#_2-deletesubkeytree-方法" aria-hidden="true">#</a> （2）. DeleteSubKeyTree()方法</h3><p>此方法是彻底删除指定的子键目录，即：删除该子键以及该子键以下的全部子键。由于此方法的破坏性是非常强的，所有在使用的时候要非常主要。在程序中调用此方法的原型就一种，为：</p><p><code>DeleteSubKeyTree(string subkey)</code>：其中&quot;subkey&quot;就是要彻底删除的子键名称。</p><h3 id="_3-deletevalue-方法" tabindex="-1"><a class="header-anchor" href="#_3-deletevalue-方法" aria-hidden="true">#</a> （3）. DeleteValue()方法</h3><p>此方法是删除指定的键值。在程序中调用此方法的原型就一种，为：</p><p><code>DeleteValue(string value)</code>：其中&quot;value&quot;就是要删除的键值的名称。<br> 在介绍完与删除注册表中注册信息有关方法后，将通过一个程序来说明他们在程序中具体用法。</p><h2 id="二-程序设计和运行环境以及要准备的工作" tabindex="-1"><a class="header-anchor" href="#二-程序设计和运行环境以及要准备的工作" aria-hidden="true">#</a> 二．程序设计和运行环境以及要准备的工作</h2><p>I &gt; .视窗系统2000服务器版</p><p>II &gt; ..Net FrameWork SDK Beta 2版</p><p>III &gt; .由于程序的功能是删除指定的主键、子键和键值，这就需要我们在注册表中先为设置好这些值的位置和名称。具体如下：</p><p>在HKEY_LOCAL_MACHINE主键下面的&quot;SOFTWARE&quot;子键中建立如下子键和键值：<br> 在&quot;SOFTWARE&quot;子键下建立&quot;aaa&quot;子键。在&quot;aaa&quot;子键下面建立&quot;bbb&quot;子键和&quot;ddd&quot;子键。在&quot;bbb&quot;子键中建立名称为&quot;ccc&quot;的键值，键值的值为&quot;ccc&quot;。子&quot;ddd&quot;子键中建立子键&quot;eee&quot;，并在此子键中建立一个&quot;fff&quot;键值，键值的值为&quot;fff&quot;。程序中要删除的键值是&quot;ccc&quot;键值，要删除的子键是&quot;bbb&quot;，要彻底删除的子键是&quot;ddd&quot;。具体设定如下图所示：</p><p>点击小图放大图01：为程序设定的注册表结构图</p><h2 id="三-程序设计的重要步骤" tabindex="-1"><a class="header-anchor" href="#三-程序设计的重要步骤" aria-hidden="true">#</a> 三．程序设计的重要步骤</h2><p>程序设计的主要步骤就是如何删除键值、不包含任何子键的子键、包含子键的子键。下面就通过程序来具体说明：</p><p>（1）.如何删除键值。</p><p>在程序中要删除键值是&quot;ccc&quot;。以下就是程序中删除此键值的具体语句。</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">RegistryKey</span> hklm <span class="token operator">=</span> Registry<span class="token punctuation">.</span>LocalMachine<span class="token punctuation">;</span>
<span class="token class-name">RegistryKey</span> software <span class="token operator">=</span> hklm<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;SOFTWARE&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//打开&quot;SOFTWARE&quot;子键</span>
<span class="token class-name">RegistryKey</span> no1 <span class="token operator">=</span> software<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//打开&quot;aaa&quot;子键</span>
<span class="token class-name">RegistryKey</span> no2 <span class="token operator">=</span> no1<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;bbb&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//打开&quot;bbb&quot;子键</span>
no2<span class="token punctuation">.</span><span class="token function">DeleteValue</span><span class="token punctuation">(</span><span class="token string">&quot;ccc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//删除名称为&quot;ccc&quot;的键值</span>
</code></pre></div><p>（2）.如何删除不包含任何子键的子键。</p><p>在程序要删除的子键是&quot;bbb&quot;。以下就是删除此子键的具体程序代码：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">RegistryKey</span> hklm <span class="token operator">=</span> Registry<span class="token punctuation">.</span>LocalMachine<span class="token punctuation">;</span>
<span class="token class-name">RegistryKey</span> software <span class="token operator">=</span> hklm<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;SOFTWARE&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//打开&quot;SOFTWARE&quot;子键</span>
<span class="token class-name">RegistryKey</span> no1 <span class="token operator">=</span> software<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//打开&quot;aaa&quot;子键</span>
no1<span class="token punctuation">.</span><span class="token function">DeleteSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;bbb&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//删除名称为&quot;bbb&quot;的子键</span>
</code></pre></div><p>（3）.如何删除包含子键的子键。</p><p>在程序中要删除的此子键是&quot;ddd&quot;。以下就是删除此子键的具体程序代码：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">RegistryKey</span> hklm <span class="token operator">=</span> Registry<span class="token punctuation">.</span>LocalMachine<span class="token punctuation">;</span>
hklm<span class="token punctuation">.</span><span class="token function">DeleteSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">RegistryKey</span> software <span class="token operator">=</span> hklm<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;SOFTWARE&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//打开&quot;SOFTWARE&quot;子键</span>
<span class="token class-name">RegistryKey</span> no1 <span class="token operator">=</span> software<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//打开&quot;aaa&quot;子键</span>
no1<span class="token punctuation">.</span><span class="token function">DeleteSubKeyTree</span><span class="token punctuation">(</span><span class="token string">&quot;ddd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//删除名称为&quot;ddd&quot;的子键</span>
</code></pre></div><h2 id="四-本文中的程序源代码-reg-cs-以及运行界面" tabindex="-1"><a class="header-anchor" href="#四-本文中的程序源代码-reg-cs-以及运行界面" aria-hidden="true">#</a> 四．本文中的程序源代码(reg.cs)以及运行界面</h2><p>reg.cs程序的主要功能就是删除注册表中的键值、不包含子键的子键和包含子键的子键。并且通过按钮&quot;读取注册表&quot;，以列表的显示方法来及时了解删除的情况。下图就是程序运行后的界面：</p><p>点击小图放大图02：本文中程序的运行界面</p><p>reg.cs程序源代码如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>ComponentModel</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Win32</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Form1</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Form</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>Container</span> components<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ListBox</span> listBox1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Button</span> button1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Button</span> button2<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Button</span> button3<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Button</span> button4<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">Form1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//清除在程序中使用过的资源</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        components<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//初始化程序中使用到的组件</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        components <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>Container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        listBox1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button1<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        button1<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;读取注册表&quot;</span><span class="token punctuation">;</span>

        button1<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span>button1_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>

        button2<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button2<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button2<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        button2<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;删除键值ccc&quot;</span><span class="token punctuation">;</span>
        button2<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span>button2_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>

        button3<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">216</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button3<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button3<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        button3<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;删除子键bbb&quot;</span><span class="token punctuation">;</span>
        button3<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span>button3_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>

        button4<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">316</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button4<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button4<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        button4<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;删除主键ddd&quot;</span><span class="token punctuation">;</span>
        button4<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span>button4_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>

        listBox1<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        listBox1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">496</span><span class="token punctuation">,</span> <span class="token number">264</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        listBox1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;用Visual C#来删除注册表中的主键、子键和键值！&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>AutoScaleBaseSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ClientSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">528</span><span class="token punctuation">,</span> <span class="token number">357</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>listBox1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>button1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>button2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>button3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>button4<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button1_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        listBox1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RegistryKey</span> hklm <span class="token operator">=</span> Registry<span class="token punctuation">.</span>LocalMachine<span class="token punctuation">;</span>
        <span class="token class-name">RegistryKey</span> software <span class="token operator">=</span> hklm<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;SOFTWARE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//打开&quot;SOFTWARE&quot;子键</span>
        <span class="token class-name">RegistryKey</span> no1 <span class="token operator">=</span> software<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//打开&quot;aaa&quot;子键</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> site <span class="token keyword">in</span> no1<span class="token punctuation">.</span><span class="token function">GetSubKeyNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">//开始遍历由子键名称组成的字符串数组</span>
        <span class="token punctuation">{</span>
            listBox1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>site<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//在列表中加入子键名称</span>
            <span class="token class-name">RegistryKey</span> sitekey <span class="token operator">=</span> no1<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span>site<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//打开此子键</span>
            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> sValName <span class="token keyword">in</span> sitekey<span class="token punctuation">.</span><span class="token function">GetValueNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token comment">//开始遍历由指定子键拥有的键值名称组成的字符串数组</span>
            <span class="token punctuation">{</span>
                listBox1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span> <span class="token operator">+</span> sValName <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> sitekey<span class="token punctuation">.</span><span class="token function">GetValue</span><span class="token punctuation">(</span>sValName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//在列表中加入键名称和对应的键值</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button2_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">RegistryKey</span> hklm <span class="token operator">=</span> Registry<span class="token punctuation">.</span>LocalMachine<span class="token punctuation">;</span>
        <span class="token class-name">RegistryKey</span> software <span class="token operator">=</span> hklm<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;SOFTWARE&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//打开&quot;SOFTWARE&quot;子键</span>
        <span class="token class-name">RegistryKey</span> no1 <span class="token operator">=</span> software<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//打开&quot;aaa&quot;子键</span>
        <span class="token class-name">RegistryKey</span> no2 <span class="token operator">=</span> no1<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;bbb&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//打开&quot;bbb&quot;子键</span>
        no2<span class="token punctuation">.</span><span class="token function">DeleteValue</span><span class="token punctuation">(</span><span class="token string">&quot;ccc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//删除名称为&quot;ccc&quot;的键值</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button3_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">RegistryKey</span> hklm <span class="token operator">=</span> Registry<span class="token punctuation">.</span>LocalMachine<span class="token punctuation">;</span>
        <span class="token class-name">RegistryKey</span> software <span class="token operator">=</span> hklm<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;SOFTWARE&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//打开&quot;SOFTWARE&quot;子键</span>
        <span class="token class-name">RegistryKey</span> no1 <span class="token operator">=</span> software<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//打开&quot;aaa&quot;子键</span>
        no1<span class="token punctuation">.</span><span class="token function">DeleteSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;bbb&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//删除名称为&quot;bbb&quot;的子键</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button4_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">RegistryKey</span> hklm <span class="token operator">=</span> Registry<span class="token punctuation">.</span>LocalMachine<span class="token punctuation">;</span>
        hklm<span class="token punctuation">.</span><span class="token function">DeleteSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RegistryKey</span> software <span class="token operator">=</span> hklm<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;SOFTWARE&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//打开&quot;SOFTWARE&quot;子键</span>
        <span class="token class-name">RegistryKey</span> no1 <span class="token operator">=</span> software<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//打开&quot;aaa&quot;子键</span>
        no1<span class="token punctuation">.</span><span class="token function">DeleteSubKeyTree</span><span class="token punctuation">(</span><span class="token string">&quot;ddd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//删除名称为&quot;ddd&quot;的子键</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Application<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Form1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="五-总结" tabindex="-1"><a class="header-anchor" href="#五-总结" aria-hidden="true">#</a> 五．总结</h2><p>本文介绍Visual C#注册表编程的一个重要内容，即：如何删除注册信息。由于删除注册信息是一项非常具有破坏性的操作，所以在操作之前一定要注意对注册表的保护工作。</p>`,40),e=[o];function c(u,l){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","sysinfo19.html.vue"]]);export{i as default};
