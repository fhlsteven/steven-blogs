import{_ as n,o as a,c as s,a as e}from"./app-d9da1b6d.js";const t="/steven-blogs/assets/win7_1-8bdac0c9.png",o="/steven-blogs/assets/win7_2-ddf475b8.png",p={},c=e('<h1 id="new-article" tabindex="-1"><a class="header-anchor" href="#new-article" aria-hidden="true">#</a> New Article</h1><p>Download demo project - 37 Kb</p><p><img src="'+t+`" alt="win7_1"></p><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>I just wanted to write a small and light control to arrange several controls on groups, saving space on the form. I really liked the MS Messengerâ€™s way to group actions and contacts, so I decided to emulate its look and feel.</p><h2 id="using-the-group-panel" tabindex="-1"><a class="header-anchor" href="#using-the-group-panel" aria-hidden="true">#</a> Using the Group Panel</h2><p>The Tab Page Panels associated to the control can not be created at design time (there is no designer yet) so they have to be created by code at run time. This is not an issue to me because I actually load the panels from entries in a database table.</p><p>To add the tab page panels:</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">Morell<span class="token punctuation">.</span>GroupPanel<span class="token punctuation">.</span>TabPage</span> t0 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Morell<span class="token punctuation">.</span>GroupPanel<span class="token punctuation">.</span>TabPage</span><span class="token punctuation">(</span><span class="token string">&quot;Group 00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Morell<span class="token punctuation">.</span>GroupPanel<span class="token punctuation">.</span>TabPage</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Morell<span class="token punctuation">.</span>GroupPanel<span class="token punctuation">.</span>TabPage</span><span class="token punctuation">(</span><span class="token string">&quot;Group 01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>After creating the Tab page panels, a control must be associated to each tab page:</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code>t0<span class="token punctuation">.</span><span class="token function">AddControl</span><span class="token punctuation">(</span>treeView<span class="token punctuation">)</span><span class="token punctuation">;</span>
t1<span class="token punctuation">.</span><span class="token function">AddControl</span><span class="token punctuation">(</span>txt0<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>To add some graphical effects, you can select the images to show and a color gradient:</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Configure the icons to use</span>
groupPanel<span class="token punctuation">.</span>UpImage <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;up.bmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
groupPanel<span class="token punctuation">.</span>DownImage <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;down.bmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>These two images are located in the folder &quot;GroupPanel\\Test\\bin\\Debug&quot;.</p><p>When selecting images, you have to set the TransparentColor property to the background color image. I normally use System.Drawing.Color.Magenta.</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Create a color gradient</span>
groupPanel<span class="token punctuation">.</span>ColorLeft <span class="token operator">=</span> SystemColors<span class="token punctuation">.</span>ControlDarkDark<span class="token punctuation">;</span>
groupPanel<span class="token punctuation">.</span>ColorRight <span class="token operator">=</span> SystemColors<span class="token punctuation">.</span>ControlLight<span class="token punctuation">;</span>
</code></pre></div><p>Finally, add the tab pages to the control panel and select the initial group that you want to show.</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Add the tab pages to the group panel control</span>
groupPanel<span class="token punctuation">.</span>TabPages<span class="token punctuation">.</span><span class="token function">AddRange</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Morell<span class="token punctuation">.</span>GroupPanel<span class="token punctuation">.</span>TabPage<span class="token punctuation">[</span><span class="token punctuation">]</span></span>
                                                   <span class="token punctuation">{</span>t0<span class="token punctuation">,</span> t1<span class="token punctuation">,</span> t2<span class="token punctuation">,</span> t3<span class="token punctuation">,</span> t4<span class="token punctuation">,</span> t5<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Set the first tab to be shown</span>
groupPanel<span class="token punctuation">.</span>SelectedIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="other-features" tabindex="-1"><a class="header-anchor" href="#other-features" aria-hidden="true">#</a> Other Features</h2><h3 id="look-and-feel" tabindex="-1"><a class="header-anchor" href="#look-and-feel" aria-hidden="true">#</a> Look and Feel</h3><p>HotTrack. Set it to true so the text is underlined when the mouse passes over it.<br> HotTrackColor. Color to display the text while hot tracking.<br> TabHeight. The height of the panel title area.</p><h3 id="selected-tab-page-and-selected-index-changed" tabindex="-1"><a class="header-anchor" href="#selected-tab-page-and-selected-index-changed" aria-hidden="true">#</a> Selected Tab Page and Selected Index Changed</h3><p>When the user changes the selected tab page, you can refresh other controls or execute an action based on the user selection:</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">this</span><span class="token punctuation">.</span>groupPanel<span class="token punctuation">.</span>SelectedIndexChanged
             <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>groupPanel_SelectedIndexChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">groupPanel_SelectedIndexChanged</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
 <span class="token class-name"><span class="token keyword">int</span></span> index <span class="token operator">=</span> groupPanel<span class="token punctuation">.</span>SelectedIndex<span class="token punctuation">;</span>
 <span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> <span class="token string">&quot;Selected tab: &quot;</span> <span class="token operator">+</span> groupPanel<span class="token punctuation">.</span>TabPages<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">+</span> <span class="token string">&quot; Index: &quot;</span>
             <span class="token operator">+</span> index<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="labels-editing" tabindex="-1"><a class="header-anchor" href="#labels-editing" aria-hidden="true">#</a> Labels Editing</h3><p>The text for each tab page can be edited by the user by invoking the BeginEdit() method:</p><p><code>groupPanel.TabPages[index].BeginEdit();</code></p><p>This will start the text editing for the selected tab page.</p><p>When the user presses enter, finishing the editing, the AfterLabelEdit event is raised so you can cancel if necessary. The maximum text length is controlled with the property LabelMaxLenght.</p><h2 id="ordering-the-tab-pages" tabindex="-1"><a class="header-anchor" href="#ordering-the-tab-pages" aria-hidden="true">#</a> Ordering the Tab Pages</h2><p>You can invoke the methods:</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code>groupPanel<span class="token punctuation">.</span><span class="token function">MoveDown</span><span class="token punctuation">(</span>groupPanel<span class="token punctuation">.</span>TabPages<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
groupPanel<span class="token punctuation">.</span><span class="token function">MoveUp</span><span class="token punctuation">(</span>groupPanel<span class="token punctuation">.</span>TabPages<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="suggestion" tabindex="-1"><a class="header-anchor" href="#suggestion" aria-hidden="true">#</a> Suggestion</h3><p>With the group panel control you can dynamically Add, Remove, change the text, or rearrange the tab pages orders. Allow the user to use this functionality with a popup menu, detecting the tab page where the mouse was pressed.</p><p>You can hook the TabPageMouseUp event:</p><p><code>this.groupPanel.TabPageMouseUp += new System.Windows.Forms.MouseEventHandler(this.groupPanel_TabPageMouseUp);</code></p><p>And get the selected tab page to display the context menu:</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">groupPanel_TabPageMouseUp</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MouseEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>Button <span class="token operator">==</span> MouseButtons<span class="token punctuation">.</span>Right<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Menu handling........</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Remember to enable/disable the &quot;Move Up&quot; and &quot;Move Down&quot; options based on the selected tab page index. Calling &quot;Move Up&quot; on the tab page index 0 will raise an exception. The same goes for calling &quot;Move Down&quot; on the last tab page.</p><h2 id="points-of-interest" tabindex="-1"><a class="header-anchor" href="#points-of-interest" aria-hidden="true">#</a> Points of Interest</h2><p>I have found a bug (or at least I think so) with the treeview. After adding a TreeView to the panel control by code, a horizontal scroll bar appears at the bottom of the treeView, even if it is not necessary. The only way I found to remove this, was setting the control&#39;s width to 0; and because its Dock property is set to DockStyle.Fill it is displayed correctly.</p><p>TabPage.cs</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">AddControl</span><span class="token punctuation">(</span><span class="token class-name">Control</span> control<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// Set the reference to the control</span>
    _childControl <span class="token operator">=</span> control<span class="token punctuation">;</span>

    <span class="token comment">// Add the control to the controls collection</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>_childControl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    _childControl<span class="token punctuation">.</span>Dock <span class="token operator">=</span> DockStyle<span class="token punctuation">.</span>Fill<span class="token punctuation">;</span>
            
    <span class="token comment">// BUG: Detected on Treeview.</span>
    <span class="token comment">// If the control is not Hidden and Shown, the treeview </span>
    <span class="token comment">// always presents and horizontal scroll bar that is not necessary.</span>
    <span class="token comment">// If the Windows XP style is on, the scrollbar does not have the XP look.</span>
    _childControl<span class="token punctuation">.</span>Width <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><img src="`+o+'" alt="win7_2"></p><p>If the _childControl.Width is not changed, a scrollbar is displayed. Also notice that the scroll bar is shown with the standard look and feel, not Windows XP&#39;s.</p><h2 id="history" tabindex="-1"><a class="header-anchor" href="#history" aria-hidden="true">#</a> History</h2><p>August 7, 2003 - version 1.0</p><ul><li>Initial version.</li></ul><h2 id="teo" tabindex="-1"><a class="header-anchor" href="#teo" aria-hidden="true">#</a> Teo</h2><p>Click here to view Teo&#39;s online profile.</p>',50),l=[c];function i(u,r){return a(),s("div",null,l)}const h=n(p,[["render",i],["__file","win7.html.vue"]]);export{h as default};
