import{_ as t,r as p,o as e,c as o,b as n,d as s,e as c,a as l}from"./app-f0851ed3.js";const u={},k={id:"net里长短文件名的解决办法",tabindex:"-1"},r=n("a",{class:"header-anchor",href:"#net里长短文件名的解决办法","aria-hidden":"true"},"#",-1),i={href:"http://www.cnblogs.com/lovewangshu/archive/2005/02/03/101206.html",target:"_blank",rel:"noopener noreferrer"},m=l(`<p>当我用<code>Path.GetTempFileName()</code>函数去取一个目录名时，竟然得到这样的结果：<code>C:\\DOCUME~1\\Vitami～1</code>。。。应该是<code>c:\\Documents and Settings\\VitaminC.net</code>的。找了半天，最后在GotDotNet找到了结果，把代码贴出来大家看看：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">ShellPathNameConvert</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// Converts file and directory paths to their respective</span>
    <span class="token doc-comment comment">/// long and short name versions.</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remarks</span><span class="token punctuation">&gt;</span></span>This class uses InteropServices to call GetLongPathName and GetShortPathName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>remarks</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Convert</span>
    <span class="token punctuation">{</span>
        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;kernel32.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">uint</span></span> <span class="token function">GetLongPathName</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> shortname<span class="token punctuation">,</span> <span class="token class-name">StringBuilder</span> longnamebuff<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">uint</span></span> buffersize<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;kernel32.dll&quot;</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">GetShortPathName</span><span class="token punctuation">(</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>LPTStr<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token class-name"><span class="token keyword">string</span></span> path<span class="token punctuation">,</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>LPTStr<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token class-name">StringBuilder</span> shortPath<span class="token punctuation">,</span>
            <span class="token class-name"><span class="token keyword">int</span></span> shortPathLength<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// The ToShortPathNameToLongPathName function retrieves the long path form of a specified short input path</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>shortName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>The short name path<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span>A long name path string<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">ToLongPathName</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> shortName<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">StringBuilder</span> longNameBuffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">uint</span></span> bufferSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">uint</span><span class="token punctuation">)</span>longNameBuffer<span class="token punctuation">.</span>Capacity<span class="token punctuation">;</span>

            <span class="token function">GetLongPathName</span><span class="token punctuation">(</span>shortName<span class="token punctuation">,</span> longNameBuffer<span class="token punctuation">,</span> bufferSize<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> longNameBuffer<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// The ToLongPathNameToShortPathName function retrieves the short path form of a specified long input path</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>longName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>The long name path<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span>A short name path string<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">ToShortPathName</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> longName<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">StringBuilder</span> shortNameBuffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">int</span></span> bufferSize <span class="token operator">=</span> shortNameBuffer<span class="token punctuation">.</span>Capacity<span class="token punctuation">;</span>

            <span class="token class-name"><span class="token keyword">int</span></span> result <span class="token operator">=</span> <span class="token function">GetShortPathName</span><span class="token punctuation">(</span>longName<span class="token punctuation">,</span> shortNameBuffer<span class="token punctuation">,</span> bufferSize<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> shortNameBuffer<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="运行结果" tabindex="-1"><a class="header-anchor" href="#运行结果" aria-hidden="true">#</a> 运行结果</h2><div class="language-txt" data-ext="txt"><pre class="language-txt"><code>Current directory:
D:\\Documents and Settings\\Administrator\\桌面\\ShellPathNameConvert\\ShellPathNameC
onvertTest\\bin\\Debug

Short path name:
D:\\DOCUME~1\\ADMINI~1\\桌面\\SHELLP~1\\SHELLP~2\\bin\\Debug

Long path name:
D:\\Documents and Settings\\Administrator\\桌面\\ShellPathNameConvert\\ShellPathNameC
onvertTest\\bin\\Debug
</code></pre></div><h2 id="附带上作者的说明" tabindex="-1"><a class="header-anchor" href="#附带上作者的说明" aria-hidden="true">#</a> 附带上作者的说明</h2><p>ShellPathNameConvert will allow you to convert to and from Long and Short paths. It&#39;s common for the Windows shell to send you a short path if your application takes command line arguments. However, it&#39;s not always convenient to work with the short path names and .NET provides no built in way to get the long path nam</p><blockquote><p>posted on 2005-02-03 01:58 维生素C.NET 阅读(2074) 评论(1)</p></blockquote>`,7);function d(g,h){const a=p("ExternalLinkIcon");return e(),o("div",null,[n("h1",k,[r,s(),n("a",i,[s(".net里长短文件名的解决办法"),c(a)])]),m])}const y=t(u,[["render",d],["__file","sysctr24.html.vue"]]);export{y as default};
