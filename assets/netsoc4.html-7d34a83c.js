import{_ as n,o as s,c as a,a as t}from"./app-477de5b2.js";const p="/steven-blogs/assets/netsoc4_1-4d82b5fc.png",o="/steven-blogs/assets/netsoc4_2-9b20d995.png",c={},e=t(`<h1 id="用visual-c-实现局域网点对点通讯" tabindex="-1"><a class="header-anchor" href="#用visual-c-实现局域网点对点通讯" aria-hidden="true">#</a> 用Visual C＃实现局域网点对点通讯</h1><p>点对点即Peer-To-Peer，通常简写为P2P。所谓网络中的点对点，其实可以看成是一种对等的网络模型。P2P其实是实现网络上不同计算机之间，不经过中继设备直接交换数据或服务的一种技术。P2P由于允许网络中任一台计算机可以直接连接到网络中其他计算机，并与之进行数据交换，这样既消除了中间环节，也使得网络上的沟通变得更容易、更直接。</p><p>P2P作为一种网络的模型，它有别于传统的客户/服务器模型。客户/服务器模型一般都有预定义的客户机和服务器。而在P2P模型转并没有明确的客户端和服务器，但其实在P2P模型中，每一台计算机既可以看成是服务器，也可以看成是客户机。在网络中，传统上的客户机/服务器通讯模型中，发送服务请求或者发送数据的计算机，一般称为客户机；而接收、处理服务或接收数据的计算机称为服务器。而在P2P网络模型中，计算机不仅接收数据，还有发送数据，不仅提出服务请求，还有接收对方的服务请求。</p><p>在下面介绍的用Visual C＃实现的局域网点对点通讯程序，就有如下特点，在网络利用此通讯程序进行通讯的任一计算机，在通讯之前，都需要侦听端口号，接受其他机器的连接申请，并在连接建立后，就可以接收对方发送来的数据；同时也可以向其他机器提出连接申请，并在对方计算机允许建立连接请求后，发送数据到对方。可见在网络中利用此软件进行P2P网络通讯的任一计算机既是客户机，同样也是服务器。</p><h2 id="一-程序的设计、调试、运行的软件环境" tabindex="-1"><a class="header-anchor" href="#一-程序的设计、调试、运行的软件环境" aria-hidden="true">#</a> 一．程序的设计、调试、运行的软件环境</h2><p>（1）.微软公司视窗2000服务器版<br> （2）.Visual Studio .Net正式版，.Net FrameWork SDK版本号3705</p><h2 id="二-关键步骤及其解决方法-关键步骤就是实现信息在网络中的发送和接收。数据接收使用的是socket-数据发送使用的是networkstream" tabindex="-1"><a class="header-anchor" href="#二-关键步骤及其解决方法-关键步骤就是实现信息在网络中的发送和接收。数据接收使用的是socket-数据发送使用的是networkstream" aria-hidden="true">#</a> 二．关键步骤及其解决方法： 关键步骤就是实现信息在网络中的发送和接收。数据接收使用的是Socket，数据发送使用的是NetworkStream</h2><h3 id="_1-利用socket来接收信息" tabindex="-1"><a class="header-anchor" href="#_1-利用socket来接收信息" aria-hidden="true">#</a> 1.利用Socket来接收信息</h3><p>为了更清楚的说明问题，程序在处理数据发送和接收时采用了不通的端口号，发送数据程序在缺省状态设定的端口号为&quot;8889&quot;。下面代码是侦听端口号&quot;8889&quot;，接受网络中对此端口号的连接请求，并在建立连接后，通过Socket接收远程计算机发送来的数据：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">try</span>
<span class="token punctuation">{</span>
    <span class="token class-name">TcpListener</span> tlListen1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TcpListener</span><span class="token punctuation">(</span><span class="token number">8889</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//侦听端口号 </span>
    tlListen1<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Socket</span> skSocket <span class="token operator">=</span> tlListen1<span class="token punctuation">.</span><span class="token function">AcceptSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//接受远程计算机的连接请求，并获得用以接收数据的Socket实例 </span>
    <span class="token class-name">EndPoint</span> tempRemoteEP <span class="token operator">=</span> skSocket<span class="token punctuation">.</span>RemoteEndPoint<span class="token punctuation">;</span>
    <span class="token comment">//获得远程计算机对应的网络远程终结点 </span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Byte<span class="token punctuation">[</span><span class="token punctuation">]</span></span> byStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Byte</span><span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//定义从远程计算机接收到数据存放的数据缓冲区 </span>
        <span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> skSocket<span class="token punctuation">.</span><span class="token function">ReceiveFrom</span><span class="token punctuation">(</span>byStream<span class="token punctuation">,</span> <span class="token keyword">ref</span> tempRemoteEP<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//接收数据，并存放到定义的缓冲区中 </span>
        <span class="token class-name"><span class="token keyword">string</span></span> sMessage <span class="token operator">=</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span>byStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//以指定的编码，从缓冲区中解析出内容 </span>
        MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span>sMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//显示传送来的数据 </span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>SecurityException</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;防火墙安全错误！&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;错误&quot;</span><span class="token punctuation">,</span>
        MessageBoxButtons<span class="token punctuation">.</span>OK<span class="token punctuation">,</span> MessageBoxIcon<span class="token punctuation">.</span>Exclamation<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_2-利用networkstream来传送信息" tabindex="-1"><a class="header-anchor" href="#_2-利用networkstream来传送信息" aria-hidden="true">#</a> 2.利用NetworkStream来传送信息</h3><p>在使用StreamWriter处理NetworkStream传送数据时，数据传送的编码类型是&quot;UTF8&quot;，下列代码是对IP地址为&quot;10.138.198.213&quot;的计算机的&quot;8888&quot;端口号提出连接申请，并在连接申请建立后，以UTF8编码发送字符串&quot;您好，见到您很高兴&quot;到对方，由于下列代码中的注释比较详细，这里就不具体介绍了，下列代码也是使用NetworkStream传送数据的典型代码：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">try</span>
<span class="token punctuation">{</span>
    <span class="token class-name">TcpClient</span> tcpc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TcpClient</span><span class="token punctuation">(</span><span class="token string">&quot;10.138.198.213&quot;</span><span class="token punctuation">,</span> <span class="token number">8888</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//对IP地址为&quot;10.138.198.213&quot;的计算机的8888端口提出连接申请 </span>
    <span class="token class-name">NetworkStream</span> tcpStream <span class="token operator">=</span> tcpc<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//如果连接申请建立，则获得用以传送数据的数据流 </span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;目标计算机拒绝连接请求！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">try</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">string</span></span> sMsg <span class="token operator">=</span> <span class="token string">&quot;您好，见到您很高兴&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">StreamWriter</span> reqStreamW <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamWriter</span><span class="token punctuation">(</span>tcpStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//以特定的编码往向数据流中写入数据 ,默认为UTF8编码 </span>
    reqStreamW<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>sMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//将字符串写入数据流中 </span>
    reqStreamW<span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//清理当前编写器的所有缓冲区，并使所有缓冲数据写入基础流 </span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;无法发送信息到目标计算机！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>当然在具体用Visual C＃实现网络点对点通讯程序时，还必须掌握很多其他方面的知识，如资源的回收。在用Visual C＃编写网络应用程序的时候，很多朋友遇到这样的情况。当程序退出后，通过Windows的&quot;资源管理器&quot;看到的是进程数目并没有减少。这是因为程序中使用的线程可能并没有有效退出。虽然Thread类中提供了&quot;Abort&quot;方法用以中止进程，但并不能够保证成功退出。因为进程中使用的某些资源并没有回收。在某些情况下垃圾回收器也不能保证完全的回收资源，还是需要我们自己手动回收资源的。在本文介绍的程序中也涉及到资源手动回收的问题。实现方法可参阅下面具体实现步骤中的第十二步。</p><h2 id="三-具体步骤" tabindex="-1"><a class="header-anchor" href="#三-具体步骤" aria-hidden="true">#</a> 三．具体步骤</h2><p>在了解、掌握了上面的关键问题及其解决方法后，再实现用Visual C＃实现网络点对点通讯程序相对就容易许多，下面是具体的实现步骤：</p><ol><li><p>启动Visual Studio .Net，并新建一个Visual C＃项目，名称为【Visual C＃实现网络点对点通讯程序】。</p></li><li><p>在Visual Studio .Net集成开发环境中的【解决方案资源管理器】窗口中，双击Form1.cs文件，进入Form1.cs文件的编辑界面。</p></li><li><p>在Form1.cs文件的开头，用下列导入命名空间代码替代系统缺省的导入命名空间代码。</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>ComponentModel</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Net</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>再把Visual Studio.Net的当前窗口切换到【Form1.cs（设计）】窗口，并从【工具箱】中的【Windows窗体组件】选项卡中往窗体中拖入下列组件：</p><p>四个Button组件；二个ListBox组件；四个TextBox组件；一个StatusBar组件；五个Label组件。并在四个Button组件拖入窗体后，分别在窗体设计界面中双击它们，则系统会在Form1.cs文件中分别产生这四个组件的Click事件对应的处理代码。</p></li><li><p>在【解决方案资源管理器】窗口中，双击Form1.cs文件，进入Form1.cs文件的编辑界面。以下面代码替代系统产生的InitializeComponent过程。下面代码是对上面添加的组件进行初始化：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listBox1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>ListBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>TextBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Label</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Label</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>TextBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>TextBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Label</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Label</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Label</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>TextBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>statusBar1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>StatusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>statusBarPanel1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>StatusBarPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>statusBarPanel2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>StatusBarPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Label</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listBox2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>ListBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>ISupportInitialize<span class="token punctuation">)</span>
    <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>statusBarPanel1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">BeginInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>ISupportInitialize<span class="token punctuation">)</span>
    <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>statusBarPanel2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">BeginInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">SuspendLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listBox1<span class="token punctuation">.</span>ItemHeight <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listBox1<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listBox1<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;listBox1&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listBox1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listBox1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox1<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox1<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;textBox1&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox1<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label3<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label3<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;label3&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label3<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label3<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label3<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;本地端口：&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label2<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label2<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;label2&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label2<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label2<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label2<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;远程端口号：&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox3<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">294</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox3<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;textBox3&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox3<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox3<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox3<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;8889&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button1<span class="token punctuation">.</span>FlatStyle <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>FlatStyle<span class="token punctuation">.</span>Flat<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button1<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">348</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button1<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;button1&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button1<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;连接远程机&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button1<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>button1_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox2<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox2<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;textBox2&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox2<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox2<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox2<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;8888&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label1<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label1<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;label1&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label1<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;远程IP地址：&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label4<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label4<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;label4&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label4<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label4<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">23</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label4<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;发送信息：&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label5<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label5<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;label5&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label5<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label5<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label5<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;发送的信息：&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button2<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button2<span class="token punctuation">.</span>FlatStyle <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>FlatStyle<span class="token punctuation">.</span>Flat<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button2<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">352</span><span class="token punctuation">,</span> <span class="token number">192</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button2<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;button2&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button2<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button2<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button2<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;断开连接&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button2<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>button2_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button3<span class="token punctuation">.</span>FlatStyle <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>FlatStyle<span class="token punctuation">.</span>Flat<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button3<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">348</span><span class="token punctuation">,</span> <span class="token number">74</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button3<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;button3&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button3<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button3<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button3<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;侦听端口&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button3<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>button3_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button4<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button4<span class="token punctuation">.</span>FlatStyle <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>FlatStyle<span class="token punctuation">.</span>Flat<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button4<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">350</span><span class="token punctuation">,</span> <span class="token number">132</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button4<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;button4&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button4<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button4<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button4<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;发送信息&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button4<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>button4_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox4<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox4<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;textBox4&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox4<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox4<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox4<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>statusBar1<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">301</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>statusBar1<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;statusBar1&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>statusBar1<span class="token punctuation">.</span>Panels<span class="token punctuation">.</span><span class="token function">AddRange</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>StatusBarPanel<span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>statusBarPanel1 <span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>statusBarPanel2<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>statusBar1<span class="token punctuation">.</span>ShowPanels <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>statusBar1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">456</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>statusBar1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>statusBarPanel1<span class="token punctuation">.</span>Width <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>statusBarPanel2<span class="token punctuation">.</span>Width <span class="token operator">=</span> <span class="token number">230</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label6<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label6<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;label6&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label6<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label6<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label6<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;接收信息：&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listBox2<span class="token punctuation">.</span>ItemHeight <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listBox2<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">,</span> <span class="token number">206</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listBox2<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;listBox2&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listBox2<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">214</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listBox2<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">27</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>AutoScaleBaseSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>ClientSize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">456</span><span class="token punctuation">,</span> <span class="token number">323</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">AddRange</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Control<span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>label6 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>listBox2 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>statusBar1 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>textBox4 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>button4 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>button3 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>button2 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>label5 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>label4 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>label2 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>textBox3 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>button1 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>textBox2 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>label1 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>label3 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>textBox1 <span class="token punctuation">,</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>listBox1<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>FormBorderStyle <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>FormBorderStyle<span class="token punctuation">.</span>
    FixedSingle<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>MaximizeBox <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Form1&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;Visual C＃实现网络点对点通讯程序&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>Load <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Form1_Load<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>ISupportInitialize<span class="token punctuation">)</span>
    <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>statusBarPanel1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">EndInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>ISupportInitialize<span class="token punctuation">)</span>
    <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>statusBarPanel2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">EndInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">ResumeLayout</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>至此，【Visual C＃实现网络点对点通讯程序】项目的界面设计和功能实现的前期工作就完成了，设计界面如图1所示：</p><p><img src="`+p+`" alt="图1 项目的设计界面"><br> 图1 项目的设计界面</p></li><li><p>在【解决方案资源管理器】窗口中，双击Form1.cs文件，进入Form1.cs文件的编辑界面。并在定义Form类成员代码区中，加入下列代码，下列代码的作用是定义程序中使用的全局变量。</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token class-name">Thread</span> th<span class="token punctuation">;</span>
<span class="token comment">//创建线程，用以侦听端口号，接收信息 </span>
<span class="token keyword">private</span> <span class="token class-name">TcpListener</span> tlListen1<span class="token punctuation">;</span>
<span class="token comment">//用以侦听端口号 </span>
<span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">bool</span></span> listenerRun <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token comment">//设定标示位，判断侦听状态 </span>
<span class="token keyword">private</span> <span class="token class-name">NetworkStream</span> tcpStream<span class="token punctuation">;</span>
<span class="token comment">//创建传送/接收的基本数据流实例 </span>
<span class="token keyword">private</span> <span class="token class-name">StreamWriter</span> reqStreamW<span class="token punctuation">;</span>
<span class="token comment">//用以实现向远程主机传送信息 </span>
<span class="token keyword">private</span> <span class="token class-name">TcpClient</span> tcpc<span class="token punctuation">;</span>
<span class="token comment">//用以创建对远程主机的连接 </span>
<span class="token keyword">private</span> <span class="token class-name">Socket</span> skSocket<span class="token punctuation">;</span>
<span class="token comment">//用以接收远程主机传送来的数据 </span>
</code></pre></div></li><li><p>用下列代码替换Form1.cs中的button1组件的&quot;Click&quot;事件对应的代码，下列代码的作用是向远程计算机提出连接申请，如果连接建立，则获得传送数据的数据源：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button1_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        tcpc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TcpClient</span><span class="token punctuation">(</span>textBox1<span class="token punctuation">.</span>Text<span class="token punctuation">,</span>
        Int32<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>textBox3<span class="token punctuation">.</span>Text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//向远程计算机提出连接申请 </span>
        tcpStream <span class="token operator">=</span> tcpc<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//如果连接申请建立，则获得用以传送数据的数据流 </span>
        statusBar1<span class="token punctuation">.</span>Panels<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;成功连接远程计算机！&quot;</span><span class="token punctuation">;</span>
        button2<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        button1<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        button4<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        statusBar1<span class="token punctuation">.</span>Panels<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;目标计算机拒绝连接请求！&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>在Form1.cs中的Main函数之后，添加下列代码，下面代码是定义一个名称为&quot;Listen&quot;的过程：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        tlListen1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TcpListener</span><span class="token punctuation">(</span>Int32<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>textBox2<span class="token punctuation">.</span>Text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        tlListen1<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//侦听指定端口号 </span>
        statusBar1<span class="token punctuation">.</span>Panels<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;正在监听...&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//接受远程计算机的连接请求，并获得用以接收数据的Socket实例 </span>
        skSocket <span class="token operator">=</span> tlListen1<span class="token punctuation">.</span><span class="token function">AcceptSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获得远程计算机对应的网络远程终结点 </span>
        <span class="token class-name">EndPoint</span> tempRemoteEP <span class="token operator">=</span> skSocket<span class="token punctuation">.</span>RemoteEndPoint<span class="token punctuation">;</span>
        <span class="token class-name">IPEndPoint</span> tempRemoteIP <span class="token operator">=</span> <span class="token punctuation">(</span>IPEndPoint<span class="token punctuation">)</span>tempRemoteEP<span class="token punctuation">;</span>
        <span class="token class-name">IPHostEntry</span> host <span class="token operator">=</span> Dns<span class="token punctuation">.</span>GetHostByAddress
        <span class="token punctuation">(</span>tempRemoteIP<span class="token punctuation">.</span>Address<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> HostName <span class="token operator">=</span> host<span class="token punctuation">.</span>HostName<span class="token punctuation">;</span>
        <span class="token comment">//根据获得的远程计算机对应的网络远程终结点获得远程计算机的名称 </span>
        statusBar1<span class="token punctuation">.</span>Panels<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;&#39;&quot;</span> <span class="token operator">+</span> HostName <span class="token operator">+</span> <span class="token string">&quot;&#39; &quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;远程计算机正确连接！&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//循环侦听 </span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>listenerRun<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">Byte<span class="token punctuation">[</span><span class="token punctuation">]</span></span> stream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Byte</span><span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">//定义从远程计算机接收到数据存放的数据缓冲区 </span>
            <span class="token class-name"><span class="token keyword">string</span></span> time <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//获得当前的时间 </span>
            <span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> skSocket<span class="token punctuation">.</span><span class="token function">ReceiveFrom</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span>
            <span class="token keyword">ref</span> tempRemoteEP<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//接收数据，并存放到定义的缓冲区中 </span>
            <span class="token class-name"><span class="token keyword">string</span></span> sMessage <span class="token operator">=</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span>
            <span class="token function">GetString</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//以指定的编码，从缓冲区中解析出内容 </span>
            listBox2<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>time <span class="token operator">+</span> <span class="token string">&quot;&quot;</span> <span class="token operator">+</span> HostName <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            listBox2<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>sMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//显示接收到的数据 </span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>SecurityException</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;防火墙安全错误！&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;错误&quot;</span><span class="token punctuation">,</span>
        MessageBoxButtons<span class="token punctuation">.</span>OK<span class="token punctuation">,</span> MessageBoxIcon<span class="token punctuation">.</span>Exclamation<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>用下列代码替换Form1.cs中的button2组件的Click事件对应的处理代码，下列代码的作用是断开当前的连接：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button2_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    listenerRun <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    tcpc<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    statusBar1<span class="token punctuation">.</span>Panels<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;断开连接！&quot;</span><span class="token punctuation">;</span>
    button1<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    button2<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    button4<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>用下列代码替换Form1.cs中的button3组件的Click事件对应的处理代码，下列代码的作用是以上面定义的Listen过程来初始化线程实例，并启动线程，达到侦听端口的目的：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button3_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    th <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ThreadStart</span><span class="token punctuation">(</span>Listen<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//以Listen过程来初始化线程实例 </span>
    th<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//启动此线程 </span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>用下列代码替换Form1.cs中的button4组件的Click事件对应的处理代码，下列代码的作用是向远程计算机的指定端口号发送信息。</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button4_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">string</span></span> sMsg <span class="token operator">=</span> textBox4<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> MyName <span class="token operator">=</span> Dns<span class="token punctuation">.</span><span class="token function">GetHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//以特定的编码往向数据流中写入数据, </span>
        <span class="token comment">//默认为UTF8Encoding 的实例 </span>
        reqStreamW <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamWriter</span><span class="token punctuation">(</span>tcpStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//将字符串写入数据流中 </span>
        reqStreamW<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>sMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//清理当前编写器的所有缓冲区，并使所有缓冲数据写入基础流 </span>
        reqStreamW<span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> time <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//显示传送的数据和时间 </span>
        listBox1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>time <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> MyName <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        listBox1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>sMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        textBox4<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//异常处理 </span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        statusBar1<span class="token punctuation">.</span>Panels<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;无法发送信息到目标计算机！&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>用下列代码替换Form1.cs中的&quot;Dispose&quot;过程对应的处理代码，下列代码的作用是在程序退出后，清除没有回收的资源：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">bool</span></span> disposing<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        listenerRun <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        th<span class="token punctuation">.</span><span class="token function">Abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        th <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        tlListen1<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        skSocket<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        tcpc<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>disposing<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>components <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            components<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span>disposing<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>运行程序，实现网络点对点通讯：</p><p>单击快捷键F5编译成功后，把此程序分发到网络中的二台计算机中。在正确输入侦听端口号、远程计算机IP地址、远程端口号输入正确后，单击【侦听端口】和【连接远程机】按钮建立聊天的连接。就通过【发送信息】按钮进行聊天了。图2是通讯时运行界面。</p><p><img src="`+o+`" alt="图2 运行界面"><br> 图2 运行界面</p></li></ol><h2 id="五-总结" tabindex="-1"><a class="header-anchor" href="#五-总结" aria-hidden="true">#</a> 五．总结</h2><p>网络点对点通讯程序并不像客户端/服务器端模型程序那样，分成客户端程序和服务器端程序。它是集客户端程序和服务器端程序与一身，所以在具体的程序设计中就相对麻烦一点。上面介绍的在用Visual C＃实现网络点对点通讯的示例虽然结构并不复杂，但涉及的知识面却比较广泛。如示例中涉及到许多很多网络功能的实现，如：侦听端口号、建立连接、发送数据和接收数据等，还涉及到线程的处理、资源的回收等。了解、掌握这些问题的处理方法对编写更复杂的网络应用程序是十分必要的。</p><hr><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Net</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token class-name">Thread</span> th<span class="token punctuation">;</span> <span class="token comment">//创建线程，用以侦听端口号，接收信息</span>
<span class="token keyword">private</span> <span class="token class-name">TcpListener</span> tlListen1<span class="token punctuation">;</span> <span class="token comment">//用以侦听端口号</span>
<span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">bool</span></span> listenerRun <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//设定标示位，判断侦听状态</span>
<span class="token keyword">private</span> <span class="token class-name">NetworkStream</span> tcpStream<span class="token punctuation">;</span> <span class="token comment">//创建传送/接收的基本数据流实例</span>
<span class="token keyword">private</span> <span class="token class-name">StreamWriter</span> reqStreamW<span class="token punctuation">;</span> <span class="token comment">//用以实现向远程主机传送信息</span>
<span class="token keyword">private</span> <span class="token class-name">TcpClient</span> tcpc<span class="token punctuation">;</span> <span class="token comment">//用以创建对远程主机的连接</span>
<span class="token keyword">private</span> <span class="token class-name">Socket</span> skSocket<span class="token punctuation">;</span><span class="token comment">//用以接收远程主机传送来的数据</span>

<span class="token comment">// 清理所有正在使用的资源</span>
<span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">bool</span></span> disposing<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        listenerRun <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        th<span class="token punctuation">.</span><span class="token function">Abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        th <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        tlListen1<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        skSocket<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        tcpc<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//连接远程机</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button1_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        tcpc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TcpClient</span><span class="token punctuation">(</span>textBox1<span class="token punctuation">.</span>Text<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>textBox2<span class="token punctuation">.</span>Text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//向远程计算机提出连接申请</span>
        tcpStream <span class="token operator">=</span> tcpc<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//如果连接申请建立，则获得用以传送数据的数据流</span>
        statusBar1<span class="token punctuation">.</span>Panels<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;成功连接远程计算机！&quot;</span><span class="token punctuation">;</span>
        button2<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        button1<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        button4<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        statusBar1<span class="token punctuation">.</span>Panels<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;目标计算机拒绝连接请求！&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//侦听方法</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        tlListen1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TcpListener</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>textBox3<span class="token punctuation">.</span>Text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        tlListen1<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//侦听指定端口号 </span>
        statusBar1<span class="token punctuation">.</span>Panels<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;正在监听...&quot;</span><span class="token punctuation">;</span>
        skSocket <span class="token operator">=</span> tlListen1<span class="token punctuation">.</span><span class="token function">AcceptSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//接受远程机的连接请求，并获得用以接收数据的Socket实例 </span>

        <span class="token class-name">EndPoint</span> tempRemoteEP <span class="token operator">=</span> skSocket<span class="token punctuation">.</span>RemoteEndPoint<span class="token punctuation">;</span><span class="token comment">//获得远程计算机对应的网络远程终结点</span>
        <span class="token class-name">IPEndPoint</span> tempRemoteIP <span class="token operator">=</span> <span class="token punctuation">(</span>IPEndPoint<span class="token punctuation">)</span>tempRemoteEP<span class="token punctuation">;</span>
        <span class="token class-name">IPHostEntry</span> host <span class="token operator">=</span> Dns<span class="token punctuation">.</span><span class="token function">GetHostByAddress</span><span class="token punctuation">(</span>tempRemoteIP<span class="token punctuation">.</span>Address<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> HostName <span class="token operator">=</span> host<span class="token punctuation">.</span>HostName<span class="token punctuation">;</span><span class="token comment">//根据获得的远程机的网络远程终结点获得远程计算机的名称 </span>
        statusBar1<span class="token punctuation">.</span>Panels<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;&#39;&quot;</span> <span class="token operator">+</span> HostName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;远程计算机正确连接！&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>listenerRun<span class="token punctuation">)</span> <span class="token comment">//循环侦听</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">Byte<span class="token punctuation">[</span><span class="token punctuation">]</span></span> stream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Byte</span><span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//定义从远程计算机接收到数据存放的数据缓冲区</span>
            <span class="token class-name"><span class="token keyword">string</span></span> time <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获得当前的时间</span>
            <span class="token comment">//接收数据，并存放到定义的缓冲区中</span>
            <span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> skSocket<span class="token punctuation">.</span><span class="token function">ReceiveFrom</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span> <span class="token keyword">ref</span> tempRemoteEP<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//以指定的编码，从缓冲区中解析出内容</span>
            <span class="token class-name"><span class="token keyword">string</span></span> sMessage <span class="token operator">=</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
            listBox2<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;(&quot;</span> <span class="token operator">+</span> time <span class="token operator">+</span> <span class="token string">&quot;) &quot;</span> <span class="token operator">+</span> HostName <span class="token operator">+</span> <span class="token string">&quot;：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            listBox2<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>sMessage<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//显示接收到的数据</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>SecurityException</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;防火墙安全错误！&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;错误&quot;</span><span class="token punctuation">,</span> MessageBoxButtons<span class="token punctuation">.</span>OK<span class="token punctuation">,</span> MessageBoxIcon<span class="token punctuation">.</span>Exclamation<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//侦听端口</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button2_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    th <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ThreadStart</span><span class="token punctuation">(</span>Listen<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//以Listen过程来初始化线程实例</span>
    th<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//启动此线程</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>button2<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//发送信息</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button3_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">string</span></span> sMsg <span class="token operator">=</span> textBox4<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> MyName <span class="token operator">=</span> Dns<span class="token punctuation">.</span><span class="token function">GetHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//以特定的编码往向数据流中写入数据,默认为UTF8Encoding 的实例</span>
        reqStreamW <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamWriter</span><span class="token punctuation">(</span>tcpStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
        reqStreamW<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>sMsg<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将字符串写入数据流中</span>
        reqStreamW<span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//清理当前编写器的所有缓冲区，并使所有缓冲数据写入基础流</span>
        <span class="token class-name"><span class="token keyword">string</span></span> time <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        listBox1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;(&quot;</span> <span class="token operator">+</span> time <span class="token operator">+</span> <span class="token string">&quot;) &quot;</span> <span class="token operator">+</span> MyName <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//显示传送的数据和时间</span>
        listBox1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>sMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        textBox4<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token comment">//异常处理</span>
    <span class="token punctuation">{</span>
        statusBar1<span class="token punctuation">.</span>Panels<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;无法发送信息到目标计算机！&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//断开连接</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button4_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    listenerRun <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    tcpc<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    statusBar1<span class="token punctuation">.</span>Panels<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;断开连接！&quot;</span><span class="token punctuation">;</span>
    button1<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    button2<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    button4<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,21),u=[e];function l(k,i){return s(),a("div",null,u)}const m=n(c,[["render",l],["__file","netsoc4.html.vue"]]);export{m as default};
