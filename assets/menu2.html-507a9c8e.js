import{_ as n,o as s,c as a,a as t}from"./app-a2b6e588.js";const p={},o=t(`<h1 id="用c-和vb-net实现officexp风格的菜单" tabindex="-1"><a class="header-anchor" href="#用c-和vb-net实现officexp风格的菜单" aria-hidden="true">#</a> 用C#和VB.NET实现OfficeXP风格的菜单</h1><p>VS.NET或Office XP中的菜单都是非常漂亮的，反正我很喜欢。可惜VS.NET没有带制作这种菜单的控件或组件，不知正式版本会不会提供一个模板和向导。至今还记得刚学计算机语言时自己用Turbo C制作菜单的感受，那些矩形框函数和象素操作的确很迷人，况且那时是如此的流行菜单。</p><p>这篇文章中我会介绍有关在Framework SDK Beta 2 中制作自己风格的菜单，所以你最好已安装了Framework SDK Beta 2，VS.NET Beta 2 不一定是必须的。附带的Zip包中的例子都是VS.NET Project的。</p><p>整个的文章包括三部分：</p><p>开始我会涉及到在Winform中最基本的一些菜单的概念。</p><p>然后会有一个以前接触过的有关菜单的例子，它是For Beta 1的。老实说我没有想到Beta1 到Beta2有许多函数和命名空间发生了变化，以前我在Beta1中测试过这个例子，很顺利。这次在Beta2中会有许多错误，我提供了两个Project，一个是原来的Project的，一个是我修改后For Beta 2的。这种移植很枯燥，但可以很快熟悉新的Beta2的类库和函数，Show出来的菜单还不错，感觉是Office2000风格的菜单。如果你有兴趣可以试一试这个过程，会获益非浅的，这个例子还包括按钮的，原来的作者其实是在Demo控件的“Owner-drawn menus”技术；不过我只对菜单部分感兴趣。</p><p>最后一部分是制作VS.NET或XP风格的例子，上面那个例子的效果不能使我完全满意，然后我重新写了另外一个，不过我对最后的结果还不是很满意，因为我的没有上一个例子那么完整，例子中我只显示了这个风格的菜单，对于事件响应、状态栏更新、tooltips、菜单的状态（enabled state）等处理都没有考虑，我把这些归结为时间问题，并承诺自己下次把它做得更好。</p><p>1．Framework SDK Beta 2中菜单分成两类一类是普通的菜单叫：MainMenu，在VS.NET的Toolsbox中有这样一个对应的菜单控件，拖下它到你的窗体中，设置一下属性就可以所见所得了，这个版本的比VS.Studio98 系列的要好用和漂亮的多。另一类叫：ContextMenu菜单，也就是常用的弹出菜单。对于VB6来说所有的普通菜单在VS.NET中是可以兼容和自动升级成MainMenu类型的菜单，但对于PopMenu的菜单是不能转换成ContextMenu类型的菜单，你必须自己重新修改代码实现。这里我们主要是针对MainMenu的，其实原理一样。</p><p>最简单的菜单你可以这样做：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">frmVB6</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Form</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">MainMenu</span> muMain <span class="token punctuation">;</span> <span class="token comment">// MainMenu</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> Args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Application<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">frmVB6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">frmVB6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// The following code sets up the form properties.</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;Form1&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Height <span class="token operator">=</span> <span class="token number">213</span> <span class="token operator">+</span> SystemInformation<span class="token punctuation">.</span>CaptionHeight<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Width <span class="token operator">=</span> <span class="token number">312</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>StartPosition <span class="token operator">=</span> FormStartPosition<span class="token punctuation">.</span>WindowsDefaultLocation<span class="token punctuation">;</span>

        <span class="token class-name">MenuItem</span> mItemFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MenuItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mItemFile<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;&amp;File&quot;</span><span class="token punctuation">;</span>

        <span class="token class-name">MenuItem</span> mItemExit <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MenuItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mItemExit<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;E&amp;xit&quot;</span><span class="token punctuation">;</span>

        muMain <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MainMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        muMain<span class="token punctuation">.</span>MenuItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>mItemFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        muMain<span class="token punctuation">.</span>MenuItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>mItemExit<span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token keyword">this</span><span class="token punctuation">.</span>Menu <span class="token operator">=</span> muMain<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>手工方式保存它为一个.cs文件然后在编译它：</p><p><code>csc /t:winexe /r:System.dll /r:System.Windows.Forms.Dll /r:System.Drawing.Dll Form1Menu.cs</code></p><p>VS.NET下只用New一个新的WinForm项目，然后在默认窗体中放入MainMenu控件，然后设置完属性，F5就可以了,完全不用一行代码。</p><p>如果要生成一个主菜单和一个菜单的子菜单项目，主要是MenuItems.AddRange的方法，看下面的代码：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">this</span><span class="token punctuation">.</span>mainMenu1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MainMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MenuItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MenuItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MenuItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MenuItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// mainMenu1</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>mainMenu1<span class="token punctuation">.</span>MenuItems<span class="token punctuation">.</span><span class="token function">AddRange</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MenuItem<span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>menuItem1<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>menuItem2<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// menuItem1</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem1<span class="token punctuation">.</span>Index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem1<span class="token punctuation">.</span>MenuItems<span class="token punctuation">.</span><span class="token function">AddRange</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MenuItem<span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>menuItem3<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>menuItem4<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem1<span class="token punctuation">.</span>Index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem1<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;&amp;File&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// menuItem2</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem2<span class="token punctuation">.</span>Index <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem2<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;Help&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// menuItem3</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem3<span class="token punctuation">.</span>Index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem3<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;Open&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem3<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>menuItem3_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// menuItem4</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem4<span class="token punctuation">.</span>Index <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem4<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;Exit&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>menuItem4<span class="token punctuation">.</span>Click <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>menuItem4_Click<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">this</span><span class="token punctuation">.</span>Menu <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainMenu1<span class="token punctuation">;</span>
</code></pre></div><p>如代码所示MenuItem1(File)和MenuItem2(Help)被AddRange到MainMenu1中成为了顶级的菜单，MenuItem3(Open)和MenuItem4(Exit)被AddRange到MenuItem1(File)中成为了File菜单下的子菜单项。</p><p><code>this.menuItem3.Click += new System.EventHandler(this.menuItem3_Click);</code>表明MenuItem3点击时激发的事件处理程序，一般的事件处理程序象下面这样：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">menuItem3_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    MessageBox<span class="token punctuation">.</span>Show <span class="token punctuation">(</span><span class="token string">&quot; My Click Open&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>我们关心的其实是MenuItem，让它用我们的方式画出有VS.NET或XP风格的菜单就可以了，更简单的说就是实现一个MenuItem的继承类，扩展它Draw的部分。好吧，让我们深入一点看看第二部分。</p><p>2．“Owner-drawn menus”技术</p><p>这个例子是VB.NET语法的.我去掉了和Menu无关的Class，原因是错误太多，你会遇到类库和命名空间的移植性的问题：</p><p>最多的是Beta1 System.WinForms 和Beta 2 的System.Windows.Froms的命名空间问题；</p><p>然后是Beta1中的BitAnd 、BitOR等等Bitxxx的函数在Beta2中已去掉了Bit又和VB中一样了（据说Beta1的这项改动遭到了总多VB Fans的投诉，说不能把VB也C＃化，Bit是什么东东）,这样你需要把这类函数改掉；</p><p>然后是NameObjectCollectionBase从原来的system.collections中删除了，Beta2放在system.collections.specialized 中，真的有些昏倒，开始我还以为Beta2中删除了这个类。</p><p>最后是一些Overrides和 Overloads的问题，具体的看VS.NET或Framework SDK Beta 2编译时的提示就可以了，这方面MS做得不错，Task list中告诉你具体得建议，照做就是了。</p><p>具体一点你可以在Framework SDK Beta 2安装目录的Doc目录中找到这两个文件，这是从Beta1移植到Beta2上不错的指导文件：APIChangesBeta1toBeta2.htm 和Change List - Beta1 to Beta2.doc 特别是这个doc文件洋洋洒洒90多页，但很有帮助。</p><p>希望你还能在排除所有的错误之后保持清醒，找到最核心有用的代码，来分析。主要是CActionMenu.vb，焦点在OnMeasureItem和OnDrawItem这两个函数或说事件处理程序上。OnMeasureItem主要是处理MenuItem的ItemHeight和ItemWidth的，从它传的MeasureItemEventArgs参数数就知道。OnDrawItem主要是如何画菜单的问题。关键字Overrides表明我们要在子类中重新定义MenuItem中的这两个方法。</p><p>从56行到58行是OnMeasureItem函数：</p><div class="language-vb" data-ext="vb"><pre class="language-vb"><code><span class="token keyword">Protected</span> <span class="token keyword">Overrides</span> <span class="token keyword">Sub</span> OnMeasureItem<span class="token punctuation">(</span><span class="token keyword">ByVal</span> e <span class="token keyword">As</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MeasureItemEventArgs<span class="token punctuation">)</span>
<span class="token keyword">If</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>Action<span class="token punctuation">.</span>Caption <span class="token operator">=</span> <span class="token string">&quot;-&quot;</span> <span class="token keyword">Then</span>
e<span class="token punctuation">.</span>ItemHeight <span class="token operator">=</span> <span class="token number">5</span>
<span class="token keyword">Else</span>
e<span class="token punctuation">.</span>ItemHeight <span class="token operator">=</span> <span class="token number">20</span>
<span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token keyword">Dim</span> fs <span class="token keyword">As</span> FontStyle
<span class="token keyword">If</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>DefaultItem <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token keyword">Then</span> fs <span class="token operator">=</span> fs <span class="token keyword">Or</span> FontStyle<span class="token punctuation">.</span>Bold
<span class="token keyword">Dim</span> fnt <span class="token keyword">As</span> <span class="token keyword">New</span> Font<span class="token punctuation">(</span><span class="token string">&quot;Tahoma&quot;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> fs<span class="token punctuation">)</span>
<span class="token keyword">Dim</span> sf <span class="token keyword">As</span> SizeF <span class="token operator">=</span> e<span class="token punctuation">.</span>Graphics<span class="token punctuation">.</span>MeasureString<span class="token punctuation">(</span><span class="token keyword">Me</span><span class="token punctuation">.</span>Action<span class="token punctuation">.</span>Caption<span class="token punctuation">,</span> fnt<span class="token punctuation">)</span>
fnt<span class="token punctuation">.</span>Dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
e<span class="token punctuation">.</span>ItemWidth <span class="token operator">=</span> <span class="token keyword">CInt</span><span class="token punctuation">(</span>sf<span class="token punctuation">.</span>Width<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">20</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span>
</code></pre></div><p>MeasureItemEventArgs提供4个属性Graphis、Index、ItemHeight和ItemWidth。Me相当于C＃或Java的this关键字。fnt.Dispose()中Dispose是一个很有意思的函数调用，在以往的Windows编程中象字体、画笔等许多资源都希望快使用快释放，这个语句是用来控制GC（garbage collection）的，意思是我已使用完了这个设备或资源，GC你可以收回了。</p><p>从70到146行是有关OnItemDraw函数的：</p><div class="language-vb" data-ext="vb"><pre class="language-vb"><code><span class="token keyword">Protected</span> <span class="token keyword">Overrides</span> <span class="token keyword">Sub</span> OnDrawItem<span class="token punctuation">(</span><span class="token keyword">ByVal</span> e <span class="token keyword">As</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>DrawItemEventArgs<span class="token punctuation">)</span>
<span class="token comment">&#39; colors, fonts</span>
<span class="token keyword">Dim</span> clrBgIcon<span class="token punctuation">,</span> clrBgText<span class="token punctuation">,</span> clrText <span class="token keyword">As</span> Color<span class="token punctuation">,</span> fs <span class="token keyword">As</span> FontStyle<span class="token punctuation">,</span> fnt <span class="token keyword">As</span> Font
<span class="token keyword">Dim</span> b <span class="token keyword">As</span> SolidBrush<span class="token punctuation">,</span> p <span class="token keyword">As</span> Pen
<span class="token keyword">Dim</span> fEnabled <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> <span class="token keyword">Not</span> <span class="token keyword">CType</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>State <span class="token keyword">And</span> DrawItemState<span class="token punctuation">.</span>Disabled<span class="token punctuation">,</span> <span class="token keyword">Boolean</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> fSelected <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> <span class="token keyword">CType</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>State <span class="token keyword">And</span> DrawItemState<span class="token punctuation">.</span>Selected<span class="token punctuation">,</span> <span class="token keyword">Boolean</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> fDefault <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> <span class="token keyword">CType</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>State <span class="token keyword">And</span> DrawItemState<span class="token punctuation">.</span><span class="token keyword">Default</span><span class="token punctuation">,</span> <span class="token keyword">Boolean</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> fBreak <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">Me</span><span class="token punctuation">.</span>Action<span class="token punctuation">.</span>Caption <span class="token operator">=</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">If</span> fEnabled <span class="token keyword">And</span> fSelected <span class="token keyword">And</span> <span class="token keyword">Not</span> fBreak <span class="token keyword">Then</span>
clrBgIcon <span class="token operator">=</span> Color<span class="token punctuation">.</span>Silver
clrBgText <span class="token operator">=</span> Color<span class="token punctuation">.</span>White
clrText <span class="token operator">=</span> Color<span class="token punctuation">.</span>Blue
fs <span class="token operator">=</span> fs <span class="token keyword">Or</span> FontStyle<span class="token punctuation">.</span>Underline
<span class="token keyword">Else</span>
clrBgIcon <span class="token operator">=</span> Color<span class="token punctuation">.</span>Gray
clrBgText <span class="token operator">=</span> Color<span class="token punctuation">.</span>Silver
clrText <span class="token operator">=</span> Color<span class="token punctuation">.</span>Black
<span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token keyword">If</span> <span class="token keyword">Not</span> fEnabled <span class="token keyword">Then</span>
clrText <span class="token operator">=</span> Color<span class="token punctuation">.</span>White
<span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token keyword">If</span> fDefault <span class="token keyword">Then</span>
fs <span class="token operator">=</span> fs <span class="token keyword">Or</span> FontStyle<span class="token punctuation">.</span>Bold
<span class="token keyword">End</span> <span class="token keyword">If</span>

fnt <span class="token operator">=</span> <span class="token keyword">New</span> Font<span class="token punctuation">(</span><span class="token string">&quot;Tahoma&quot;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> fs<span class="token punctuation">)</span>
<span class="token comment">&#39; total background (partly to remain for icon)</span>
b <span class="token operator">=</span> <span class="token keyword">New</span> SolidBrush<span class="token punctuation">(</span>clrBgIcon<span class="token punctuation">)</span>
e<span class="token punctuation">.</span>Graphics<span class="token punctuation">.</span>FillRegion<span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token keyword">New</span> [Region]<span class="token punctuation">(</span>e<span class="token punctuation">.</span>Bounds<span class="token punctuation">)</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span>Dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">&#39; icon?</span>
<span class="token keyword">If</span> <span class="token keyword">Not</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>Action<span class="token punctuation">.</span>ActionList <span class="token keyword">Is</span> <span class="token boolean">Nothing</span> <span class="token keyword">Then</span>
<span class="token keyword">Dim</span> il <span class="token keyword">As</span> ImageList <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>Action<span class="token punctuation">.</span>ActionList<span class="token punctuation">.</span>ImageList
<span class="token keyword">If</span> <span class="token keyword">Not</span> il <span class="token keyword">Is</span> <span class="token boolean">Nothing</span> <span class="token keyword">Then</span>
<span class="token keyword">Dim</span> index <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>Action<span class="token punctuation">.</span>Image
<span class="token keyword">If</span> index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">And</span> index <span class="token operator">&lt;</span> il<span class="token punctuation">.</span>Images<span class="token punctuation">.</span>Count <span class="token keyword">Then</span>
<span class="token keyword">Dim</span> rect <span class="token keyword">As</span> Rectangle <span class="token operator">=</span> e<span class="token punctuation">.</span>Bounds
<span class="token keyword">With</span> rect
<span class="token punctuation">.</span>X <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">2</span>
<span class="token punctuation">.</span>Y <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">2</span>
<span class="token punctuation">.</span>Width <span class="token operator">=</span> <span class="token number">16</span>
<span class="token punctuation">.</span>Height <span class="token operator">=</span> <span class="token number">16</span>
<span class="token keyword">End</span> <span class="token keyword">With</span>
e<span class="token punctuation">.</span>Graphics<span class="token punctuation">.</span>DrawImage<span class="token punctuation">(</span>il<span class="token punctuation">.</span>Images<span class="token punctuation">.</span>Item<span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span> rect<span class="token punctuation">)</span>
<span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token keyword">End</span> <span class="token keyword">If</span>

<span class="token comment">&#39; text background</span>
<span class="token keyword">Dim</span> rf <span class="token keyword">As</span> RectangleF
<span class="token keyword">With</span> rf
<span class="token punctuation">.</span>X <span class="token operator">=</span> <span class="token number">18</span>
<span class="token punctuation">.</span>Y <span class="token operator">=</span> e<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Y
<span class="token punctuation">.</span>Width <span class="token operator">=</span> e<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Width <span class="token operator">-</span> <span class="token punctuation">.</span>X
<span class="token punctuation">.</span>Height <span class="token operator">=</span> e<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Height
<span class="token keyword">End</span> <span class="token keyword">With</span>

b <span class="token operator">=</span> <span class="token keyword">New</span> SolidBrush<span class="token punctuation">(</span>clrBgText<span class="token punctuation">)</span>
e<span class="token punctuation">.</span>Graphics<span class="token punctuation">.</span>FillRegion<span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token keyword">New</span> [Region]<span class="token punctuation">(</span>rf<span class="token punctuation">)</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span>Dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">&#39; text/line</span>
rf<span class="token punctuation">.</span>Y <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">3</span> <span class="token punctuation">:</span> rf<span class="token punctuation">.</span>Height <span class="token operator">-</span><span class="token operator">=</span> <span class="token number">3</span>
<span class="token keyword">If</span> <span class="token keyword">Not</span> fBreak <span class="token keyword">Then</span>
b <span class="token operator">=</span> <span class="token keyword">New</span> SolidBrush<span class="token punctuation">(</span>clrText<span class="token punctuation">)</span>
e<span class="token punctuation">.</span>Graphics<span class="token punctuation">.</span>DrawString<span class="token punctuation">(</span><span class="token keyword">Me</span><span class="token punctuation">.</span>Action<span class="token punctuation">.</span>Caption<span class="token punctuation">,</span> fnt<span class="token punctuation">,</span> b<span class="token punctuation">,</span> rf<span class="token punctuation">)</span>
fnt<span class="token punctuation">.</span>Dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span>Dispose<span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">Else</span>
p <span class="token operator">=</span> <span class="token keyword">New</span> Pen<span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Black<span class="token punctuation">)</span>
rf<span class="token punctuation">.</span>Y <span class="token operator">-</span><span class="token operator">=</span> <span class="token number">1</span>
e<span class="token punctuation">.</span>Graphics<span class="token punctuation">.</span>DrawLine<span class="token punctuation">(</span>p<span class="token punctuation">,</span> rf<span class="token punctuation">.</span>X<span class="token punctuation">,</span> rf<span class="token punctuation">.</span>Y<span class="token punctuation">,</span> rf<span class="token punctuation">.</span>Right<span class="token punctuation">,</span> rf<span class="token punctuation">.</span>Y<span class="token punctuation">)</span>
p<span class="token punctuation">.</span>Dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token comment">&#39; border</span>
<span class="token keyword">If</span> fEnabled <span class="token keyword">And</span> fSelected <span class="token keyword">And</span> <span class="token keyword">Not</span> fBreak <span class="token keyword">Then</span>
p <span class="token operator">=</span> <span class="token keyword">New</span> Pen<span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Black<span class="token punctuation">)</span>
e<span class="token punctuation">.</span>Graphics<span class="token punctuation">.</span>DrawRectangle<span class="token punctuation">(</span>p<span class="token punctuation">,</span> e<span class="token punctuation">.</span>Bounds<span class="token punctuation">)</span>
p<span class="token punctuation">.</span>Dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span>
</code></pre></div><p>DrawItemEventArgs参数给了你和菜单相关的所有环境和信息，它包括6个属性：Bounds、Font、ForeColor、Graphics、Index、States。如果你以前用过Windows下的GDI函数，那一定很熟悉这些函数，不是很复杂只需要你一点点算术知识和美术观点就可以了，如果你是第一次那么在纸上画几个矩形块就可以了理解和做的很好，比起以前TC下的菜单编程容易得多。主要是作者是如何把Icon画在菜单上的，然后是根据不同的States表现一下菜单的ForeColor, Bounds就是菜单项最前面的表示选中等等的小方块。</p><p>好了第二部分涉及到了大部分技术细节了，这里你需要关注的是，如何画出来，下一部分我们来看如何画的好看些，象VS.NET或Office XP那样子。</p><p>3.“MenuItemStyle”接口和VS.NET风格的菜单项</p><p>这个Project又将切换到C＃语言。我是这样想的：先针对普通菜单、Office200风格、VS.NET风格三种情况定义一个统一的接口（interface），其中包括画Icon（DrawIcon）、画分割条（DrawSeparator）、画菜单背景（DrawBackground）、写菜单项的文字（DrawMenuText）等功能；普通、Office2000和VS.NET根据各自不同的情况实现这个接口的Drawxxx的功能。然后从MenuItem继承一个子类，象第二部分讲的那样Overrides 菜单项的两个函数：OnMeasureItem和OnDrawItem，根据不同的风格调用上面实现的接口中的DrawXXX函数就可以了。最后我把这部分都分隔出来放在一个.CS文件中，单独编译成一个VSNET.Menu.DLL，你只用using VSNET.Menu ; 然后就可以象在第一部分那样象使用普通的MenuItem那样来用了，Demo源代码中你还可以看到我定义了IconMenuItem的类，它有一个方法：MenuItemCreator（VSNET.Menu.IconMenuStyle sType , String sText , Bitmap bmp , System.EventHandler eh）可以完成生成需要的MenuItem。本来我想用资源文件或将图片Icon等资源放在一个专门的文件中，然后由这个类来负责从资源文件或外部的类中获得资源CreateMenuItem。但是是第一版，你会看到例程中我仍然用原始的New Bitmap（）的方式直接从硬盘拿资源。当我看到它show出来时，先是很开心，然后发现还有许多要改进，想想其实做一个专业的菜单也需要花许多心思。</p><p>好吧让我们看一下有关VS.NET风格菜单项这部分主要的实现代码：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VSNetStyle</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MenuItemStyleDrawer</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">Color</span> bgcolor <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">FromArgb</span><span class="token punctuation">(</span><span class="token number">246</span><span class="token punctuation">,</span> <span class="token number">246</span><span class="token punctuation">,</span> <span class="token number">246</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name">Color</span> ibgcolor <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">FromArgb</span><span class="token punctuation">(</span><span class="token number">202</span><span class="token punctuation">,</span> <span class="token number">202</span><span class="token punctuation">,</span> <span class="token number">202</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name">Color</span> sbcolor <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">FromArgb</span><span class="token punctuation">(</span><span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">209</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name">Color</span> sbbcolor <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">FromArgb</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">int</span></span> TEXTSTART <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DrawCheckmark</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> g<span class="token punctuation">,</span> <span class="token class-name">Rectangle</span> bounds<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> selected<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        ControlPaint<span class="token punctuation">.</span><span class="token function">DrawMenuGlyph</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rectangle</span><span class="token punctuation">(</span>bounds<span class="token punctuation">.</span>X <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Y <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span> MenuGlyph<span class="token punctuation">.</span>Checkmark<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DrawIcon</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> g<span class="token punctuation">,</span> <span class="token class-name">Image</span> icon<span class="token punctuation">,</span> <span class="token class-name">Rectangle</span> bounds<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> selected<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> enabled<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> ischecked<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>enabled<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>selected<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                ControlPaint<span class="token punctuation">.</span><span class="token function">DrawImageDisabled</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> icon<span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Left <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Top <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Black<span class="token punctuation">)</span><span class="token punctuation">;</span>
                g<span class="token punctuation">.</span><span class="token function">DrawImage</span><span class="token punctuation">(</span>icon<span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Top <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                g<span class="token punctuation">.</span><span class="token function">DrawImage</span><span class="token punctuation">(</span>icon<span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Left <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Top <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
            ControlPaint<span class="token punctuation">.</span><span class="token function">DrawImageDisabled</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> icon<span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Left <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Top <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> SystemColors<span class="token punctuation">.</span>HighlightText<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DrawSeparator</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> g<span class="token punctuation">,</span> <span class="token class-name">Rectangle</span> bounds<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">int</span></span> y <span class="token operator">=</span> bounds<span class="token punctuation">.</span>Y <span class="token operator">+</span> bounds<span class="token punctuation">.</span>Height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        g<span class="token punctuation">.</span><span class="token function">DrawLine</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Pen</span><span class="token punctuation">(</span>SystemColors<span class="token punctuation">.</span>ControlDark<span class="token punctuation">)</span><span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>X <span class="token operator">+</span> SystemInformation<span class="token punctuation">.</span>SmallIconSize<span class="token punctuation">.</span>Width <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>X <span class="token operator">+</span> bounds<span class="token punctuation">.</span>Width <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DrawBackground</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> g<span class="token punctuation">,</span> <span class="token class-name">Rectangle</span> bounds<span class="token punctuation">,</span> <span class="token class-name">DrawItemState</span> state<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> toplevel<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> hasicon<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">bool</span></span> selected <span class="token operator">=</span> <span class="token punctuation">(</span>state <span class="token operator">&amp;</span> DrawItemState<span class="token punctuation">.</span>Selected<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>selected <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>state <span class="token operator">&amp;</span> DrawItemState<span class="token punctuation">.</span>HotLight<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>toplevel <span class="token operator">&amp;&amp;</span> selected<span class="token punctuation">)</span>
            <span class="token punctuation">{</span> <span class="token comment">// draw toplevel, selected menuitem</span>
                g<span class="token punctuation">.</span><span class="token function">FillRectangle</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SolidBrush</span><span class="token punctuation">(</span>ibgcolor<span class="token punctuation">)</span><span class="token punctuation">,</span> bounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
                ControlPaint<span class="token punctuation">.</span><span class="token function">DrawBorder3D</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Left<span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Top<span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Height<span class="token punctuation">,</span> Border3DStyle<span class="token punctuation">.</span>Flat<span class="token punctuation">,</span> Border3DSide<span class="token punctuation">.</span>Top <span class="token operator">|</span> Border3DSide<span class="token punctuation">.</span>Left <span class="token operator">|</span> Border3DSide<span class="token punctuation">.</span>Right<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span> <span class="token comment">// draw menuitem, selected OR toplevel, hotlighted</span>
                g<span class="token punctuation">.</span><span class="token function">FillRectangle</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SolidBrush</span><span class="token punctuation">(</span>sbcolor<span class="token punctuation">)</span><span class="token punctuation">,</span> bounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
                g<span class="token punctuation">.</span><span class="token function">DrawRectangle</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Pen</span><span class="token punctuation">(</span>sbbcolor<span class="token punctuation">)</span><span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>X<span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Y<span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Width <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>toplevel<span class="token punctuation">)</span>
            <span class="token punctuation">{</span> <span class="token comment">// draw menuitem, unselected</span>
                g<span class="token punctuation">.</span><span class="token function">FillRectangle</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SolidBrush</span><span class="token punctuation">(</span>ibgcolor<span class="token punctuation">)</span><span class="token punctuation">,</span> bounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
                bounds<span class="token punctuation">.</span>X <span class="token operator">+=</span> SystemInformation<span class="token punctuation">.</span>SmallIconSize<span class="token punctuation">.</span>Width <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>
                bounds<span class="token punctuation">.</span>Width <span class="token operator">-=</span> SystemInformation<span class="token punctuation">.</span>SmallIconSize<span class="token punctuation">.</span>Width <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>
                g<span class="token punctuation">.</span><span class="token function">FillRectangle</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SolidBrush</span><span class="token punctuation">(</span>bgcolor<span class="token punctuation">)</span><span class="token punctuation">,</span> bounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                <span class="token comment">// draw toplevel, unselected menuitem</span>
                g<span class="token punctuation">.</span><span class="token function">FillRectangle</span><span class="token punctuation">(</span>SystemBrushes<span class="token punctuation">.</span>Menu<span class="token punctuation">,</span> bounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DrawMenuText</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> g<span class="token punctuation">,</span> <span class="token class-name">Rectangle</span> bounds<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> text<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> shortcut<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> enabled<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> toplevel<span class="token punctuation">,</span> <span class="token class-name">DrawItemState</span> state<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">StringFormat</span> stringformat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stringformat<span class="token punctuation">.</span>HotkeyPrefix <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>state <span class="token operator">&amp;</span> DrawItemState<span class="token punctuation">.</span>NoAccelerator<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">?</span> HotkeyPrefix<span class="token punctuation">.</span>Hide <span class="token punctuation">:</span> HotkeyPrefix<span class="token punctuation">.</span>Show<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">int</span></span> textwidth <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">MeasureString</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> SystemInformation<span class="token punctuation">.</span>MenuFont<span class="token punctuation">)</span><span class="token punctuation">.</span>Width<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">int</span></span> x <span class="token operator">=</span> toplevel <span class="token punctuation">?</span> bounds<span class="token punctuation">.</span>Left <span class="token operator">+</span> <span class="token punctuation">(</span>bounds<span class="token punctuation">.</span>Width <span class="token operator">-</span> textwidth<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token punctuation">:</span> bounds<span class="token punctuation">.</span>Left <span class="token operator">+</span> TEXTSTART<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">int</span></span> y <span class="token operator">=</span> bounds<span class="token punctuation">.</span>Top <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token class-name">Brush</span> brush <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>enabled<span class="token punctuation">)</span>
            brush <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SolidBrush</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token function">FromArgb</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span> SystemColors<span class="token punctuation">.</span>MenuText<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            brush <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SolidBrush</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Black<span class="token punctuation">)</span><span class="token punctuation">;</span>
        g<span class="token punctuation">.</span><span class="token function">DrawString</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> SystemInformation<span class="token punctuation">.</span>MenuFont<span class="token punctuation">,</span> brush<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> stringformat<span class="token punctuation">)</span><span class="token punctuation">;</span>
        g<span class="token punctuation">.</span><span class="token function">DrawString</span><span class="token punctuation">(</span>shortcut<span class="token punctuation">,</span> SystemInformation<span class="token punctuation">.</span>MenuFont<span class="token punctuation">,</span> brush<span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Left <span class="token operator">+</span> <span class="token number">130</span><span class="token punctuation">,</span> bounds<span class="token punctuation">.</span>Top <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> stringformat<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>MenuItemStyleDrawer就是那个公用的接口类，无论普通风格、Office2000还是VS.NET风格都要实现自己方式的接口，这个接口包括DrawCheckmark、DrawIcon、DrawMenuText、DrawBackground、DrawSeparator等函数，可以实现菜单项需要的各种函数。完成这部分后可以从MenuItem继承一个子类来象第二部分一样处理了。看下面的代码，具体考察一下熟悉的OnMeasureItem和OnDrawItem：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnMeasureItem</span><span class="token punctuation">(</span><span class="token class-name">MeasureItemEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">OnMeasureItem</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// make shortcut text 省略这部分代码。</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>menustyle <span class="token operator">!=</span> IconMenuStyle<span class="token punctuation">.</span>Standard<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Text <span class="token operator">==</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span>ItemHeight <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
            e<span class="token punctuation">.</span>ItemWidth <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name"><span class="token keyword">int</span></span> textwidth <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>Graphics<span class="token punctuation">.</span><span class="token function">MeasureString</span><span class="token punctuation">(</span>Text <span class="token operator">+</span> shortcuttext<span class="token punctuation">,</span> SystemInformation<span class="token punctuation">.</span>MenuFont<span class="token punctuation">)</span><span class="token punctuation">.</span>Width<span class="token punctuation">)</span><span class="token punctuation">;</span>
        e<span class="token punctuation">.</span>ItemHeight <span class="token operator">=</span> SystemInformation<span class="token punctuation">.</span>MenuHeight<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>Parent <span class="token operator">==</span> Parent<span class="token punctuation">.</span><span class="token function">GetMainMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            e<span class="token punctuation">.</span>ItemWidth <span class="token operator">=</span> textwidth <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// 5 is a magic number </span>
        <span class="token keyword">else</span>
            e<span class="token punctuation">.</span>ItemWidth <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">Max</span><span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span> textwidth <span class="token operator">+</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>IconMenuStyle.Standard是个enum表明是普通风格、Office2000或是VS。NET的风格。这部分和我们第二部分看到的没有什么不同。</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnDrawItem</span><span class="token punctuation">(</span><span class="token class-name">DrawItemEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">OnDrawItem</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Graphics</span> g <span class="token operator">=</span> e<span class="token punctuation">.</span>Graphics<span class="token punctuation">;</span>
    <span class="token class-name">Rectangle</span> bounds <span class="token operator">=</span> e<span class="token punctuation">.</span>Bounds<span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">bool</span></span> selected <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>State <span class="token operator">&amp;</span> DrawItemState<span class="token punctuation">.</span>Selected<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">bool</span></span> toplevel <span class="token operator">=</span> <span class="token punctuation">(</span>Parent <span class="token operator">==</span> Parent<span class="token punctuation">.</span><span class="token function">GetMainMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">bool</span></span> hasicon <span class="token operator">=</span> Icon <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    style<span class="token punctuation">.</span><span class="token function">DrawBackground</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> bounds<span class="token punctuation">,</span> e<span class="token punctuation">.</span>State<span class="token punctuation">,</span> toplevel<span class="token punctuation">,</span> hasicon<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasicon<span class="token punctuation">)</span>
        style<span class="token punctuation">.</span><span class="token function">DrawIcon</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> Icon<span class="token punctuation">,</span> bounds<span class="token punctuation">,</span> selected<span class="token punctuation">,</span> Enabled<span class="token punctuation">,</span> Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Checked<span class="token punctuation">)</span>
        style<span class="token punctuation">.</span><span class="token function">DrawCheckmark</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> bounds<span class="token punctuation">,</span> selected<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Text <span class="token operator">==</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        style<span class="token punctuation">.</span><span class="token function">DrawSeparator</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> bounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        style<span class="token punctuation">.</span><span class="token function">DrawMenuText</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> bounds<span class="token punctuation">,</span> Text<span class="token punctuation">,</span> shortcuttext<span class="token punctuation">,</span> Enabled<span class="token punctuation">,</span> toplevel<span class="token punctuation">,</span> e<span class="token punctuation">.</span>State<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>刚刚我们说的MenuItemStyleDrawer接口的好处在这里显示出来，整个过程显得简单明了，具体实现得代码不是很多。当这个类完成后，剩下来的就是使用了它了，这部分象第一部分所述，你可以在一个顶级菜单项的子菜单项声明成IconMenu类型的也就是我们实现的继承MenuItem的类，简单的代码象下面这样：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MenuItem</span> mItems1<span class="token punctuation">;</span>
<span class="token class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Bitmap</span> Bitmap1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Bitmap</span><span class="token punctuation">(</span>BMPPATHSTR <span class="token operator">+</span> <span class="token string">&quot;Open.bmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

mItems1 <span class="token operator">=</span> iMenuItem<span class="token punctuation">.</span><span class="token function">MenuItemCreator</span><span class="token punctuation">(</span>MenuStyle <span class="token punctuation">,</span> <span class="token string">&quot;&amp;Open&quot;</span> <span class="token punctuation">,</span> Bitmap1<span class="token punctuation">,</span>
</code></pre></div><p>这个mItem1就是一个VS.NET风格的菜单项了。具体的可以看附带的Project和屏幕截图。</p><p>至此我们完成了用VB.NET或C#完成一个有VS.NET或Office XP风格的菜单。三个部分是渐进的，如果你以前进行或实验过第二部分讨论的问题，那么第三部分唯一让人感兴趣的是MenuItemStyleDrawer接口的思路。对于整个新的.NET的编程方式上说，原来的VB用户可能会经历一个痛苦的过程,他们的第一反应是Sub Class、Hook或是终极的API，而接触过C＋＋、MFC、DELPHI甚至VJ＋＋的用户会很容易想到继承，特别时DELPHI和VJ的用户入手应当最快了。想想会开始怀念以前VB的时光，因为对于这样的问题，VB用户总是拿着大锤，直接敲个大洞，然后拿到结果；而C＋＋、MFC、DEPHI用户则拿着一本说明书，一步一步按指示找到结果；结果可能一样，但两者的方式是截然不同的。好了，这些是题外话了。</p>`,46),e=[o];function c(u,l){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","menu2.html.vue"]]);export{i as default};
