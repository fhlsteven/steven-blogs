import{_ as n,o as s,c as a,a as t}from"./app-d9da1b6d.js";const p={},o=t(`<h1 id="用c-与xml创建动态分层菜单" tabindex="-1"><a class="header-anchor" href="#用c-与xml创建动态分层菜单" aria-hidden="true">#</a> 用C#与XML创建动态分层菜单</h1><h2 id="用c-与xml创建动态分层菜单1" tabindex="-1"><a class="header-anchor" href="#用c-与xml创建动态分层菜单1" aria-hidden="true">#</a> 用C#与XML创建动态分层菜单1</h2><p>Marking up the Menu</p><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menuItem</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hyperLink</span><span class="token punctuation">/&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>Dollars &amp; Sense<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menuItem</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hyperLink</span><span class="token punctuation">&gt;</span></span>strategy.aspx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hyperLink</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>Annual Business Strategies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menuItem</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menuItem</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hyperLink</span><span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>Budget World<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menuItem</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hyperLink</span><span class="token punctuation">&gt;</span></span>/library/budget/default.aspx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hyperLink</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>Infomemos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menuItem</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menuItem</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hyperLink</span><span class="token punctuation">&gt;</span></span>/phonebooks/pdf/omb_phones.pdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hyperLink</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>Analysts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menuItem</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menuItem</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hyperLink</span><span class="token punctuation">&gt;</span></span>/pp/budget/tocs/Policies_TOC.aspx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hyperLink</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>Budget Policies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menuItem</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menuItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menuItem</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="用c-与xml创建动态分层菜单2" tabindex="-1"><a class="header-anchor" href="#用c-与xml创建动态分层菜单2" aria-hidden="true">#</a> 用C#与XML创建动态分层菜单2</h2><p>Creation in Progress</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">CreateMenu</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> startMenu<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">string</span></span> file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">string</span></span> strOutput <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name">ArrayList</span> startArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">string</span></span> strVariable <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">string</span></span> strTemp <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

    <span class="token class-name">XmlDocument</span> XMLDoc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        XMLDoc<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        strOutput <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">GetBaseException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> strOutput<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">XmlNodeList</span> nodeList <span class="token operator">=</span> XMLDoc<span class="token punctuation">.</span>DocumentElement<span class="token punctuation">.</span>ChildNodes<span class="token punctuation">;</span>

    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">XmlNode</span> node <span class="token keyword">in</span> nodeList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">XmlNode</span> currentNode <span class="token operator">=</span> node<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>currentNode<span class="token punctuation">.</span>HasChildNodes <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> currentNode<span class="token punctuation">.</span>ChildNodes<span class="token punctuation">.</span>Count<span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            _strCurrentMenu <span class="token operator">=</span> startMenu <span class="token operator">+</span> <span class="token string">&quot;_&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">string</span></span> thisMenu <span class="token operator">=</span> startMenu<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>currentNode<span class="token punctuation">.</span>ChildNodes<span class="token punctuation">.</span>Count<span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                strVariable <span class="token operator">=</span> <span class="token string">&quot;&lt;span id=\\&quot;&quot;</span> <span class="token operator">+</span> thisMenu <span class="token operator">+</span> <span class="token string">&quot;_span&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot;class=&#39;cellOff&#39; onMouseOver=\\&quot;stateChange(&#39;&quot;</span> 
                    <span class="token operator">+</span> _strCurrentMenu <span class="token operator">+</span>  <span class="token string">&quot;&#39;,this,&quot;</span> <span class="token operator">+</span> _intLevel <span class="token operator">+</span> <span class="token string">&quot;)\\&quot; onMouseOut=\\&quot;stateChange(&#39;&#39;,this,&#39;&#39;)\\&quot;&gt;&quot;</span> 
                    <span class="token operator">+</span> _strImage <span class="token operator">+</span> currentNode<span class="token punctuation">.</span>ChildNodes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>InnerText <span class="token operator">+</span> <span class="token string">&quot;&lt;/span&gt;&lt;br&gt;\\n&quot;</span><span class="token punctuation">;</span>
                startArray<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>strVariable<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">WalkTree</span><span class="token punctuation">(</span>currentNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                strVariable <span class="token operator">=</span> <span class="token string">&quot;&lt;span id=\\&quot;&quot;</span> <span class="token operator">+</span> thisMenu <span class="token operator">+</span> <span class="token string">&quot;_span&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> 
                    <span class="token operator">+</span> <span class="token string">&quot;\\&quot; class=&#39;cellOff&#39; onMouseOver=\\&quot;stateChange(&#39;&#39;,this,&#39;&#39;);hideDiv(&quot;</span> <span class="token operator">+</span> _intLevel 
                    <span class="token operator">+</span> <span class="token string">&quot;)\\&quot;onMouseOut=\\&quot;stateChange(&#39;&#39;,this,&#39;&#39;)\\&quot;onClick=\\&quot;location.href=&#39;&quot;</span> 
                    <span class="token operator">+</span> currentNode<span class="token punctuation">.</span>ChildNodes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>InnerText <span class="token operator">+</span> <span class="token string">&quot;&#39;\\&quot;&gt;&quot;</span> <span class="token operator">+</span> currentNode<span class="token punctuation">.</span>ChildNodes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>InnerText 
                    <span class="token operator">+</span> <span class="token string">&quot;&lt;/span&gt;&lt;br&gt;\\n&quot;</span><span class="token punctuation">;</span>
                startArray<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>strVariable<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    startArray<span class="token punctuation">.</span><span class="token function">TrimToSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _arrayNamesArray<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>startMenu<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>startArray<span class="token punctuation">.</span>Count<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        strTemp <span class="token operator">+=</span> startArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    _arrayHolderArray<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>strTemp<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//Reverse Array order so we don&#39;t have to </span>
    <span class="token comment">//worry about the ZIndex of each div layer</span>
    _arrayHolderArray<span class="token punctuation">.</span><span class="token function">Reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _arrayNamesArray<span class="token punctuation">.</span><span class="token function">Reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//Loop through arrays and write out divs and </span>
    <span class="token comment">//their individual span content items</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>_arrayNamesArray<span class="token punctuation">.</span>Count<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        strOutput <span class="token operator">+=</span> <span class="token string">&quot;&lt;div id=&#39;&quot;</span> <span class="token operator">+</span> 
            _arrayNamesArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;class=&#39;clsMenu&#39;&gt;&quot;</span><span class="token punctuation">;</span>
        strOutput <span class="token operator">+=</span> _arrayHolderArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        strOutput <span class="token operator">+=</span> <span class="token string">&quot;&lt;/div&gt;\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    _arrayHolderArray<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _arrayNamesArray<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_blnStaticMenus<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StreamWriter</span> writer <span class="token operator">=</span> 
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamWriter</span><span class="token punctuation">(</span>File<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>_strSaveToFile<span class="token punctuation">,</span> FileMode<span class="token punctuation">.</span>OpenOrCreate<span class="token punctuation">,</span> FileAccess<span class="token punctuation">.</span>Write<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        writer<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>strOutput<span class="token punctuation">)</span><span class="token punctuation">;</span>
        writer<span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>writer <span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span> writer<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> strOutput<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token comment">//CreateMenus</span>
</code></pre></div><h2 id="用c-与xml创建动态分层菜单3" tabindex="-1"><a class="header-anchor" href="#用c-与xml创建动态分层菜单3" aria-hidden="true">#</a> 用C#与XML创建动态分层菜单3</h2><p>Establishing Relationships</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">WalkTree</span><span class="token punctuation">(</span><span class="token class-name">XmlNode</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    _intLevel <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">string</span></span> strVariable <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">string</span></span> strTemp <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">ArrayList</span> tempArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> j<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>node<span class="token punctuation">.</span>ChildNodes<span class="token punctuation">.</span>Count<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">XmlNode</span> newNode <span class="token operator">=</span> node<span class="token punctuation">.</span>ChildNodes<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>newNode<span class="token punctuation">.</span>HasChildNodes <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> newNode<span class="token punctuation">.</span>ChildNodes<span class="token punctuation">.</span>Count<span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Each node should have a 0=hyperlink and 1=text node so </span>
            <span class="token comment">// don&#39;t call the function again if there are just these </span>
            <span class="token comment">// children</span>
            _strCurrentMenu <span class="token operator">+=</span> <span class="token string">&quot;_&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">string</span></span> thisMenu <span class="token operator">=</span> _strCurrentMenu<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> _strCurrentMenu<span class="token punctuation">.</span>Length<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            strVariable <span class="token operator">=</span> <span class="token string">&quot;&lt;span id=\\&quot;&quot;</span> <span class="token operator">+</span> thisMenu <span class="token operator">+</span> <span class="token string">&quot;_span&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> 
                <span class="token operator">+</span> <span class="token string">&quot;\\&quot; class=&#39;cellOff&#39; onMouseOver=\\&quot;stateChange(&#39;&quot;</span> <span class="token operator">+</span> _strCurrentMenu 
                <span class="token operator">+</span> <span class="token string">&quot;&#39;,this,&quot;</span> <span class="token operator">+</span> _intLevel <span class="token operator">+</span> <span class="token string">&quot;)\\&quot; onMouseOut=\\&quot;stateChange(&#39;&#39;,this,&#39;&#39;)\\&quot;&gt;&quot;</span> 
                <span class="token operator">+</span> _strImage <span class="token operator">+</span> newNode<span class="token punctuation">.</span>ChildNodes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>InnerText <span class="token operator">+</span> <span class="token string">&quot;&lt;/span&gt;&lt;br&gt;\\n&quot;</span><span class="token punctuation">;</span>
            tempArray<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>strVariable<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">WalkTree</span><span class="token punctuation">(</span>newNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            strVariable <span class="token operator">=</span> <span class="token string">&quot;&lt;span id=\\&quot;&quot;</span> <span class="token operator">+</span> _strCurrentMenu <span class="token operator">+</span> <span class="token string">&quot;_span&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> 
            <span class="token operator">+</span> <span class="token string">&quot;\\&quot; class=&#39;cellOff&#39; onMouseOver=\\&quot;stateChange(&#39;&#39;,this,&#39;&#39;);hideDiv(&quot;</span> 
            <span class="token operator">+</span> _intLevel <span class="token operator">+</span> <span class="token string">&quot;)\\&quot; onMouseOut=\\&quot;stateChange(&#39;&#39;,this,&#39;&#39;)\\&quot; onClick=\\&quot;location.href=&#39;&quot;</span> 
            <span class="token operator">+</span> newNode<span class="token punctuation">.</span>ChildNodes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>InnerText <span class="token operator">+</span> <span class="token string">&quot;&#39;\\&quot;&gt;&quot;</span> <span class="token operator">+</span> newNode<span class="token punctuation">.</span>ChildNodes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>InnerText 
            <span class="token operator">+</span> <span class="token string">&quot;&lt;/span&gt;&lt;br&gt;\\n&quot;</span><span class="token punctuation">;</span>
            tempArray<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>strVariable<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    tempArray<span class="token punctuation">.</span><span class="token function">TrimToSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _arrayNamesArray<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>_strCurrentMenu<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>tempArray<span class="token punctuation">.</span>Count<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        strTemp <span class="token operator">+=</span> tempArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    _arrayHolderArray<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>strTemp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    _strCurrentMenu <span class="token operator">=</span> _strCurrentMenu<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> _strCurrentMenu<span class="token punctuation">.</span>Length<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//Exiting function so go back to </span>
    <span class="token comment">//previous menu version</span>
    _intLevel <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    tempArray<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token comment">// WalkTree</span>
</code></pre></div><h2 id="用c-与xml创建动态分层菜单4" tabindex="-1"><a class="header-anchor" href="#用c-与xml创建动态分层菜单4" aria-hidden="true">#</a> 用C#与XML创建动态分层菜单4</h2><p>Last but not Least</p><div class="language-asp" data-ext="asp"><pre class="language-asp"><code>&lt;%
   // Create paths to xml files
   string filepath = Server.MapPath(&quot;menuItems.xml&quot;);
   string filepath2 = Server.MapPath(&quot;menuItems2.xml&quot;);
   string filepath3 = Server.MapPath(&quot;menuItems3.xml&quot;);

   // Following is constructor used to create a static menu
   // file in cases where the menu does not change often.
   // string saveToFile = Server.MapPath(&quot;test.aspx&quot;);
   // XmlMenu menuSave = new XmlMenu(true,saveToFile);
   // menuSave.CreateMenu(&quot;menu1&quot;,filepath);

   // Instantiate XmlMenu object and call CreateMenu method
   XmlMenu menu = new XmlMenu();
   Response.Write(menu.CreateMenu(&quot;menu1&quot;,filepath));
   Response.Write(menu.CreateMenu(&quot;menu2&quot;,filepath2));
   Response.Write(menu.CreateMenu(&quot;menu3&quot;,filepath3));
%&gt;
</code></pre></div>`,13),e=[o];function c(u,l){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","menu10.html.vue"]]);export{r as default};
