import{_ as n,o as s,c as a,a as t}from"./app-d9da1b6d.js";const p={},o=t(`<h1 id="创建可编辑listview控件" tabindex="-1"><a class="header-anchor" href="#创建可编辑listview控件" aria-hidden="true">#</a> 创建可编辑ListView控件</h1><p>ListView控件是一个在Windows应用程序中使用频率比较高的一个，通常使用它来显示数据报表。很多情况下，我们不仅仅使用ListView来显示数据，还要求编辑其中的数据。但是.NET提供的ListView控件的编辑功能十分有限，只能编辑首列，编辑格式只能为文本框，等等，使用起来甚为不便。因此本人新写了一个类，扩充了其功能，客户程序员可以设置任何列的格式(只读，编辑状态下文本框，编辑状态下组合框)， 代码如下：</p><h2 id="_1-alan-listviewcolumnstyle-列风格枚举" tabindex="-1"><a class="header-anchor" href="#_1-alan-listviewcolumnstyle-列风格枚举" aria-hidden="true">#</a> 1．ALAN_ListViewColumnStyle 列风格枚举</h2><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 列风格枚举</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">ALAN_ListViewColumnStyle</span>
<span class="token punctuation">{</span>
    ReadOnly<span class="token punctuation">,</span> <span class="token comment">//只读</span>
    EditBox<span class="token punctuation">,</span>  <span class="token comment">//编辑状态下显示为文本框</span>
    ComboBox  <span class="token comment">//编辑状态下显示为组合框</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="_2-alan-columnheader-带有自定义风格的列" tabindex="-1"><a class="header-anchor" href="#_2-alan-columnheader-带有自定义风格的列" aria-hidden="true">#</a> 2．ALAN_ColumnHeader 带有自定义风格的列</h2><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 列描述</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ALAN_ColumnHeader</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ColumnHeader</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">ALAN_ListViewColumnStyle</span> cs<span class="token punctuation">;</span> <span class="token comment">//本列的风格</span>

    <span class="token keyword">public</span> <span class="token function">ALAN_ColumnHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
       cs <span class="token operator">=</span> ALAN_ListViewColumnStyle<span class="token punctuation">.</span>ReadOnly<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">ALAN_ColumnHeader</span><span class="token punctuation">(</span><span class="token class-name">ALAN_ListViewColumnStyle</span> _cs<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
       cs <span class="token operator">=</span> _cs<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">ALAN_ListViewColumnStyle</span> ColumnStyle
    <span class="token punctuation">{</span>
       <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> cs<span class="token punctuation">;</span> <span class="token punctuation">}</span>
       <span class="token keyword">set</span> <span class="token punctuation">{</span> cs <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="_3-alan-editlistview-列表控件" tabindex="-1"><a class="header-anchor" href="#_3-alan-editlistview-列表控件" aria-hidden="true">#</a> 3．ALAN_EditListView 列表控件</h2><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 可编辑的ListView控件</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ALAN_EditListView</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ListView</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">ListViewItem</span> m_currentLVItem<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">int</span></span> m_nX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">int</span></span> m_nY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> m_strSubItemText<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">int</span></span> m_nSubItemSelected <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ComboBox<span class="token punctuation">[</span><span class="token punctuation">]</span></span> m_arrComboBoxes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ComboBox</span><span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>TextBox</span> editBox<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Font</span> m_fontComboBox<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Font</span> m_fontEdit<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Color</span> m_bgcolorComboBox<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Color</span> m_bgcolorEdit<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">ALAN_EditListView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        editBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>TextBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ComboBoxFont <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Font<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>EditFont <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Font<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>EditBgColor <span class="token operator">=</span> Color<span class="token punctuation">.</span>LightBlue<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>m_bgcolorComboBox <span class="token operator">=</span> Color<span class="token punctuation">.</span>LightBlue<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>MouseDown <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MouseEventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>SMKMouseDown<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>DoubleClick <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>SMKDoubleClick<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>GridLines <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        editBox<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        editBox<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">AddRange</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Control<span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>editBox <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        editBox<span class="token punctuation">.</span>KeyPress <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>KeyPressEventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>EditOver<span class="token punctuation">)</span><span class="token punctuation">;</span>
        editBox<span class="token punctuation">.</span>LostFocus <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>FocusOver<span class="token punctuation">)</span><span class="token punctuation">;</span>
        editBox<span class="token punctuation">.</span>AutoSize <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        editBox<span class="token punctuation">.</span>Font <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>EditFont<span class="token punctuation">;</span>
        editBox<span class="token punctuation">.</span>BackColor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>EditBgColor<span class="token punctuation">;</span>
        editBox<span class="token punctuation">.</span>BorderStyle <span class="token operator">=</span> BorderStyle<span class="token punctuation">.</span>FixedSingle<span class="token punctuation">;</span>
        editBox<span class="token punctuation">.</span><span class="token function">Hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        editBox<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Font</span> ComboBoxFont
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>m_fontComboBox<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>m_fontComboBox <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Color</span> ComboBoxBgColor
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>m_bgcolorComboBox<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">set</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>m_bgcolorComboBox <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>m_arrComboBoxes<span class="token punctuation">.</span>Length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>m_arrComboBoxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    m_arrComboBoxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>BackColor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>m_bgcolorComboBox<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Font</span> EditFont
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>m_fontEdit<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">set</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>m_fontEdit <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>editBox<span class="token punctuation">.</span>Font <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>m_fontEdit<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Color</span> EditBgColor
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>m_bgcolorEdit<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">set</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>m_bgcolorEdit <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>editBox<span class="token punctuation">.</span>BackColor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>m_bgcolorEdit<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SetColumn</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> columnIndex<span class="token punctuation">,</span> <span class="token class-name">ALAN_ListViewColumnStyle</span> cs<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>columnIndex <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> columnIndex <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Columns<span class="token punctuation">.</span>Count<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;Column index is out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span>ALAN_ColumnHeader<span class="token punctuation">)</span>Columns<span class="token punctuation">[</span>columnIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ColumnStyle <span class="token operator">=</span> cs<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">BoundListToColumn</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> columnIndex<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> items<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>columnIndex <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> columnIndex <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Columns<span class="token punctuation">.</span>Count<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;Column index is out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ALAN_ColumnHeader<span class="token punctuation">)</span>Columns<span class="token punctuation">[</span>columnIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ColumnStyle <span class="token operator">!=</span> ALAN_ListViewColumnStyle<span class="token punctuation">.</span>ComboBox<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;Column should be ComboBox style&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ComboBox</span> newbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ComboBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> items<span class="token punctuation">.</span>Length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            newbox<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        newbox<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        newbox<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">AddRange</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Control<span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> newbox <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        newbox<span class="token punctuation">.</span>SelectedIndexChanged <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>CmbSelected<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newbox<span class="token punctuation">.</span>LostFocus <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>EventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>CmbFocusOver<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newbox<span class="token punctuation">.</span>KeyPress <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>KeyPressEventHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>CmbKeyPress<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newbox<span class="token punctuation">.</span>Font <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ComboBoxFont<span class="token punctuation">;</span>
        newbox<span class="token punctuation">.</span>BackColor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ComboBoxBgColor<span class="token punctuation">;</span>
        newbox<span class="token punctuation">.</span>DropDownStyle <span class="token operator">=</span> ComboBoxStyle<span class="token punctuation">.</span>DropDownList<span class="token punctuation">;</span>
        newbox<span class="token punctuation">.</span><span class="token function">Hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>m_arrComboBoxes<span class="token punctuation">[</span>columnIndex<span class="token punctuation">]</span> <span class="token operator">=</span> newbox<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CmbKeyPress</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>KeyPressEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">ComboBox</span> cmbBox <span class="token operator">=</span> <span class="token punctuation">(</span>ComboBox<span class="token punctuation">)</span>sender<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>KeyChar <span class="token operator">==</span> <span class="token number">13</span> <span class="token operator">||</span> e<span class="token punctuation">.</span>KeyChar <span class="token operator">==</span> <span class="token number">27</span><span class="token punctuation">)</span> <span class="token comment">//CR or ESC press</span>
        <span class="token punctuation">{</span>
            cmbBox<span class="token punctuation">.</span><span class="token function">Hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CmbSelected</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">ComboBox</span> cmbBox <span class="token operator">=</span> <span class="token punctuation">(</span>ComboBox<span class="token punctuation">)</span>sender<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">int</span></span> sel <span class="token operator">=</span> cmbBox<span class="token punctuation">.</span>SelectedIndex<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sel <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">string</span></span> itemSel <span class="token operator">=</span> cmbBox<span class="token punctuation">.</span>Items<span class="token punctuation">[</span>sel<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            m_currentLVItem<span class="token punctuation">.</span>SubItems<span class="token punctuation">[</span>m_nSubItemSelected<span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> itemSel<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CmbFocusOver</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">ComboBox</span> cmbBox <span class="token operator">=</span> <span class="token punctuation">(</span>ComboBox<span class="token punctuation">)</span>sender<span class="token punctuation">;</span>
        cmbBox<span class="token punctuation">.</span><span class="token function">Hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">EditOver</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>KeyPressEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>KeyChar <span class="token operator">==</span> <span class="token number">13</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            m_currentLVItem<span class="token punctuation">.</span>SubItems<span class="token punctuation">[</span>m_nSubItemSelected<span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> editBox<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
            editBox<span class="token punctuation">.</span><span class="token function">Hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>KeyChar <span class="token operator">==</span> <span class="token number">27</span><span class="token punctuation">)</span>
            editBox<span class="token punctuation">.</span><span class="token function">Hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">FocusOver</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        m_currentLVItem<span class="token punctuation">.</span>SubItems<span class="token punctuation">[</span>m_nSubItemSelected<span class="token punctuation">]</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> editBox<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
        editBox<span class="token punctuation">.</span><span class="token function">Hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SMKDoubleClick</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Check the subitem clicked .</span>
        <span class="token class-name"><span class="token keyword">int</span></span> nStart <span class="token operator">=</span> m_nX<span class="token punctuation">;</span> <span class="token comment">//current mouse down X position</span>
        <span class="token class-name"><span class="token keyword">int</span></span> spos <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">int</span></span> epos <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Columns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Width<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Columns<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nStart <span class="token operator">&gt;</span> spos <span class="token operator">&amp;&amp;</span> nStart <span class="token operator">&lt;</span> epos<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                m_nSubItemSelected <span class="token operator">=</span> i<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            spos <span class="token operator">=</span> epos<span class="token punctuation">;</span>
            epos <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Columns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>Width<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        m_strSubItemText <span class="token operator">=</span> m_currentLVItem<span class="token punctuation">.</span>SubItems<span class="token punctuation">[</span>m_nSubItemSelected<span class="token punctuation">]</span><span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
        <span class="token class-name">ALAN_ColumnHeader</span> column <span class="token operator">=</span> <span class="token punctuation">(</span>ALAN_ColumnHeader<span class="token punctuation">)</span>Columns<span class="token punctuation">[</span>m_nSubItemSelected<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>ColumnStyle <span class="token operator">==</span> ALAN_ListViewColumnStyle<span class="token punctuation">.</span>ComboBox<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">ComboBox</span> cmbBox <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>m_arrComboBoxes<span class="token punctuation">[</span>m_nSubItemSelected<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cmbBox <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;The ComboxBox control bind to current column is null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Rectangle</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rectangle</span><span class="token punctuation">(</span>spos<span class="token punctuation">,</span> m_currentLVItem<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Y<span class="token punctuation">,</span> epos<span class="token punctuation">,</span> m_currentLVItem<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
            cmbBox<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span>epos <span class="token operator">-</span> spos<span class="token punctuation">,</span> m_currentLVItem<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Bottom <span class="token operator">-</span> m_currentLVItem<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Top<span class="token punctuation">)</span><span class="token punctuation">;</span>
            cmbBox<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span>spos<span class="token punctuation">,</span> m_currentLVItem<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span>
            cmbBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cmbBox<span class="token punctuation">.</span>Text <span class="token operator">=</span> m_strSubItemText<span class="token punctuation">;</span>
            cmbBox<span class="token punctuation">.</span><span class="token function">SelectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cmbBox<span class="token punctuation">.</span><span class="token function">Focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>ColumnStyle <span class="token operator">==</span> ALAN_ListViewColumnStyle<span class="token punctuation">.</span>EditBox<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">Rectangle</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rectangle</span><span class="token punctuation">(</span>spos<span class="token punctuation">,</span> m_currentLVItem<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Y<span class="token punctuation">,</span> epos<span class="token punctuation">,</span> m_currentLVItem<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
            editBox<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span>epos <span class="token operator">-</span> spos<span class="token punctuation">,</span> m_currentLVItem<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Height<span class="token punctuation">)</span><span class="token punctuation">;</span>
            editBox<span class="token punctuation">.</span>Location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span>spos<span class="token punctuation">,</span> m_currentLVItem<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span>
            editBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            editBox<span class="token punctuation">.</span>Text <span class="token operator">=</span> m_strSubItemText<span class="token punctuation">;</span>
            editBox<span class="token punctuation">.</span><span class="token function">SelectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            editBox<span class="token punctuation">.</span><span class="token function">Focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SMKMouseDown</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MouseEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        m_currentLVItem <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">GetItemAt</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>X<span class="token punctuation">,</span> e<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        m_nX <span class="token operator">=</span> e<span class="token punctuation">.</span>X<span class="token punctuation">;</span>
        m_nY <span class="token operator">=</span> e<span class="token punctuation">.</span>Y<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>使用方法如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">this</span><span class="token punctuation">.</span>listView1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ALAN_EditListView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">///////////////////////</span>
<span class="token doc-comment comment">///add the columns</span>
<span class="token class-name">ALAN_ColumnHeader</span> header1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ALAN_ColumnHeader</span><span class="token punctuation">(</span>ALAN_ListViewColumnStyle<span class="token punctuation">.</span>ReadOnly<span class="token punctuation">)</span><span class="token punctuation">;</span>
header1<span class="token punctuation">.</span>Width <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span>
header1<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;姓名&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>header1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ALAN_ColumnHeader</span> header2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ALAN_ColumnHeader</span><span class="token punctuation">(</span>ALAN_ListViewColumnStyle<span class="token punctuation">.</span>EditBox<span class="token punctuation">)</span><span class="token punctuation">;</span>
header2<span class="token punctuation">.</span>Width <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span>
header2<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;性别&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>header2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ALAN_ColumnHeader</span> header3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ALAN_ColumnHeader</span><span class="token punctuation">(</span>ALAN_ListViewColumnStyle<span class="token punctuation">.</span>EditBox<span class="token punctuation">)</span><span class="token punctuation">;</span>
header3<span class="token punctuation">.</span>Width <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span>
header3<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;年龄&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>header3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ALAN_ColumnHeader</span> header4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ALAN_ColumnHeader</span><span class="token punctuation">(</span>ALAN_ListViewColumnStyle<span class="token punctuation">.</span>ComboBox<span class="token punctuation">)</span><span class="token punctuation">;</span>
header4<span class="token punctuation">.</span>Width <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span>
header4<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;专业&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>header4<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ALAN_ColumnHeader</span> header5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ALAN_ColumnHeader</span><span class="token punctuation">(</span>ALAN_ListViewColumnStyle<span class="token punctuation">.</span>ComboBox<span class="token punctuation">)</span><span class="token punctuation">;</span>
header5<span class="token punctuation">.</span>Width <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span>
header5<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">&quot;轮休&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>header5<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">///////////////////////</span>
<span class="token doc-comment comment">///bound the combox</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span><span class="token function">BoundListToColumn</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> <span class="token string">&quot;Lotus&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;SQL Server&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.NET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;VB&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span><span class="token function">BoundListToColumn</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> <span class="token string">&quot;Sun&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Mon&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Tue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Wed&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Thu&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Fri&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Sat&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/////////////////////////////////////</span>
<span class="token doc-comment comment">///set edit state font and backcolor</span>
<span class="token comment">//this.listView1.ComboBoxBgColor = Color.LightYellow;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>ComboBoxFont <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Font</span><span class="token punctuation">(</span><span class="token string">&quot;Microsoft Sans Serif&quot;</span><span class="token punctuation">,</span> <span class="token number">9F</span><span class="token punctuation">,</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>FontStyle<span class="token punctuation">.</span>Regular<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>GraphicsUnit<span class="token punctuation">.</span>Point<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Byte<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>EditFont <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Font</span><span class="token punctuation">(</span><span class="token string">&quot;Microsoft Sans Serif&quot;</span><span class="token punctuation">,</span> <span class="token number">9F</span><span class="token punctuation">,</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>FontStyle<span class="token punctuation">.</span>Regular<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>GraphicsUnit<span class="token punctuation">.</span>Point<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Byte<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">///////////////////////</span>
<span class="token doc-comment comment">///add rows </span>
<span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span></span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;24&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;.NET&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Sun&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListViewItem</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;李四&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;25&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;SQL Server&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Mon&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListViewItem</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;王五&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;23&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;VB&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Tue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListViewItem</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;赵六&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;女&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;22&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Lotus&quot;</span><span class="token punctuation">;</span>
s<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Wed&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListViewItem</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">///////////////////////////</span>
<span class="token doc-comment comment">///other common attributs</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>Dock <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>DockStyle<span class="token punctuation">.</span>Fill<span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>Font <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Font</span><span class="token punctuation">(</span><span class="token string">&quot;Microsoft Sans Serif&quot;</span><span class="token punctuation">,</span> <span class="token number">9.75F</span><span class="token punctuation">,</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>FontStyle<span class="token punctuation">.</span>Regular<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>GraphicsUnit<span class="token punctuation">.</span>Point<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Byte<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>FullRowSelect <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;listView1&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">448</span><span class="token punctuation">,</span> <span class="token number">273</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>TabIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">.</span>View <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>View<span class="token punctuation">.</span>Details<span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>Controls<span class="token punctuation">.</span><span class="token function">AddRange</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Control<span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span>
                                                        <span class="token keyword">this</span><span class="token punctuation">.</span>listView1<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>双击需要编辑的单元，如果该列为ALAN_ListViewColumnStyle.ReadOnly 则没有变化；如果该列为ALAN_ListViewColumnStyle.EditBox则出现文本框；如果该列为ALAN_ListViewColumnStyle.ComboBox则出现组合框，如下图：</p><p>图1 EditBox风格</p><p>图2 ComboBox风格</p><hr><hr><p><strong>对该文的评论</strong> 人气：588</p><p>ruanyuping (2003-11-3 14:06:26)</p><blockquote><p>有没有源码下载啊</p></blockquote><p>steeven (2003-10-31 16:47:48)</p><blockquote><p>能不能解释一下实现方式和要点．一堆代码没时间看啊</p></blockquote>`,20),c=[o];function e(u,l){return s(),a("div",null,c)}const i=n(p,[["render",e],["__file","lv6.html.vue"]]);export{i as default};
