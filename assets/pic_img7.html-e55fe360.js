import{_ as n,o as s,c as a,a as t}from"./app-a2b6e588.js";const p={},o=t(`<h1 id="调用api捕获屏幕图像" tabindex="-1"><a class="header-anchor" href="#调用api捕获屏幕图像" aria-hidden="true">#</a> 调用API捕获屏幕图像</h1><p>捕获屏幕图像俗称抓屏，在<code>http://cnblogs.com/spidertan/archive/2004/09/03/39362.aspx</code>提供了C#的版本，本文提供VB.NET和C#两个语言版本的代码（ScreenCapture.VB和ScreenCapture.CS），主要功能就是捕获屏幕或者窗口上的图象。</p><p><code>http://www.codeguru.com/code/legacy/cs_graphics/CaptureScreenDemo.zip</code>提供了完整的工程代码，但跟本文没有关系，仅仅提供下载资源。</p><p>用ScreenCapture这个类特别简单，该类有四个方法：</p><ul><li><code>public Image CaptureScreen()</code> 捕获整个屏幕的图象</li><li><code>public Image CaptureWindow(IntPtr handle)</code> 捕获窗口上的图象</li><li><code>public void CaptureWindowToFile(IntPtr handle, string filename, ImageFormat format)</code> 捕获窗口图像并且保存为一个文件</li><li><code>public void CaptureScreenToFile(string filename, ImageFormat format)</code> 捕获整个屏幕的图像并且保存为一个文件</li></ul><h2 id="示例与快速入门" tabindex="-1"><a class="header-anchor" href="#示例与快速入门" aria-hidden="true">#</a> 示例与快速入门</h2><p>VB.NET</p><div class="language-vb" data-ext="vb"><pre class="language-vb"><code><span class="token keyword">Dim</span> sc <span class="token keyword">As</span> <span class="token keyword">New</span> ScreenCapture<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">&#39; 捕获整个屏幕的图象</span>
<span class="token keyword">Dim</span> img <span class="token keyword">As</span> Image <span class="token operator">=</span> sc<span class="token punctuation">.</span>CaptureScreen<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">&#39; 在ID为imageDisplay的Picture控件显示图像</span>
<span class="token keyword">Me</span><span class="token punctuation">.</span>imageDisplay<span class="token punctuation">.</span>Image <span class="token operator">=</span> img
<span class="token comment">&#39; 捕获窗口图像并且保存为一个文件</span>
sc<span class="token punctuation">.</span>CaptureWindowToFile<span class="token punctuation">(</span><span class="token keyword">Me</span><span class="token punctuation">.</span>Handle<span class="token punctuation">,</span> <span class="token string">&quot;C: emp2.gif&quot;</span><span class="token punctuation">,</span> ImageFormat<span class="token punctuation">.</span>Gif<span class="token punctuation">)</span>
</code></pre></div><p>C#</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">ScreenCapture</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ScreenCapture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 捕获整个屏幕的图象</span>
<span class="token class-name">Image</span> img <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">CaptureScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 在ID为imageDisplay的Picture控件显示图像</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>imageDisplay<span class="token punctuation">.</span>Image <span class="token operator">=</span> img<span class="token punctuation">;</span>
<span class="token comment">// 捕获窗口图像并且保存为一个文件</span>
sc<span class="token punctuation">.</span><span class="token function">CaptureWindowToFile</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Handle<span class="token punctuation">,</span><span class="token string">&quot;C:\\temp2.gif&quot;</span><span class="token punctuation">,</span>ImageFormat<span class="token punctuation">.</span>Gif<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="screencapture类的代码" tabindex="-1"><a class="header-anchor" href="#screencapture类的代码" aria-hidden="true">#</a> ScreenCapture类的代码</h3><p>VB.NET</p><div class="language-vb" data-ext="vb"><pre class="language-vb"><code><span class="token keyword">Imports</span> System
<span class="token keyword">Imports</span> System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices
<span class="token keyword">Imports</span> System<span class="token punctuation">.</span>Drawing
<span class="token keyword">Imports</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Imaging

<span class="token keyword">Namespace</span> ScreenShotDemoNamespace ScreenShotDemo
    <span class="token operator">_</span>
   <span class="token comment">&#39;/ &lt;summary&gt;</span>
   <span class="token comment">&#39;/ Provides functions to capture the entire screen, or a particular window, and save it to a file.</span>
   <span class="token comment">&#39;/ &lt;/summary&gt;</span>
   <span class="token keyword">Public</span> <span class="token keyword">Class</span> ScreenCaptureClass ScreenCapture

      <span class="token comment">&#39;/ &lt;summary&gt;</span>
      <span class="token comment">&#39;/ Creates an Image object containing a screen shot of the entire desktop</span>
      <span class="token comment">&#39;/ &lt;/summary&gt;</span>
      <span class="token comment">&#39;/ &lt;returns&gt;&lt;/returns&gt;</span>
      <span class="token keyword">Public</span> <span class="token keyword">Function</span> CaptureScreen<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">Function</span> CaptureScreen<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> Image
         <span class="token keyword">Return</span> CaptureWindow<span class="token punctuation">(</span>User32<span class="token punctuation">.</span>GetDesktopWindow<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">End</span> <span class="token keyword">Function</span> <span class="token comment">&#39;CaptureScreen</span>

      <span class="token comment">&#39;/ &lt;summary&gt;</span>
      <span class="token comment">&#39;/ Creates an Image object containing a screen shot of a specific window</span>
      <span class="token comment">&#39;/ &lt;/summary&gt;</span>
      <span class="token comment">&#39;/ &lt;param name=&quot;handle&quot;&gt;The handle to the window. (In windows forms, this is obtained by the Handle property)&lt;/param&gt;</span>
      <span class="token comment">&#39;/ &lt;returns&gt;&lt;/returns&gt;</span>
      <span class="token keyword">Public</span> <span class="token keyword">Function</span> CaptureWindow<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">Function</span> CaptureWindow<span class="token punctuation">(</span>handle <span class="token keyword">As</span> IntPtr<span class="token punctuation">)</span> <span class="token keyword">As</span> Image
         <span class="token comment">&#39; get te hDC of the target window</span>
         <span class="token keyword">Dim</span> hdcSrc <span class="token keyword">As</span> IntPtr <span class="token operator">=</span> User32<span class="token punctuation">.</span>GetWindowDC<span class="token punctuation">(</span>handle<span class="token punctuation">)</span>
         <span class="token comment">&#39; get the size</span>
         <span class="token keyword">Dim</span> windowRect <span class="token keyword">As</span> <span class="token keyword">New</span> User32<span class="token punctuation">.</span>RECT<span class="token punctuation">(</span><span class="token punctuation">)</span>
         User32<span class="token punctuation">.</span>GetWindowRect<span class="token punctuation">(</span>handle<span class="token punctuation">,</span> windowRect<span class="token punctuation">)</span>
         <span class="token keyword">Dim</span> width <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> windowRect<span class="token punctuation">.</span>right <span class="token operator">-</span> windowRect<span class="token punctuation">.</span>left
         <span class="token keyword">Dim</span> height <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> windowRect<span class="token punctuation">.</span>bottom <span class="token operator">-</span> windowRect<span class="token punctuation">.</span>top
         <span class="token comment">&#39; create a device context we can copy to</span>
         <span class="token keyword">Dim</span> hdcDest <span class="token keyword">As</span> IntPtr <span class="token operator">=</span> GDI32<span class="token punctuation">.</span>CreateCompatibleDC<span class="token punctuation">(</span>hdcSrc<span class="token punctuation">)</span>
         <span class="token comment">&#39; create a bitmap we can copy it to,</span>
         <span class="token comment">&#39; using GetDeviceCaps to get the width/height</span>
         <span class="token keyword">Dim</span> hBitmap <span class="token keyword">As</span> IntPtr <span class="token operator">=</span> GDI32<span class="token punctuation">.</span>CreateCompatibleBitmap<span class="token punctuation">(</span>hdcSrc<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
         <span class="token comment">&#39; select the bitmap object</span>
         <span class="token keyword">Dim</span> hOld <span class="token keyword">As</span> IntPtr <span class="token operator">=</span> GDI32<span class="token punctuation">.</span>SelectObject<span class="token punctuation">(</span>hdcDest<span class="token punctuation">,</span> hBitmap<span class="token punctuation">)</span>
         <span class="token comment">&#39; bitblt over</span>
         GDI32<span class="token punctuation">.</span>BitBlt<span class="token punctuation">(</span>hdcDest<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> hdcSrc<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> GDI32<span class="token punctuation">.</span>SRCCOPY<span class="token punctuation">)</span>
         <span class="token comment">&#39; restore selection</span>
         GDI32<span class="token punctuation">.</span>SelectObject<span class="token punctuation">(</span>hdcDest<span class="token punctuation">,</span> hOld<span class="token punctuation">)</span>
         <span class="token comment">&#39; clean up </span>
         GDI32<span class="token punctuation">.</span>DeleteDC<span class="token punctuation">(</span>hdcDest<span class="token punctuation">)</span>
         User32<span class="token punctuation">.</span>ReleaseDC<span class="token punctuation">(</span>handle<span class="token punctuation">,</span> hdcSrc<span class="token punctuation">)</span>
         
         <span class="token comment">&#39; get a .NET image object for it</span>
         <span class="token keyword">Dim</span> img <span class="token keyword">As</span> Image <span class="token operator">=</span> Image<span class="token punctuation">.</span>FromHbitmap<span class="token punctuation">(</span>hBitmap<span class="token punctuation">)</span>
         <span class="token comment">&#39; free up the Bitmap object</span>
         GDI32<span class="token punctuation">.</span>DeleteObject<span class="token punctuation">(</span>hBitmap<span class="token punctuation">)</span>
         
         <span class="token keyword">Return</span> img
      <span class="token keyword">End</span> <span class="token keyword">Function</span> <span class="token comment">&#39;CaptureWindow</span>

      <span class="token comment">&#39;/ &lt;summary&gt;</span>
      <span class="token comment">&#39;/ Captures a screen shot of a specific window, and saves it to a file</span>
      <span class="token comment">&#39;/ &lt;/summary&gt;</span>
      <span class="token comment">&#39;/ &lt;param name=&quot;handle&quot;&gt;&lt;/param&gt;</span>
      <span class="token comment">&#39;/ &lt;param name=&quot;filename&quot;&gt;&lt;/param&gt;</span>
      <span class="token comment">&#39;/ &lt;param name=&quot;format&quot;&gt;&lt;/param&gt;</span>
      <span class="token keyword">Public</span> <span class="token keyword">Sub</span> CaptureWindowToFile<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">Sub</span> CaptureWindowToFile<span class="token punctuation">(</span>handle <span class="token keyword">As</span> IntPtr<span class="token punctuation">,</span> filename <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> format <span class="token keyword">As</span> ImageFormat<span class="token punctuation">)</span>
         <span class="token keyword">Dim</span> img <span class="token keyword">As</span> Image <span class="token operator">=</span> CaptureWindow<span class="token punctuation">(</span>handle<span class="token punctuation">)</span>
         img<span class="token punctuation">.</span>Save<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> format<span class="token punctuation">)</span>
      <span class="token keyword">End</span> <span class="token keyword">Sub</span> <span class="token comment">&#39;CaptureWindowToFile</span>

      <span class="token comment">&#39;/ &lt;summary&gt;</span>
      <span class="token comment">&#39;/ Captures a screen shot of the entire desktop, and saves it to a file</span>
      <span class="token comment">&#39;/ &lt;/summary&gt;</span>
      <span class="token comment">&#39;/ &lt;param name=&quot;filename&quot;&gt;&lt;/param&gt;</span>
      <span class="token comment">&#39;/ &lt;param name=&quot;format&quot;&gt;&lt;/param&gt;</span>
      <span class="token keyword">Public</span> <span class="token keyword">Sub</span> CaptureScreenToFile<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">Sub</span> CaptureScreenToFile<span class="token punctuation">(</span>filename <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> format <span class="token keyword">As</span> ImageFormat<span class="token punctuation">)</span>
         <span class="token keyword">Dim</span> img <span class="token keyword">As</span> Image <span class="token operator">=</span> CaptureScreen<span class="token punctuation">(</span><span class="token punctuation">)</span>
         img<span class="token punctuation">.</span>Save<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> format<span class="token punctuation">)</span>
      <span class="token keyword">End</span> <span class="token keyword">Sub</span> <span class="token comment">&#39;CaptureScreenToFile</span>
       <span class="token operator">_</span>
      
      <span class="token comment">&#39;/ &lt;summary&gt;</span>
      <span class="token comment">&#39;/ Helper class containing Gdi32 API functions</span>
      <span class="token comment">&#39;/ &lt;/summary&gt;</span>
      <span class="token keyword">Private</span> <span class="token keyword">Class</span> GDI32Class GDI32
         
         <span class="token keyword">Public</span> SRCCOPY <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> <span class="token number">&amp;HCC0020</span>
          <span class="token comment">&#39; BitBlt dwRop parameter</span>
         <span class="token keyword">Public</span> <span class="token keyword">Shared</span><span class="token operator">&lt;</span>DllImport<span class="token punctuation">(</span><span class="token string">&quot;gdi32.dll&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>  <span class="token operator">_</span>
         <span class="token keyword">Function</span> BitBlt<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">Function</span> BitBlt<span class="token punctuation">(</span>hObject <span class="token keyword">As</span> IntPtr<span class="token punctuation">,</span> nXDest <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">,</span> nYDest <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">,</span> nWidth <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">,</span> nHeight <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">,</span> hObjectSource <span class="token keyword">As</span> IntPtr<span class="token punctuation">,</span> nXSrc <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">,</span> nYSrc <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">,</span> dwRop <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Boolean</span>
         
         <span class="token keyword">Public</span> <span class="token keyword">Shared</span><span class="token operator">&lt;</span>DllImport<span class="token punctuation">(</span><span class="token string">&quot;gdi32.dll&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>  <span class="token operator">_</span>
         <span class="token keyword">Function</span> CreateCompatibleBitmap<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">Function</span> CreateCompatibleBitmap<span class="token punctuation">(</span>hDC <span class="token keyword">As</span> IntPtr<span class="token punctuation">,</span> nWidth <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">,</span> nHeight <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">)</span> <span class="token keyword">As</span> IntPtr
         
         <span class="token keyword">Public</span> <span class="token keyword">Shared</span><span class="token operator">&lt;</span>DllImport<span class="token punctuation">(</span><span class="token string">&quot;gdi32.dll&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>  <span class="token operator">_</span>
         <span class="token keyword">Function</span> CreateCompatibleDC<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">Function</span> CreateCompatibleDC<span class="token punctuation">(</span>hDC <span class="token keyword">As</span> IntPtr<span class="token punctuation">)</span> <span class="token keyword">As</span> IntPtr
         
         <span class="token keyword">Public</span> <span class="token keyword">Shared</span><span class="token operator">&lt;</span>DllImport<span class="token punctuation">(</span><span class="token string">&quot;gdi32.dll&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>  <span class="token operator">_</span>
         <span class="token keyword">Function</span> DeleteDC<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">Function</span> DeleteDC<span class="token punctuation">(</span>hDC <span class="token keyword">As</span> IntPtr<span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Boolean</span>
         
         <span class="token keyword">Public</span> <span class="token keyword">Shared</span><span class="token operator">&lt;</span>DllImport<span class="token punctuation">(</span><span class="token string">&quot;gdi32.dll&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>  <span class="token operator">_</span>
         <span class="token keyword">Function</span> DeleteObject<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">Function</span> DeleteObject<span class="token punctuation">(</span>hObject <span class="token keyword">As</span> IntPtr<span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Boolean</span>
         
         <span class="token keyword">Public</span> <span class="token keyword">Shared</span><span class="token operator">&lt;</span>DllImport<span class="token punctuation">(</span><span class="token string">&quot;gdi32.dll&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>  <span class="token operator">_</span>
         <span class="token keyword">Function</span> SelectObject<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">Function</span> SelectObject<span class="token punctuation">(</span>hDC <span class="token keyword">As</span> IntPtr<span class="token punctuation">,</span> hObject <span class="token keyword">As</span> IntPtr<span class="token punctuation">)</span> <span class="token keyword">As</span> IntPtr
      <span class="token keyword">End</span> <span class="token keyword">Class</span> <span class="token comment">&#39;GDI32</span>
       <span class="token operator">_</span>
      
      <span class="token comment">&#39;/ &lt;summary&gt;</span>
      <span class="token comment">&#39;/ Helper class containing User32 API functions</span>
      <span class="token comment">&#39;/ &lt;/summary&gt;</span>
      <span class="token keyword">Private</span> <span class="token keyword">Class</span> User32Class User32
         <span class="token operator">&lt;</span>StructLayout<span class="token punctuation">(</span>LayoutKind<span class="token punctuation">.</span>Sequential<span class="token punctuation">)</span><span class="token operator">&gt;</span>  <span class="token operator">_</span>
         <span class="token keyword">Public</span> <span class="token keyword">Structure</span> RECTStructure RECT
            <span class="token keyword">Public</span> left <span class="token keyword">As</span> <span class="token keyword">Integer</span>
            <span class="token keyword">Public</span> top <span class="token keyword">As</span> <span class="token keyword">Integer</span>
            <span class="token keyword">Public</span> right <span class="token keyword">As</span> <span class="token keyword">Integer</span>
            <span class="token keyword">Public</span> bottom <span class="token keyword">As</span> <span class="token keyword">Integer</span>
         <span class="token keyword">End</span> <span class="token keyword">Structure</span> <span class="token comment">&#39;RECT</span>
         
         <span class="token keyword">Public</span> <span class="token keyword">Shared</span><span class="token operator">&lt;</span>DllImport<span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>  <span class="token operator">_</span>
         <span class="token keyword">Function</span> GetDesktopWindow<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">Function</span> GetDesktopWindow<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> IntPtr
         
         <span class="token keyword">Public</span> <span class="token keyword">Shared</span><span class="token operator">&lt;</span>DllImport<span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>  <span class="token operator">_</span>
         <span class="token keyword">Function</span> GetWindowDC<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">Function</span> GetWindowDC<span class="token punctuation">(</span>hWnd <span class="token keyword">As</span> IntPtr<span class="token punctuation">)</span> <span class="token keyword">As</span> IntPtr
         
         <span class="token keyword">Public</span> <span class="token keyword">Shared</span><span class="token operator">&lt;</span>DllImport<span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>  <span class="token operator">_</span>
         <span class="token keyword">Function</span> ReleaseDC<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">Function</span> ReleaseDC<span class="token punctuation">(</span>hWnd <span class="token keyword">As</span> IntPtr<span class="token punctuation">,</span> hDC <span class="token keyword">As</span> IntPtr<span class="token punctuation">)</span> <span class="token keyword">As</span> IntPtr
         
         <span class="token keyword">Public</span> <span class="token keyword">Shared</span><span class="token operator">&lt;</span>DllImport<span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>  <span class="token operator">_</span>
         <span class="token keyword">Function</span> GetWindowRect<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">Function</span> GetWindowRect<span class="token punctuation">(</span>hWnd <span class="token keyword">As</span> IntPtr<span class="token punctuation">,</span> <span class="token keyword">ByRef</span> rect <span class="token keyword">As</span> RECT<span class="token punctuation">)</span> <span class="token keyword">As</span> IntPtr
      <span class="token keyword">End</span> <span class="token keyword">Class</span> <span class="token comment">&#39;User32</span>
   <span class="token keyword">End</span> <span class="token keyword">Class</span> <span class="token comment">&#39;ScreenCapture</span>
<span class="token keyword">End</span> <span class="token keyword">Namespace</span> <span class="token comment">&#39;ScreenShotDemo</span>
</code></pre></div><p>C#</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Imaging</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">ScreenShotDemo</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// Provides functions to capture the entire screen, or a particular window, and save it to a file.</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScreenCapture</span>
    <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// Creates an Image object containing a screen shot of the entire desktop</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name">Image</span> <span class="token function">CaptureScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">CaptureWindow</span><span class="token punctuation">(</span> User32<span class="token punctuation">.</span><span class="token function">GetDesktopWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// Creates an Image object containing a screen shot of a specific window</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handle<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>The handle to the window. (In windows forms, this is obtained by the Handle property)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name">Image</span> <span class="token function">CaptureWindow</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> handle<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// get te hDC of the target window</span>
            <span class="token class-name">IntPtr</span> hdcSrc <span class="token operator">=</span> User32<span class="token punctuation">.</span><span class="token function">GetWindowDC</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// get the size</span>
            <span class="token class-name">User32<span class="token punctuation">.</span>RECT</span> windowRect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">User32<span class="token punctuation">.</span>RECT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            User32<span class="token punctuation">.</span><span class="token function">GetWindowRect</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span><span class="token keyword">ref</span> windowRect<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">int</span></span> width <span class="token operator">=</span> windowRect<span class="token punctuation">.</span>right <span class="token operator">-</span> windowRect<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">int</span></span> height <span class="token operator">=</span> windowRect<span class="token punctuation">.</span>bottom <span class="token operator">-</span> windowRect<span class="token punctuation">.</span>top<span class="token punctuation">;</span>
            <span class="token comment">// create a device context we can copy to</span>
            <span class="token class-name">IntPtr</span> hdcDest <span class="token operator">=</span> GDI32<span class="token punctuation">.</span><span class="token function">CreateCompatibleDC</span><span class="token punctuation">(</span>hdcSrc<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// create a bitmap we can copy it to,</span>
            <span class="token comment">// using GetDeviceCaps to get the width/height</span>
            <span class="token class-name">IntPtr</span> hBitmap <span class="token operator">=</span> GDI32<span class="token punctuation">.</span><span class="token function">CreateCompatibleBitmap</span><span class="token punctuation">(</span>hdcSrc<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span> 
            <span class="token comment">// select the bitmap object</span>
            <span class="token class-name">IntPtr</span> hOld <span class="token operator">=</span> GDI32<span class="token punctuation">.</span><span class="token function">SelectObject</span><span class="token punctuation">(</span>hdcDest<span class="token punctuation">,</span>hBitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// bitblt over</span>
            GDI32<span class="token punctuation">.</span><span class="token function">BitBlt</span><span class="token punctuation">(</span>hdcDest<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">,</span>hdcSrc<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>GDI32<span class="token punctuation">.</span>SRCCOPY<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// restore selection</span>
            GDI32<span class="token punctuation">.</span><span class="token function">SelectObject</span><span class="token punctuation">(</span>hdcDest<span class="token punctuation">,</span>hOld<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// clean up </span>
            GDI32<span class="token punctuation">.</span><span class="token function">DeleteDC</span><span class="token punctuation">(</span>hdcDest<span class="token punctuation">)</span><span class="token punctuation">;</span>
            User32<span class="token punctuation">.</span><span class="token function">ReleaseDC</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span>hdcSrc<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// get a .NET image object for it</span>
            <span class="token class-name">Image</span> img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromHbitmap</span><span class="token punctuation">(</span>hBitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// free up the Bitmap object</span>
            GDI32<span class="token punctuation">.</span><span class="token function">DeleteObject</span><span class="token punctuation">(</span>hBitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> img<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// Captures a screen shot of a specific window, and saves it to a file</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handle<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filename<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>format<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CaptureWindowToFile</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> handle<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> filename<span class="token punctuation">,</span> <span class="token class-name">ImageFormat</span> format<span class="token punctuation">)</span> 
        <span class="token punctuation">{</span>
            <span class="token class-name">Image</span> img <span class="token operator">=</span> <span class="token function">CaptureWindow</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">;</span>
            img<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span>format<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// Captures a screen shot of the entire desktop, and saves it to a file</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filename<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>format<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CaptureScreenToFile</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> filename<span class="token punctuation">,</span> <span class="token class-name">ImageFormat</span> format<span class="token punctuation">)</span> 
        <span class="token punctuation">{</span>
            <span class="token class-name">Image</span> img <span class="token operator">=</span> <span class="token function">CaptureScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            img<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span>format<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
       
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// Helper class containing Gdi32 API functions</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">GDI32</span>
        <span class="token punctuation">{</span>            
            <span class="token keyword">public</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> SRCCOPY <span class="token operator">=</span> <span class="token number">0x00CC0020</span><span class="token punctuation">;</span> <span class="token comment">// BitBlt dwRop parameter</span>

            <span class="token punctuation">[</span><span class="token function">DllImport</span><span class="token punctuation">(</span><span class="token string">&quot;gdi32.dll&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
            <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">BitBlt</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hObject<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> nXDest<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> nYDest<span class="token punctuation">,</span>
                <span class="token class-name"><span class="token keyword">int</span></span> nWidth<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> nHeight<span class="token punctuation">,</span><span class="token class-name">IntPtr</span> hObjectSource<span class="token punctuation">,</span>
                <span class="token class-name"><span class="token keyword">int</span></span> nXSrc<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> nYSrc<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> dwRop<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">CreateCompatibleBitmap</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hDC<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> nWidth<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> nHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">CreateCompatibleDC</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hDC<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">DeleteDC</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hDC<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">DeleteObject</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;gdi32.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">SelectObject</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hDC<span class="token punctuation">,</span><span class="token class-name">IntPtr</span> hObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
 
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// Helper class containing User32 API functions</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">User32</span>
        <span class="token punctuation">{</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">StructLayout</span><span class="token attribute-arguments"><span class="token punctuation">(</span>LayoutKind<span class="token punctuation">.</span>Sequential<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token keyword">public</span> <span class="token keyword">struct</span> <span class="token class-name">RECT</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> left<span class="token punctuation">;</span>
                <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> top<span class="token punctuation">;</span>
                <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> right<span class="token punctuation">;</span>
                <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> bottom<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">GetDesktopWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">GetWindowDC</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">ReleaseDC</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">,</span><span class="token class-name">IntPtr</span> hDC<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
            <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">GetWindowRect</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">,</span><span class="token keyword">ref</span> <span class="token class-name">RECT</span> rect<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><blockquote><p>posted on 2004-09-25 10:53 小牛哥 阅读(85) 评论(1)</p></blockquote><hr><hr><p>2004-09-26 03:17 | zealic</p><blockquote><p>太麻烦了,抓窗口只需要两个API</p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">Image</span> <span class="token function">GetFormScreen</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hwnd<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Control</span> n_Form <span class="token operator">=</span> <span class="token punctuation">(</span>Control<span class="token punctuation">)</span>Control<span class="token punctuation">.</span><span class="token function">FromHandle</span><span class="token punctuation">(</span>hwnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Image</span> n_Serceen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Bitmap</span><span class="token punctuation">(</span>n_Form<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> n_Form<span class="token punctuation">.</span>Height<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Graphics</span> ImgGrp <span class="token operator">=</span> Graphics<span class="token punctuation">.</span><span class="token function">FromImage</span><span class="token punctuation">(</span>n_Serceen<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IntPtr</span> Hdc <span class="token operator">=</span> ImgGrp<span class="token punctuation">.</span><span class="token function">GetHdc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IntPtr</span> scrDC <span class="token operator">=</span> Library<span class="token punctuation">.</span>User32<span class="token punctuation">.</span><span class="token function">GetWindowDC</span><span class="token punctuation">(</span>hwnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Gdi32<span class="token punctuation">.</span><span class="token function">BitBlt</span><span class="token punctuation">(</span>Hdc<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n_Form<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> n_Form<span class="token punctuation">.</span>Height<span class="token punctuation">,</span> scrDC<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> SRCCOPY<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ImgGrp<span class="token punctuation">.</span><span class="token function">ReleaseHdc</span><span class="token punctuation">(</span>Hdc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> n_Serceen<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><blockquote><p>抓屏幕只需要3个</p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">Image</span> <span class="token function">PrintScreen</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> X<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> Y<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">int</span></span> Width<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> Height<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Image</span> n_Serceen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Bitmap</span><span class="token punctuation">(</span>Width<span class="token punctuation">,</span> Height<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Graphics</span> ImgGrp <span class="token operator">=</span> Graphics<span class="token punctuation">.</span><span class="token function">FromImage</span><span class="token punctuation">(</span>n_Serceen<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IntPtr</span> Hdc <span class="token operator">=</span> ImgGrp<span class="token punctuation">.</span><span class="token function">GetHdc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IntPtr</span> scrDC <span class="token operator">=</span> User32<span class="token punctuation">.</span><span class="token function">GetWindowDC</span><span class="token punctuation">(</span>User32<span class="token punctuation">.</span><span class="token function">GetDesktopWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Gdi32<span class="token punctuation">.</span><span class="token function">BitBlt</span><span class="token punctuation">(</span>Hdc<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Width<span class="token punctuation">,</span> Height<span class="token punctuation">,</span> scrDC<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Enum<span class="token punctuation">.</span>PatBlt<span class="token punctuation">.</span>SRCCOPY<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ImgGrp<span class="token punctuation">.</span><span class="token function">ReleaseHdc</span><span class="token punctuation">(</span>Hdc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> n_Serceen<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,23),e=[o];function c(l,u){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","pic_img7.html.vue"]]);export{i as default};
