import{_ as a,o as n,c as s,a as e}from"./app-d9da1b6d.js";const t={},o=e(`<h1 id="几个c-技巧" tabindex="-1"><a class="header-anchor" href="#几个c-技巧" aria-hidden="true">#</a> 几个C#技巧</h1><h2 id="几个c-技巧-一" tabindex="-1"><a class="header-anchor" href="#几个c-技巧-一" aria-hidden="true">#</a> 几个C#技巧（一）</h2><blockquote><p>作者：罗会涛</p></blockquote><h3 id="技巧1" tabindex="-1"><a class="header-anchor" href="#技巧1" aria-hidden="true">#</a> 技巧1</h3><p><code>AppDomain.CurrentDomain.BaseDirectory</code> 相当于<code>App.Path</code></p><h3 id="技巧2" tabindex="-1"><a class="header-anchor" href="#技巧2" aria-hidden="true">#</a> 技巧2</h3><p>如果需要在字符串末尾增加回车换行，</p><p>应该是：<code>s = s + &quot;\\r\\n&quot;;</code>而不是： <code>s = s + &quot;\\n\\r&quot;;</code> 次序将影响s在TextBox中的显示。</p><h3 id="技巧3" tabindex="-1"><a class="header-anchor" href="#技巧3" aria-hidden="true">#</a> 技巧3</h3><p>在C#中，有一些提供静态方法的类，这些类可以不用实例化直接调用其方法，就像全局函数一样。这样的类有：<code>Application、File、MessageBox、DialogResult</code>等等。比如：<code>b=File.Exists(FilePath);</code></p><h3 id="技巧4" tabindex="-1"><a class="header-anchor" href="#技巧4" aria-hidden="true">#</a> 技巧4</h3><p>C#中没有VB那样的Beep语句。</p><h3 id="技巧5" tabindex="-1"><a class="header-anchor" href="#技巧5" aria-hidden="true">#</a> 技巧5</h3><p>不再是<code>ListBox.Style</code>，而是另外一种<code>Control: CheckedListBox</code>。</p><h3 id="巧6" tabindex="-1"><a class="header-anchor" href="#巧6" aria-hidden="true">#</a> 巧6</h3><p>DataType of DataColumn</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">DataColumn</span> dcID<span class="token punctuation">;</span>
dcID<span class="token punctuation">.</span>DataType<span class="token operator">=</span>System<span class="token punctuation">.</span>Type<span class="token punctuation">.</span><span class="token function">GetType</span><span class="token punctuation">(</span><span class="token string">&quot;System.String&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="几个c-技巧-二" tabindex="-1"><a class="header-anchor" href="#几个c-技巧-二" aria-hidden="true">#</a> 几个C#技巧（二）</h2><h3 id="技巧1-1" tabindex="-1"><a class="header-anchor" href="#技巧1-1" aria-hidden="true">#</a> 技巧1</h3><p>字符串的<code>.Trim()</code>方法可以将空格和回车一并去掉。</p><h3 id="技巧2-1" tabindex="-1"><a class="header-anchor" href="#技巧2-1" aria-hidden="true">#</a> 技巧2</h3><p>除了代码编辑窗口中的字体之外，Solution Explorer等窗格中的字体也可以通过<code>Options</code>的<code>Fonts and Colors</code>进行设置，方法是选择Show Settings for为Dialogs and Tool Windows,默认的宋体9号不如Verdana 8号字体美观。</p><h3 id="技巧3-1" tabindex="-1"><a class="header-anchor" href="#技巧3-1" aria-hidden="true">#</a> 技巧3</h3><p>连接两个字符串的操作，在C#中是+。但是要注意：不同类型的数据不能直接用+串，事先应使用.ToString()转换为字符串，如： <code>dt.Rows[0].ItemArray[0].ToString() + dt.Rows[0].ItemArray[01]</code></p><h3 id="技巧4-1" tabindex="-1"><a class="header-anchor" href="#技巧4-1" aria-hidden="true">#</a> 技巧4</h3><p>Queued Components这种部件支持异步调用，客户端不用等服务器马上响应，也许可以用来实现Run MRP这样的操作：远程发送“开始运行”命令，完毕用另外一种方式通知。</p><h3 id="技巧5-1" tabindex="-1"><a class="header-anchor" href="#技巧5-1" aria-hidden="true">#</a> 技巧5</h3><p>不用定义对象就可调用的方法，可以用Modules来实现。</p><h3 id="技巧6" tabindex="-1"><a class="header-anchor" href="#技巧6" aria-hidden="true">#</a> 技巧6</h3><p>Default OK &amp; Cancel Button：对应于VB Form中的CommandButton.Default和.Cancel属性，WinForm中可在Form（而非Button）的属性中设置AcceptButton和CancelButton。</p><h3 id="技巧7" tabindex="-1"><a class="header-anchor" href="#技巧7" aria-hidden="true">#</a> 技巧7</h3><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">Unload</span> me <span class="token keyword">in</span> C#
This<span class="token punctuation">.</span>Close
</code></pre></div><div class="language-txt" data-ext="txt"><pre class="language-txt"><code>关于作者:
作者是GrapeCity开发人员。
</code></pre></div><h2 id="几个c-技巧-三" tabindex="-1"><a class="header-anchor" href="#几个c-技巧-三" aria-hidden="true">#</a> 几个C#技巧（三）</h2><blockquote><p>作者：罗会涛，杨波</p></blockquote><h3 id="技巧1-2" tabindex="-1"><a class="header-anchor" href="#技巧1-2" aria-hidden="true">#</a> 技巧1</h3><p>正向查找： <code>i=s.indexOf(substr[,startindex]);</code></p><p>逆向查找： <code>i=s.lastIndexOf(substr[,startindex]);</code></p><p>注意大小写：last不是Last</p><h3 id="技巧2-2" tabindex="-1"><a class="header-anchor" href="#技巧2-2" aria-hidden="true">#</a> 技巧2</h3><p>KeyPress事件中判断KeyCode <code>if(e.KeyChar == (char)13) e.Handled=true;</code></p><p>或者</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>KeyChar <span class="token operator">==</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Keys<span class="token punctuation">.</span>Return<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>
    e<span class="token punctuation">.</span>Handled<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="技巧3-2" tabindex="-1"><a class="header-anchor" href="#技巧3-2" aria-hidden="true">#</a> 技巧3</h3><p>KeyPress事件中一般会处理参数e中键值，处理完毕，应：<code>e.Handled = true;</code>否则可能会有beep一声。原来VB中将键值设为0的办法已经行不通了。</p><h3 id="技巧4-2" tabindex="-1"><a class="header-anchor" href="#技巧4-2" aria-hidden="true">#</a> 技巧4</h3><p>Numeric Format Strings</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> d <span class="token operator">=</span> <span class="token number">123.456</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">&quot;#,##0.00;(#,##0.00)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="技巧5-2" tabindex="-1"><a class="header-anchor" href="#技巧5-2" aria-hidden="true">#</a> 技巧5</h3><p>如果觉得VSS与IDE绑定比较好，而想要在细节操作方面更加方便，可以在Tools/Options/Source Control选项中设定，例如在CheckIn时维持CheckOut状态等。</p><p>如果觉得VSS与IDE绑定不太好，想要解开绑定，也很简单：File/Source Control/Change Source Control Unbind几次就行了。</p><h3 id="技巧6-1" tabindex="-1"><a class="header-anchor" href="#技巧6-1" aria-hidden="true">#</a> 技巧6</h3><p>定义一个对象变量时，建议先给一个null初值，例如：<code>XmlDocument a = null;</code>否则，在 finally 等子句中可能编译出错，错误信息是“使用了unassigned的变量”。</p><div class="language-txt" data-ext="txt"><pre class="language-txt"><code>关于作者:
罗会涛是GrapeCity公司的技术总监。曾与他人合作著有《精通MS SQL Server 7.0》和《会计电算化实用技术》等书，在《计算机世界报》发表文章数篇。并曾在两届微软DevDays技术大会上授课。
杨波是GrapeCity公司工具开发部主力。从事component软件的开发。
</code></pre></div><h2 id="几个c-技巧-四" tabindex="-1"><a class="header-anchor" href="#几个c-技巧-四" aria-hidden="true">#</a> 几个C#技巧（四）</h2><h3 id="技巧1-3" tabindex="-1"><a class="header-anchor" href="#技巧1-3" aria-hidden="true">#</a> 技巧1</h3><p>有一个类似VB6的OpenFileDialog控件，不过专门用于FileOpen操作，不再跟Font等对话框混在一起。主要属性：MultiSelect,ShowReadOnly,ReadOnlyChecked,Filter, 例子：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Open a file open dailog</span>
dlgFile<span class="token punctuation">.</span>Filter <span class="token operator">=</span> <span class="token string">&quot;XML files(*.xml)|*.xml|All files (*.*)|*.*&quot;</span><span class="token punctuation">;</span>
dlgFile<span class="token punctuation">.</span><span class="token function">ShowDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
strFilePath<span class="token operator">=</span>dlgFile<span class="token punctuation">.</span>FileName<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>strFilePath<span class="token operator">==</span><span class="token string">&quot;&quot;</span> <span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="技巧2-3" tabindex="-1"><a class="header-anchor" href="#技巧2-3" aria-hidden="true">#</a> 技巧2</h3><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code>Try
<span class="token punctuation">{</span>
    Cursor<span class="token punctuation">.</span>Current<span class="token operator">=</span>Cursors<span class="token punctuation">.</span>WaitCursor<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
Catch
<span class="token punctuation">{</span>
<span class="token punctuation">}</span>
Finally
<span class="token punctuation">{</span>
    Cursor<span class="token punctuation">.</span>Current<span class="token operator">=</span>Cursors<span class="token punctuation">.</span>Default<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="技巧3-3" tabindex="-1"><a class="header-anchor" href="#技巧3-3" aria-hidden="true">#</a> 技巧3</h3><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// DoEvents in C#</span>
Application<span class="token punctuation">.</span><span class="token function">DoEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="技巧4-3" tabindex="-1"><a class="header-anchor" href="#技巧4-3" aria-hidden="true">#</a> 技巧4</h3><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Replace method of string</span>
strTmp<span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span>old<span class="token punctuation">,</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="技巧5-3" tabindex="-1"><a class="header-anchor" href="#技巧5-3" aria-hidden="true">#</a> 技巧5</h3><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Set Nothing in C#</span>
obj <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="技巧6-2" tabindex="-1"><a class="header-anchor" href="#技巧6-2" aria-hidden="true">#</a> 技巧6</h3><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// C# Array declaration</span>
<span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> varname<span class="token punctuation">;</span>
</code></pre></div>`,68),p=[o];function c(r,d){return n(),s("div",null,p)}const l=a(t,[["render",c],["__file","summary8.html.vue"]]);export{l as default};
