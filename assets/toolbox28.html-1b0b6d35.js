import{_ as n,o as s,c as a,a as t}from"./app-a2b6e588.js";const p="/steven-blogs/assets/toolbox28_1-f3b64e66.png",o="/steven-blogs/assets/toolbox28_2-6141c1aa.png",e={},c=t('<h1 id="如何使用propertygrid控件实现visual-studio-net-ide中的属性页" tabindex="-1"><a class="header-anchor" href="#如何使用propertygrid控件实现visual-studio-net-ide中的属性页" aria-hidden="true">#</a> 如何使用PropertyGrid控件实现Visual Studio .NET IDE中的属性页</h1><h2 id="本文内容" tabindex="-1"><a class="header-anchor" href="#本文内容" aria-hidden="true">#</a> 本文内容</h2><ul><li>概述</li><li>平台需求</li><li>实验一：小试牛刀</li><li>实验二：用PropertyGrid来控制自己的类</li></ul><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p>使用微软Visual Studio .NET IDE的人一定会觉得界面里的Property那一页非常好，它能让人们方便地设置控件的各种属性。</p><p>如何在您自己编写的程序里面使用这个控件呢？我们将通过下面两个例子来给您介绍如何使用这个控件。</p><h2 id="平台需求" tabindex="-1"><a class="header-anchor" href="#平台需求" aria-hidden="true">#</a> 平台需求</h2><p>Visual Studio .NET<br> Visual C# .NET</p><h2 id="实验一-小试牛刀" tabindex="-1"><a class="header-anchor" href="#实验一-小试牛刀" aria-hidden="true">#</a> 实验一：小试牛刀</h2><p>1、打开Visual Studio .NET，新建一个C# Windows Application项目。<br> 2、往Form1上拖两个界面控件，一个是Button，另外一个就是PropertyGrid (在Visual Stuido .NET IDE中，默认情况下是不显示该控件的，您可以右键点击&quot;Toolbox&quot;那一页，选择&quot;Customize Toolbox …&quot;，在弹出的新窗口中，选择&quot;.NET Framework Components&quot;，在&quot;PropertyGrid&quot;前的方框中打上勾，并点击&quot;OK&quot;) 。<br> 3、选中PropertyGrid1，在Property页中将SelectObject属性设置为button1。</p><p><img src="'+p+'" alt="img_1"></p><p>4、编译并运行该项目。<br> 您可以发现，一旦您更改PropertyGrid中的值，就可以发现Button上相应的属性发生了变化。</p><p><img src="'+o+`" alt="img_2"></p><h2 id="实验二-用propertygrid来控制自己的类" tabindex="-1"><a class="header-anchor" href="#实验二-用propertygrid来控制自己的类" aria-hidden="true">#</a> 实验二：用PropertyGrid来控制自己的类</h2><p>1、打开Visual Studio .NET，新建一个C# Windows Application项目。<br> 2、往Form1上拖一个PropertyGrid 控件。<br> 3、在项目中添加一个新的cs文件，命名为MyType.cs。将下列代码copy代该文件中，覆盖原来的代码。</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>ComponentModel</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">TestPropertyPage</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Day</span>
    <span class="token punctuation">{</span> Sunday<span class="token punctuation">,</span> Monday<span class="token punctuation">,</span> Tuesday<span class="token punctuation">,</span> Wednesday<span class="token punctuation">,</span> Thursday<span class="token punctuation">,</span> Friday<span class="token punctuation">,</span> Saturday<span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">myType</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">int</span></span> _value<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Point</span> _center<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Color</span> _highlight<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Font</span> _title <span class="token operator">=</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Control<span class="token punctuation">.</span>DefaultFont<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Day</span> _startDay <span class="token operator">=</span> Day<span class="token punctuation">.</span>Sunday<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">myType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Description</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;This is the center point position.&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token class-name">Category</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Location&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">public</span> <span class="token return-type class-name">Point</span> Center
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_center<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_center <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Description</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;This is the highlight color.&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token class-name">Category</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Appearance&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">public</span> <span class="token return-type class-name">Color</span> HighLight
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_highlight<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_highlight <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Description</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;This is the title&#39;s font style.&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token class-name">Category</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Appearance&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">public</span> <span class="token return-type class-name">Font</span> TitleFont
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_title<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>_title <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Description</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;What day is today?&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token class-name">Category</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Others&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">public</span> <span class="token return-type class-name">Day</span> StartDay
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_startDay<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_startDay <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>4、在Form1.cs中添加如下代码：</p><p>1）在Form1类中添加一个成员变量：</p><p><code>private myType newType = null;</code></p><p>2）然后在构造函数中添加：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">this</span><span class="token punctuation">.</span>newType <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">myType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>propertyGrid1<span class="token punctuation">.</span>SelectedObject<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>newType<span class="token punctuation">;</span>
</code></pre></div><p>5、编译并运行该项目。</p><div class="language-txt" data-ext="txt"><pre class="language-txt"><code>作者：韩定一
2002 年 8 月 2 日
</code></pre></div>`,23),u=[c];function l(i,k){return s(),a("div",null,u)}const d=n(e,[["render",l],["__file","toolbox28.html.vue"]]);export{d as default};
