import{_ as n,o as s,c as a,a as t}from"./app-382facc7.js";const p={},e=t(`<h1 id="什么是高质量的代码" tabindex="-1"><a class="header-anchor" href="#什么是高质量的代码" aria-hidden="true">#</a> 什么是高质量的代码</h1><p>看到了孙展波周末休闲之.NET Quiz (10) 的一道题：</p><p>以下代码质量不高，因为有经验的.NET程序员不会这样编程。如何修改？</p><p>（代码背景： Suppose we are writing a control class that raises Loaded event when it is fully loaded. There is no need to provide additional information for this event. The method that is called to raise the event looks like this: ）</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">FireLoadedEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Loaded <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">EventArgs</span> args <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">EventArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">Loaded</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>这道题的正确答案是：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnLoaded</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Loaded <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">Loaded</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> EventArgs<span class="token punctuation">.</span>Empty<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>如果单论为编写一段代码而写代码，题中的代码也未尝不可，但是，如果这是一个具有行为的控件就不能这样做了。</p><p>首先，引发 Event 的方法必须以 On 开始，这是编码的规范；其次，作为控件，应该具有行为扩展功能，<code>protected virtual</code> 的方法使这个行为在派生类中能够被赋予内多的内容；其三，<code>EventArgs args = new EventArgs();</code>会使方法在每一次被调用时都初始化一个新实例，从内存和时间分配上都划不来，而 <code>EventArgs.Empty</code> 是一个 static 字段，只是在第一次被调用时初始化，这样便提高了程序性能。</p><p>以小见大，在我们日常的编码中，能想得到这些吗？</p><p>P.S. 以前在 CSDN.NET 上看到一个帖子，讲的是&#39;=&#39;两边留不留空格的问题，那么，您留吗？</p>`,11),o=[e];function c(l,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","cspcsg7.html.vue"]]);export{r as default};
