import{_ as p,r as o,o as e,c,b as n,d as s,e as t,a as u}from"./app-a2b6e588.js";const l="/steven-blogs/assets/gpu-2be68964.png",i="/steven-blogs/assets/949mx-85efb380.png",r="/steven-blogs/assets/result-0e8c3020.png",k={},d=n("h1",{id:"win10-下-tensorflow-gpu-2-5-环境搭建",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#win10-下-tensorflow-gpu-2-5-环境搭建","aria-hidden":"true"},"#"),s(" Win10 下 tensorflow-gpu 2.5 环境搭建")],-1),_=n("h2",{id:"简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),s(" 简介")],-1),m={href:"https://tensorflow.google.cn/install/source_windows#gpu",target:"_blank",rel:"noopener noreferrer"},g=n("p",null,[n("img",{src:l,alt:"tensorflow-gpu"})],-1),h=n("h2",{id:"电脑配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#电脑配置","aria-hidden":"true"},"#"),s(" 电脑配置")],-1),f=n("p",null,"当前显卡：NVIDIA GeForce 940MX",-1),b={href:"https://developer.nvidia.com/zh-cn/cuda-gpus",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.nvidia.com/en-us/geforce/gaming-laptops/geforce-940mx/specifications/",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,[n("img",{src:i,alt:"940mx"})],-1),v=n("h2",{id:"文件下载",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#文件下载","aria-hidden":"true"},"#"),s(" 文件下载")],-1),x={href:"https://www.nvidia.cn/Download/index.aspx?lang=cn",target:"_blank",rel:"noopener noreferrer"},D={href:"https://www.nvidia.cn/Download/driverResults.aspx/180691/cn",target:"_blank",rel:"noopener noreferrer"},N={href:"https://developer.nvidia.com/cuda-toolkit-archive",target:"_blank",rel:"noopener noreferrer"},z=n("blockquote",null,[n("p",null,[s("选择的 11.2 里面的 "),n("code",null,"CUDA Toolkit 11.2.1"),s("，理论上11.2的任何一个版本都可以")])],-1),I={href:"https://developer.nvidia.com/zh-cn/cudnn?term=cudnn",target:"_blank",rel:"noopener noreferrer"},C={href:"https://developer.nvidia.com/rdp/cudnn-archive",target:"_blank",rel:"noopener noreferrer"},T={href:"https://developer.nvidia.com/compute/machine-learning/cudnn/secure/8.1.0.77/11.2_20210127/cudnn-11.2-windows-x64-v8.1.0.77.zip",target:"_blank",rel:"noopener noreferrer"},A=n("h2",{id:"安装及配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装及配置","aria-hidden":"true"},"#"),s(" 安装及配置")],-1),U=n("li",null,[n("p",null,[s("按照下载顺序安装，nvidia 显卡在 命令行(cmd) 中输入 "),n("code",null,"nvidia-smi"),s(" 可以查看信息；cuda 可以用输入 "),n("code",null,"nvcc --version"),s(" 查看信息。cudnn 无需安装解压后，放到自己想放的位置，然后配置路径即可")])],-1),F=n("p",null,[s("环境变量配置： 在环境变量"),n("code",null,"PATH"),s(" 添加下面位置的信息")],-1),P=n("div",{class:"language-cmd","data-ext":"cmd"},[n("pre",{class:"language-cmd"},[n("code",null,`  C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.0\\bin;
  C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.0\\extras\\CUPTI\\lib64;
  C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.0\\include;
  C:\\tools\\cuda\\bin;   # 这个是 cudnn 的位置，按照选的配置
`)])],-1),S=n("blockquote",null,[n("p",null,[s("不配置可能会报错，"),n("code",null,"Could not load dynamic library 'cudart64_110.dll'; dlerror: cudart64_110.dll not found")])],-1),V={href:"https://www.tensorflow.org/install/gpu#windows_setup",target:"_blank",rel:"noopener noreferrer"},q=n("li",null,[n("p",null,[n("code",null,"tensorflow_gpu-2.5.0"),s(" 配置，我是安装了 conda 然后直接安装的，很方便；下面给一些命令参考")]),n("div",{class:"language-cmd","data-ext":"cmd"},[n("pre",{class:"language-cmd"},[n("code",null,`  conda create -n [替换成环境名称] python=3.8   # 创建一个 python 3.8 的环境
  conda activate [环境名称]                    # 激活对应 环境名称 的环境
  conda install tensorflow-gpu==2.5           # 安装 tensorflow-gpu 2.5   
`)])])],-1),G=n("p",null,"一些镜像源：",-1),M=n("div",{class:"language-txt","data-ext":"txt"},[n("pre",{class:"language-txt"},[n("code",null,`https://mirrors.bfsu.edu.cn/anaconda/pkgs/free/win-64
https://mirrors.bfsu.edu.cn/anaconda/pkgs/free/noarch
https://mirrors.bfsu.edu.cn/anaconda/pkgs/main/win-64
https://mirrors.bfsu.edu.cn/anaconda/pkgs/main/noarch
https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/win-64
https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/noarch
https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/win-64
https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/noarch
`)])],-1),B=n("h2",{id:"运行程序",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#运行程序","aria-hidden":"true"},"#"),s(" 运行程序")],-1),X={href:"https://docs.microsoft.com/zh-cn/learn/modules/intro-computer-vision-tensorflow/",target:"_blank",rel:"noopener noreferrer"},E=u(`<div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token comment"># https://docs.microsoft.com/zh-cn/learn/modules/intro-machine-learning-keras/2-data?source=learn</span>

<span class="token keyword">import</span> gzip
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf
<span class="token keyword">from</span> typing <span class="token keyword">import</span> Tuple
<span class="token keyword">import</span> requests
<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image

<span class="token keyword">class</span> <span class="token class-name">NeuralNetwork</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">super</span><span class="token punctuation">(</span>NeuralNetwork<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>sequence <span class="token operator">=</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>
      tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span>input_shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">&#39;relu&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">def</span> <span class="token function">call</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">:</span> tf<span class="token punctuation">.</span>Tensor<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> tf<span class="token punctuation">.</span>Tensor<span class="token punctuation">:</span>
    y_prime <span class="token operator">=</span> self<span class="token punctuation">.</span>sequence<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    <span class="token keyword">return</span> y_prime

labels_map <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token number">0</span><span class="token punctuation">:</span> <span class="token string">&#39;T-Shirt&#39;</span><span class="token punctuation">,</span>
    <span class="token number">1</span><span class="token punctuation">:</span> <span class="token string">&#39;Trouser&#39;</span><span class="token punctuation">,</span>
    <span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">&#39;Pullover&#39;</span><span class="token punctuation">,</span>
    <span class="token number">3</span><span class="token punctuation">:</span> <span class="token string">&#39;Dress&#39;</span><span class="token punctuation">,</span>
    <span class="token number">4</span><span class="token punctuation">:</span> <span class="token string">&#39;Coat&#39;</span><span class="token punctuation">,</span>
    <span class="token number">5</span><span class="token punctuation">:</span> <span class="token string">&#39;Sandal&#39;</span><span class="token punctuation">,</span>
    <span class="token number">6</span><span class="token punctuation">:</span> <span class="token string">&#39;Shirt&#39;</span><span class="token punctuation">,</span>
    <span class="token number">7</span><span class="token punctuation">:</span> <span class="token string">&#39;Sneaker&#39;</span><span class="token punctuation">,</span>
    <span class="token number">8</span><span class="token punctuation">:</span> <span class="token string">&#39;Bag&#39;</span><span class="token punctuation">,</span>
    <span class="token number">9</span><span class="token punctuation">:</span> <span class="token string">&#39;Ankle Boot&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

<span class="token keyword">def</span> <span class="token function">read_images</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> image_size<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> num_items<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> np<span class="token punctuation">.</span>ndarray<span class="token punctuation">:</span>
  <span class="token keyword">with</span> gzip<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> np<span class="token punctuation">.</span>frombuffer<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">,</span> offset<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>
    data <span class="token operator">=</span> data<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>num_items<span class="token punctuation">,</span> image_size<span class="token punctuation">,</span> image_size<span class="token punctuation">)</span>
  <span class="token keyword">return</span> data

<span class="token keyword">def</span> <span class="token function">read_labels</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> num_items<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> np<span class="token punctuation">.</span>ndarray<span class="token punctuation">:</span>
  <span class="token keyword">with</span> gzip<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> np<span class="token punctuation">.</span>frombuffer<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span>num_items <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">,</span> offset<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span>
    data <span class="token operator">=</span> data<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int64<span class="token punctuation">)</span>
  <span class="token keyword">return</span> data

<span class="token keyword">def</span> <span class="token function">get_data</span><span class="token punctuation">(</span>batch_size<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Tuple<span class="token punctuation">[</span>tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">,</span> tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">]</span><span class="token punctuation">:</span>
  image_size <span class="token operator">=</span> <span class="token number">28</span>
  num_train <span class="token operator">=</span> <span class="token number">60000</span>
  num_test <span class="token operator">=</span> <span class="token number">10000</span>

  training_images <span class="token operator">=</span> read_images<span class="token punctuation">(</span><span class="token string">&#39;data/FashionMNIST/raw/train-images-idx3-ubyte.gz&#39;</span><span class="token punctuation">,</span> image_size<span class="token punctuation">,</span> num_train<span class="token punctuation">)</span>
  test_images <span class="token operator">=</span> read_images<span class="token punctuation">(</span><span class="token string">&#39;data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz&#39;</span><span class="token punctuation">,</span> image_size<span class="token punctuation">,</span> num_test<span class="token punctuation">)</span>
  training_labels <span class="token operator">=</span> read_labels<span class="token punctuation">(</span><span class="token string">&#39;data/FashionMNIST/raw/train-labels-idx1-ubyte.gz&#39;</span><span class="token punctuation">,</span> num_train<span class="token punctuation">)</span>
  test_labels <span class="token operator">=</span> read_labels<span class="token punctuation">(</span><span class="token string">&#39;data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz&#39;</span><span class="token punctuation">,</span> num_test<span class="token punctuation">)</span>

  <span class="token comment"># (training_images, training_labels), (test_images, test_labels) = tf.keras.datasets.fashion_mnist.load_data()</span>

  train_dataset <span class="token operator">=</span> tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">.</span>from_tensor_slices<span class="token punctuation">(</span><span class="token punctuation">(</span>training_images<span class="token punctuation">,</span> training_labels<span class="token punctuation">)</span><span class="token punctuation">)</span>
  test_dataset <span class="token operator">=</span> tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">.</span>from_tensor_slices<span class="token punctuation">(</span><span class="token punctuation">(</span>test_images<span class="token punctuation">,</span> test_labels<span class="token punctuation">)</span><span class="token punctuation">)</span>

  train_dataset <span class="token operator">=</span> train_dataset<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> image<span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255.0</span><span class="token punctuation">,</span> label<span class="token punctuation">)</span><span class="token punctuation">)</span>
  test_dataset <span class="token operator">=</span> test_dataset<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> image<span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255.0</span><span class="token punctuation">,</span> label<span class="token punctuation">)</span><span class="token punctuation">)</span>

  train_dataset <span class="token operator">=</span> train_dataset<span class="token punctuation">.</span>batch<span class="token punctuation">(</span>batch_size<span class="token punctuation">)</span><span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
  test_dataset <span class="token operator">=</span> test_dataset<span class="token punctuation">.</span>batch<span class="token punctuation">(</span>batch_size<span class="token punctuation">)</span><span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>train_dataset<span class="token punctuation">,</span> test_dataset<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">training_phase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  learning_rate <span class="token operator">=</span> <span class="token number">0.1</span>
  batch_size <span class="token operator">=</span> <span class="token number">64</span>
  epochs <span class="token operator">=</span> <span class="token number">5</span>

  <span class="token punctuation">(</span>train_dataset<span class="token punctuation">,</span> test_dataset<span class="token punctuation">)</span> <span class="token operator">=</span> get_data<span class="token punctuation">(</span>batch_size<span class="token punctuation">)</span>

  model <span class="token operator">=</span> NeuralNetwork<span class="token punctuation">(</span><span class="token punctuation">)</span>

  loss_fn <span class="token operator">=</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>losses<span class="token punctuation">.</span>SparseCategoricalCrossentropy<span class="token punctuation">(</span>from_logits<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
  optimizer <span class="token operator">=</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>optimizers<span class="token punctuation">.</span>SGD<span class="token punctuation">(</span>learning_rate<span class="token punctuation">)</span>
  metrics <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;accuracy&#39;</span><span class="token punctuation">]</span>
  model<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>optimizer<span class="token punctuation">,</span> loss_fn<span class="token punctuation">,</span> metrics<span class="token punctuation">)</span>

  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\nFitting:&#39;</span><span class="token punctuation">)</span>
  model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_dataset<span class="token punctuation">,</span> epochs<span class="token operator">=</span>epochs<span class="token punctuation">)</span>
    
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\nEvaluating:&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">(</span>test_loss<span class="token punctuation">,</span> test_accuracy<span class="token punctuation">)</span> <span class="token operator">=</span> model<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span>test_dataset<span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;\\nTest accuracy: </span><span class="token interpolation"><span class="token punctuation">{</span>test_accuracy <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">:</span><span class="token format-spec">&gt;0.1f</span><span class="token punctuation">}</span></span><span class="token string">%, test loss: </span><span class="token interpolation"><span class="token punctuation">{</span>test_loss<span class="token punctuation">:</span><span class="token format-spec">&gt;8f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

  model<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&#39;outputs/model&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">inference_phase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\nPredicting:&#39;</span><span class="token punctuation">)</span>

  model <span class="token operator">=</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>models<span class="token punctuation">.</span>load_model<span class="token punctuation">(</span><span class="token string">&#39;outputs/model/&#39;</span><span class="token punctuation">)</span>

  url <span class="token operator">=</span> <span class="token string">&#39;https://raw.githubusercontent.com/MicrosoftDocs/tensorflow-learning-path/main/intro-keras/predict-image.png&#39;</span>

  <span class="token keyword">with</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>raw<span class="token punctuation">)</span> <span class="token keyword">as</span> image<span class="token punctuation">:</span>
    X <span class="token operator">=</span> np<span class="token punctuation">.</span>asarray<span class="token punctuation">(</span>image<span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255.0</span>

  predicted_vector <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X<span class="token punctuation">)</span>
  predicted_index <span class="token operator">=</span> np<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>predicted_vector<span class="token punctuation">)</span>
  predicted_name <span class="token operator">=</span> labels_map<span class="token punctuation">[</span>predicted_index<span class="token punctuation">]</span>

  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Predicted class: </span><span class="token interpolation"><span class="token punctuation">{</span>predicted_name<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

training_phase<span class="token punctuation">(</span><span class="token punctuation">)</span>
inference_phase<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>测试结果如图：</p><p><img src="`+r+'" alt="result"></p>',3);function L(H,J){const a=o("ExternalLinkIcon");return e(),c("div",null,[d,_,n("p",null,[s("机器学习环境搭建，tensorflow_gpu-2.5.0 + CUDA 11.2 + CUDNN 8.1 ；环境必须是这个，具体的可以参考"),n("a",m,[s("tensorflow官网"),t(a)]),s("的说明")]),g,h,f,n("p",null,[s("查看是否支持 CUDA ，支持的才能安装, "),n("a",b,[s("官网查看"),t(a)])]),n("p",null,[s("这里是 "),n("a",w,[s("NVIDIA GeForce 940MX的信息"),t(a)])]),y,v,n("ul",null,[n("li",null,[n("p",null,[s("NVIDIA 最新驱动下载"),n("a",x,[s("https://www.nvidia.cn/Download/index.aspx?lang=cn"),t(a)])]),n("blockquote",null,[n("p",null,[s("NVIDIA GeForce 940MX "),n("a",D,[s("最新驱动"),t(a)])])])]),n("li",null,[n("p",null,[s("CUDA toolkit 下载 "),n("a",N,[s("https://developer.nvidia.com/cuda-toolkit-archive"),t(a)])]),z]),n("li",null,[n("p",null,[s("CUDNN 下载 "),n("a",I,[s("https://developer.nvidia.com/zh-cn/cudnn?term=cudnn"),t(a)])]),n("blockquote",null,[n("p",null,[s("需要 NVIDIA 的账户，登录一下没有的注册一个，同意下协议就行；这里下载的 "),n("a",C,[s("8.1.0"),t(a)]),s(),n("a",T,[s("Download cuDNN v8.1.0 (January 26th, 2021), for CUDA 11.0,11.1 and 11.2"),t(a)])])])])]),A,n("ul",null,[U,n("li",null,[F,P,S,n("p",null,[s("参考官网"),n("a",V,[s("https://www.tensorflow.org/install/gpu#windows_setup"),t(a)])])]),q]),G,M,B,n("p",null,[s("测试的代码来自微软的"),n("a",X,[s("学习教程"),t(a)])]),E])}const W=p(k,[["render",L],["__file","TensorFlowGPU25.html.vue"]]);export{W as default};
