import{_ as n,o as s,c as a,a as t}from"./app-a2b6e588.js";const p={},o=t(`<h1 id="datagrid实时刷新的问题" tabindex="-1"><a class="header-anchor" href="#datagrid实时刷新的问题" aria-hidden="true">#</a> DataGrid实时刷新的问题</h1><div class="language-txt" data-ext="txt"><pre class="language-txt"><code>主　　题：  DataGrid实时刷新的问题！
作　　者：  Artist (黑猫警长)
等　　级：  ^
信 誉 值：  90
所属论坛：  .NET技术 C#
问题点数：  100
回复次数：  7
发表时间：  2003-4-19 14:39:09
</code></pre></div><p>将一个DataSet绑定到DataGrid上，<br> 从消息队列中异步接收消息，在事件处理方法中更新DataSet.</p><p>当执行<code>DataSet.Tables[0].Rows.Add</code>方法时，系统会卡住，不能响应其他操作。如：最大化，拖动窗口等。非常慢，好像死机。</p><p>但是如果把更新数据表的操作放在button的onclick事件中，就很正常，没有上述问题。</p><p>不知何故？</p><p>请指教！</p><hr><hr><p>回复人： Artist(黑猫警长) ( 一级(初级)) 信誉：90 2003-4-19 15:19:06 得分:0</p><blockquote><p>以下是我写的例子，大家有兴趣可以试一下。</p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token class-name">DataSet</span> ds<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">DataTable</span> dt<span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Form1_Load</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ds<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DataSet</span><span class="token punctuation">(</span><span class="token string">&quot;Test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dt<span class="token operator">=</span>ds<span class="token punctuation">.</span>Tables<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;TestTable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    dt<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;Test&quot;</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dataGrid1<span class="token punctuation">.</span><span class="token function">SetDataBinding</span><span class="token punctuation">(</span>ds<span class="token punctuation">,</span><span class="token string">&quot;TestTable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">MessageQueue</span> myQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MessageQueue</span><span class="token punctuation">(</span><span class="token string">&quot;.\\\\private$\\\\test_queue$&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myQueue<span class="token punctuation">.</span>Formatter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlMessageFormatter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Type<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">{</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myQueue<span class="token punctuation">.</span>ReceiveCompleted <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ReceiveCompletedEventHandler</span><span class="token punctuation">(</span>MyReceiveCompleted<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    myQueue<span class="token punctuation">.</span><span class="token function">BeginReceive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MyReceiveCompleted</span><span class="token punctuation">(</span><span class="token class-name">Object</span> source<span class="token punctuation">,</span><span class="token class-name">ReceiveCompletedEventArgs</span> asyncResult<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">MessageQueue</span> mq <span class="token operator">=</span> <span class="token punctuation">(</span>MessageQueue<span class="token punctuation">)</span>source<span class="token punctuation">;</span>
    <span class="token class-name">System<span class="token punctuation">.</span>Messaging<span class="token punctuation">.</span>Message</span> m <span class="token operator">=</span> mq<span class="token punctuation">.</span><span class="token function">EndReceive</span><span class="token punctuation">(</span>asyncResult<span class="token punctuation">.</span>AsyncResult<span class="token punctuation">)</span><span class="token punctuation">;</span>                    
    <span class="token class-name">DataRow</span> dr<span class="token operator">=</span>dt<span class="token punctuation">.</span><span class="token function">NewRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    dr<span class="token punctuation">[</span><span class="token string">&quot;Test&quot;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">)</span>m<span class="token punctuation">.</span>Body<span class="token punctuation">;</span>    
    ds<span class="token punctuation">.</span>Tables<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Rows<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>dr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mq<span class="token punctuation">.</span><span class="token function">BeginReceive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>回复人： Artist(黑猫警长) ( 一级(初级)) 信誉：90 2003-4-19 22:01:41 得分:0</p><blockquote><p>谢谢大家~经过我半天的研究问题已经解决！<br><br> 多线程处理最适合于运行类模块的处理器密集型过程。与其他组件不同的是，从单独的线程直接调用控件中的方法会存在一些问题。影响控件的方法只应该在创建控件的线程上执行。由于从一个线程封送调用并跨线程边界将其发送到另一个线程会耗费大量的系统资源，所以应避免重复调用其他线程上的控件。在最佳情况下，从其他线程直接进行调用将耗费大量资源，进而使应用程序的性能受损。在最坏的情况下，将发生导致应用程序中出现死锁的情况，进而使执行冻结。<br><br> 不过，在有些情况下，您可能需要通过线程调用控件的方法。例如，您可能要在窗体上调用一个禁用按钮或更新显示的方法来响应某个线程执行的操作。.NET 框架提供从任何线程都可安全调用的方法，以调用与其他线程所拥有的控件进行交互的方法。Control.Invoke 方法允许同步执行控件上的方法，而 Control.BeginInvoke 方法则初始化异步执行。要使用这些方法，必须用与将调用的方法相同的签名声明委托。然后，您可以通过向要调用的方法提供适当的委托来调用窗体上任何控件的 Invoke 或 BeginInvoke 方法。任何必需的参数都包装在 Object 中，并被传输到该方法。</p></blockquote><p>该问题已经结贴 ，得分记录： rqxiang (20)、 Freddu (20)、 Marketdong (20)、 unfor (20)、 zhaoao5958 (20)、</p>`,15),e=[o];function c(u,l){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","dg37.html.vue"]]);export{i as default};
