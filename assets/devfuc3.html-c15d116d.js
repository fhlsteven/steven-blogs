import{_ as e,o as i,c as o,a}from"./app-d9da1b6d.js";const l={},d=a('<h1 id="项目中的方法-工具和技术" tabindex="-1"><a class="header-anchor" href="#项目中的方法-工具和技术" aria-hidden="true">#</a> 项目中的方法，工具和技术</h1><p>关于项目中方法，工具和技术的说明是一个很重要的内容．都是项目管理的重要元素．特举个项目中的例子如下：</p><h2 id="项目中的方法" tabindex="-1"><a class="header-anchor" href="#项目中的方法" aria-hidden="true">#</a> 项目中的方法</h2><ol><li>项目采用了RUP的相关方法论，以用例分析为驱动，得出相关的软件需求说明书和用例模型；以架构设计为核心，在软件需求基础上进行4+1视图的架构设计，得出相关的分析模型；具体的增量迭代在需求和架构上不迭代，在后续的结队开发中进行迭代。</li><li>项目借鉴敏捷开发的部分方法论，在结队开发任务中强调设计开发人员的紧密协作和工件的Review和单元测试。强调项目个体技能对项目重要性；强调整个团队价值观对项目成功的重要性。</li><li>项目借鉴MSF的相关方法论，对项目人员角色和职责进行了明确的划分，保证了角色和职责的明确；在项目过程中采用每日构建流程，保证相关功能的持续集成和问题的及早暴露和发现。</li></ol><h2 id="项目采用的工具和技术" tabindex="-1"><a class="header-anchor" href="#项目采用的工具和技术" aria-hidden="true">#</a> 项目采用的工具和技术</h2><ol><li>需求采用Rose出用例模型和业务对象模型，采用DotNet2003开发界面原型。采用Word出软件需求说明书。</li><li>架构和设计采用Rose或XDE出分析模型和设计模型，采用PowerDesigner出数据库设计，采用DotNet2003出相关的原型。</li><li>编码采用DotNet2003完成前台编码。采用PL/SQL Developer或Toad完成后台数据库表和存储过程编码。</li><li>测试采用Nunit进行单元测试，采用LoadRunner进行性能测试。</li><li>项目方面采用CQ进行需求变更和BUG的管理；采用CC进行项目数据的管理；采用Excel进行测试用例的管理和追踪；采用RP进行需求追踪和需求状态的管理；采用<code>***</code>进行项目任务的管理；采用<code>***</code>进行度量数据的收集后分析；采用<code>**</code>系统管理相关的同行评审。</li></ol>',6),t=[d];function c(r,n){return i(),o("div",null,t)}const s=e(l,[["render",c],["__file","devfuc3.html.vue"]]);export{s as default};
