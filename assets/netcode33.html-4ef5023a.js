import{_ as t,r as p,o,c as e,b as n,d as s,e as c,a as l}from"./app-477de5b2.js";const u={},k={id:"获取同网段其它机器的mac地址",tabindex:"-1"},i=n("a",{class:"header-anchor",href:"#获取同网段其它机器的mac地址","aria-hidden":"true"},"#",-1),r={href:"https://www.cnblogs.com/zhenyulu/archive/2004/08/13/33037.html",target:"_blank",rel:"noopener noreferrer"},d=l(`<p>如果需要获取另外一台机器的Mac地址，可以使用SendARP方法将IP地址解析成MAC地址。网上可以找到现成资料，但大部分只确保返回一个Int64类型的数据，但在将Int64转换为MAC字符串时却少有资料。我对网上的程序重新改写了一番，在这里给出一个完整的例子：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">RemoteMac</span>
<span class="token punctuation">{</span>
   <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Iphlpapi.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
   <span class="token keyword">private</span> <span class="token keyword">static</span>  <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">SendARP</span><span class="token punctuation">(</span><span class="token class-name">Int32</span> dest<span class="token punctuation">,</span><span class="token class-name">Int32</span> host<span class="token punctuation">,</span><span class="token keyword">ref</span> <span class="token class-name">Int64</span> mac<span class="token punctuation">,</span><span class="token keyword">ref</span> <span class="token class-name">Int32</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Ws2_32.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">Int32</span> <span class="token function">inet_addr</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> ip<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">STAThread</span></span><span class="token punctuation">]</span>
   <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
   <span class="token punctuation">{</span>
      Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token function">GetRemoteMAC</span><span class="token punctuation">(</span><span class="token string">&quot;***.***.***.***&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;***.***.***.***&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">GetRemoteMAC</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> localIP<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> remoteIP<span class="token punctuation">)</span>
   <span class="token punctuation">{</span>
      <span class="token class-name">Int32</span> ldest<span class="token operator">=</span> <span class="token function">inet_addr</span><span class="token punctuation">(</span>remoteIP<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//目的地的ip</span>
      <span class="token class-name">Int32</span> lhost<span class="token operator">=</span> <span class="token function">inet_addr</span><span class="token punctuation">(</span>localIP<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//本地服务器的ip</span>

      <span class="token class-name"><span class="token keyword">string</span></span> MacStr <span class="token operator">=</span> <span class="token string">&quot;Unknown&quot;</span><span class="token punctuation">;</span>
      <span class="token class-name">Int64</span> macinfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Int64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
      <span class="token class-name">Int32</span> len <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span> 
      
      <span class="token keyword">try</span>
      <span class="token punctuation">{</span>
         <span class="token function">SendARP</span><span class="token punctuation">(</span>ldest<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">ref</span> macinfo<span class="token punctuation">,</span> <span class="token keyword">ref</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span> 
         <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> b <span class="token operator">=</span> BitConverter<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>macinfo<span class="token punctuation">)</span><span class="token punctuation">;</span> 
         MacStr <span class="token operator">=</span> <span class="token function">ByteArrayToMacString</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> 
      <span class="token punctuation">}</span>
      <span class="token keyword">catch</span>
      <span class="token punctuation">{</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> MacStr<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">static</span> <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">ByteArrayToMacString</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> buff<span class="token punctuation">)</span>
   <span class="token punctuation">{</span>
      <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
      <span class="token punctuation">{</span>
         sb<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;{0:X2}&quot;</span><span class="token punctuation">,</span>buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         sb<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token char">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      sb<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>实际使用时，请将命令</p><p><code>Console.WriteLine(GetRemoteMAC(&quot;***.***.***.***&quot;,&quot;***.***.***.***&quot;));</code></p><p>中的“<code>***.***.***.***</code>”分别替换成自己机器的IP地址以及希望获取其MAC地址的那台机器的IP地址。</p>`,5);function m(y,w){const a=p("ExternalLinkIcon");return o(),e("div",null,[n("h1",k,[i,s(),n("a",r,[s("获取同网段其它机器的Mac地址"),c(a)])]),d])}const g=t(u,[["render",m],["__file","netcode33.html.vue"]]);export{g as default};
