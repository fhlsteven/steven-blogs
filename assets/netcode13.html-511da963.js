import{_ as n,o as s,c as a,a as t}from"./app-f0851ed3.js";const p={},o=t(`<h1 id="c-写的-httprequsetresponse-类-异步、事件-还热乎着呢" tabindex="-1"><a class="header-anchor" href="#c-写的-httprequsetresponse-类-异步、事件-还热乎着呢" aria-hidden="true">#</a> C# 写的 HttpRequsetResponse 类,异步、事件... 还热乎着呢</h1><blockquote><p>你是第89位浏览该文章的人 playyuer csdn 2003-6-28</p></blockquote><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//调用示例:</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Net</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button1_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">HttpRequestResponse</span> xx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpRequestResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xx<span class="token punctuation">.</span>DataArrival <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DataArrivalEventHandler</span><span class="token punctuation">(</span>xx_DataArrival<span class="token punctuation">)</span><span class="token punctuation">;</span>
    xx<span class="token punctuation">.</span><span class="token function">SendRequest</span><span class="token punctuation">(</span><span class="token string">&quot;http://www.triaton.com.cn/dotnet/tree/index.asp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;userid=老&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Post&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xx<span class="token punctuation">.</span><span class="token function">SendRequest</span><span class="token punctuation">(</span><span class="token string">&quot;http://www.triaton.com.cn/dotnet/tree/index.asp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;userid=老&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">xx_DataArrival</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">DataArrivalEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>RecievedData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>IsComplete<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//========================</span>
<span class="token comment">//Class1.cs</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Net</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span> 

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RequestState</span>
<span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> BUFFER_SIZE <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>StringBuilder</span> RequestData<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> BufferRead<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>HttpWebRequest</span> Request<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>Stream</span> ResponseStream<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Decoder</span> StreamDecode <span class="token operator">=</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span><span class="token function">GetEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;gb2312&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">RequestState</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        BufferRead <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">byte</span></span><span class="token punctuation">[</span>BUFFER_SIZE<span class="token punctuation">]</span><span class="token punctuation">;</span>
        RequestData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>StringBuilder</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Request <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        ResponseStream <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">delegate</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DataArrivalEventHandler</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">DataArrivalEventArgs</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataArrivalEventArgs</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> mRecievedData<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">bool</span></span> mIsComplete <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">DataArrivalEventArgs</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> Data<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> Complete<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        mRecievedData <span class="token operator">=</span> Data<span class="token punctuation">;</span>
        mIsComplete <span class="token operator">=</span> Complete<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> RecievedData
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mRecievedData<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsComplete
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mIsComplete<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">HttpRequestResponse</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>ManualResetEvent</span> allDone <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>ManualResetEvent</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> BUFFER_SIZE <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">DataArrivalEventHandler</span> DataArrival<span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnDataArrival</span><span class="token punctuation">(</span><span class="token class-name">DataArrivalEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>DataArrival <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">DataArrival</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding</span> mRequestEncoding <span class="token operator">=</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span><span class="token function">GetEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;gb2312&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SendRequest</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> RequestURL<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> RequestData<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> RequestMethod<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">HttpWebRequest</span> req<span class="token punctuation">;</span>
        <span class="token class-name">RequestState</span> rs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RequestState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>RequestData <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j<span class="token punctuation">;</span>
            <span class="token class-name">Char<span class="token punctuation">[</span><span class="token punctuation">]</span></span> reserved <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token char">&#39;?&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;=&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;&amp;&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> RequestData<span class="token punctuation">.</span>Length<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                j <span class="token operator">=</span> RequestData<span class="token punctuation">.</span><span class="token function">IndexOfAny</span><span class="token punctuation">(</span>reserved<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    rs<span class="token punctuation">.</span>RequestData<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Web<span class="token punctuation">.</span>HttpUtility<span class="token punctuation">.</span><span class="token function">UrlEncode</span><span class="token punctuation">(</span>RequestData<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> RequestData<span class="token punctuation">.</span>Length <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span> mRequestEncoding<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                rs<span class="token punctuation">.</span>RequestData<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Web<span class="token punctuation">.</span>HttpUtility<span class="token punctuation">.</span><span class="token function">UrlEncode</span><span class="token punctuation">(</span>RequestData<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span> mRequestEncoding<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                rs<span class="token punctuation">.</span>RequestData<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span>RequestData<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                i <span class="token operator">=</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>RequestMethod<span class="token punctuation">.</span><span class="token function">ToUpper</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> Buffer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            Buffer <span class="token operator">=</span> mRequestEncoding<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span>RequestData<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            req <span class="token operator">=</span> <span class="token punctuation">(</span>HttpWebRequest<span class="token punctuation">)</span>WebRequest<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>RequestURL<span class="token punctuation">)</span><span class="token punctuation">;</span>
            req<span class="token punctuation">.</span>ContentLength <span class="token operator">=</span> Buffer<span class="token punctuation">.</span>Length<span class="token punctuation">;</span>
            req<span class="token punctuation">.</span>Method <span class="token operator">=</span> RequestMethod<span class="token punctuation">;</span>
            req<span class="token punctuation">.</span>ContentType <span class="token operator">=</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">;</span>
            <span class="token class-name">Stream</span> newStream <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">GetRequestStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            newStream<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Buffer<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            newStream<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            req <span class="token operator">=</span> <span class="token punctuation">(</span>HttpWebRequest<span class="token punctuation">)</span>WebRequest<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>RequestURL <span class="token operator">+</span> <span class="token string">&quot;?&quot;</span> <span class="token operator">+</span> rs<span class="token punctuation">.</span>RequestData<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        rs<span class="token punctuation">.</span>Request <span class="token operator">=</span> req<span class="token punctuation">;</span>
        <span class="token class-name">System<span class="token punctuation">.</span>IAsyncResult</span> r <span class="token operator">=</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span>IAsyncResult<span class="token punctuation">)</span>req<span class="token punctuation">.</span><span class="token function">BeginGetResponse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>AsyncCallback</span><span class="token punctuation">(</span>ResponseCallback<span class="token punctuation">)</span><span class="token punctuation">,</span> rs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ResponseCallback</span><span class="token punctuation">(</span><span class="token class-name">IAsyncResult</span> ar<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">RequestState</span> rs <span class="token operator">=</span> <span class="token punctuation">(</span>RequestState<span class="token punctuation">)</span>ar<span class="token punctuation">.</span>AsyncState<span class="token punctuation">;</span>
        <span class="token class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>HttpWebRequest</span> req <span class="token operator">=</span> rs<span class="token punctuation">.</span>Request<span class="token punctuation">;</span>
        <span class="token class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>HttpWebResponse</span> resp <span class="token operator">=</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>HttpWebResponse<span class="token punctuation">)</span>req<span class="token punctuation">.</span><span class="token function">EndGetResponse</span><span class="token punctuation">(</span>ar<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>Stream</span> ResponseStream <span class="token operator">=</span> resp<span class="token punctuation">.</span><span class="token function">GetResponseStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rs<span class="token punctuation">.</span>ResponseStream <span class="token operator">=</span> ResponseStream<span class="token punctuation">;</span>
        <span class="token class-name">IAsyncResult</span> iarRead <span class="token operator">=</span> ResponseStream<span class="token punctuation">.</span><span class="token function">BeginRead</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span>BufferRead<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> BUFFER_SIZE<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AsyncCallback</span><span class="token punctuation">(</span>ReadCallBack<span class="token punctuation">)</span><span class="token punctuation">,</span> rs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ReadCallBack</span><span class="token punctuation">(</span><span class="token class-name">IAsyncResult</span> asyncResult<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">RequestState</span> rs <span class="token operator">=</span> <span class="token punctuation">(</span>RequestState<span class="token punctuation">)</span>asyncResult<span class="token punctuation">.</span>AsyncState<span class="token punctuation">;</span>
        <span class="token class-name">System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>Stream</span> responseStream <span class="token operator">=</span> rs<span class="token punctuation">.</span>ResponseStream<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">int</span></span> read <span class="token operator">=</span> responseStream<span class="token punctuation">.</span><span class="token function">EndRead</span><span class="token punctuation">(</span>asyncResult<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>read <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">Char<span class="token punctuation">[</span><span class="token punctuation">]</span></span> charBuffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Char</span><span class="token punctuation">[</span>BUFFER_SIZE<span class="token punctuation">]</span><span class="token punctuation">;</span>

            <span class="token class-name"><span class="token keyword">int</span></span> len <span class="token operator">=</span> rs<span class="token punctuation">.</span>StreamDecode<span class="token punctuation">.</span><span class="token function">GetChars</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span>BufferRead<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> read<span class="token punctuation">,</span> charBuffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System<span class="token punctuation">.</span>String</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>String</span><span class="token punctuation">(</span>charBuffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token function">OnDataArrival</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DataArrivalEventArgs</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            rs<span class="token punctuation">.</span>RequestData<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">IAsyncResult</span> ar <span class="token operator">=</span> responseStream<span class="token punctuation">.</span><span class="token function">BeginRead</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span>BufferRead<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> BUFFER_SIZE<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AsyncCallback</span><span class="token punctuation">(</span>ReadCallBack<span class="token punctuation">)</span><span class="token punctuation">,</span> rs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span>RequestData<span class="token punctuation">.</span>Length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">string</span></span> strContent<span class="token punctuation">;</span>
                strContent <span class="token operator">=</span> rs<span class="token punctuation">.</span>RequestData<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            responseStream<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">OnDataArrival</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DataArrivalEventArgs</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            allDone<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//================================</span>
<span class="token comment">//调用示例</span>
<span class="token comment">//再贴一个 Socket 编的</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button1_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">WindowsApplication1<span class="token punctuation">.</span>HttpRequestResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SendRequestAndGetResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">WindowsApplication1<span class="token punctuation">.</span>HttpRequestResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SendRequestAndGetResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">WindowsApplication1<span class="token punctuation">.</span>HttpRequestResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SendRequestAndGetResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">WindowsApplication1<span class="token punctuation">.</span>HttpRequestResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SendRequestAndGetResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">WindowsApplication1<span class="token punctuation">.</span>HttpRequestResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SendRequestAndGetResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">WindowsApplication1<span class="token punctuation">.</span>HttpRequestResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SendRequestAndGetResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;send end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//很久(去年)以前写的 Socket 级的 Class1.cs</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// Class1 的摘要说明。</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpRequestResponse</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>StringBuilder</span> SB <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> sReq<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">byte</span></span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">int</span></span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">int</span></span> Count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">//public delegate SendRequestAndGetResponse</span>
    <span class="token keyword">public</span> <span class="token function">HttpRequestResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//</span>
        <span class="token comment">// TODO: 在此处添加构造函数逻辑</span>
        <span class="token comment">//</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SendRequestAndGetResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">string</span></span> sHost <span class="token operator">=</span> <span class="token string">&quot;triatonweb&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">int</span></span> iPort <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> sReqItem <span class="token operator">=</span> <span class="token string">&quot;游客&quot;</span><span class="token punctuation">;</span>
        sReqItem <span class="token operator">=</span> <span class="token string">&quot;uid=&quot;</span> <span class="token operator">+</span> System<span class="token punctuation">.</span>Web<span class="token punctuation">.</span>HttpUtility<span class="token punctuation">.</span><span class="token function">UrlEncode</span><span class="token punctuation">(</span>sReqItem<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span><span class="token function">GetEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;GB2312&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sReq <span class="token operator">=</span> <span class="token string">&quot;userid=&quot;</span> <span class="token operator">+</span> System<span class="token punctuation">.</span>Web<span class="token punctuation">.</span>HttpUtility<span class="token punctuation">.</span><span class="token function">UrlEncode</span><span class="token punctuation">(</span><span class="token string">&quot;游客&quot;</span><span class="token punctuation">,</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span><span class="token function">GetEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;GB2312&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token operator">+</span> <span class="token string">&quot;&amp;dest_tel=13910081138&quot;</span>
        <span class="token operator">+</span> <span class="token string">&quot;&amp;mytel=13910081138&quot;</span>
        <span class="token operator">+</span> <span class="token string">&quot;&amp;mypwd=asdada&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> CGI <span class="token operator">=</span> <span class="token string">&quot;dotnet/tree/index.asp&quot;</span><span class="token punctuation">;</span>
        sReq <span class="token operator">=</span> <span class="token string">&quot;POST /&quot;</span> <span class="token operator">+</span> CGI <span class="token operator">+</span> <span class="token string">&quot; HTTP/1.1\\n&quot;</span>
        <span class="token operator">+</span> <span class="token string">&quot;Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*\\n&quot;</span>
        <span class="token operator">+</span> <span class="token string">&quot;Accept-Language: zh-cn\\n&quot;</span>
        <span class="token operator">+</span> <span class="token string">&quot;Content-Type: application/x-www-form-urlencoded\\n&quot;</span>
        <span class="token operator">+</span> <span class="token string">&quot;Accept-Encoding: gzip, deflate\\n&quot;</span>
        <span class="token operator">+</span> <span class="token string">&quot;User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.0.3705)\\n&quot;</span>
        <span class="token operator">+</span> <span class="token string">&quot;Host: &quot;</span> <span class="token operator">+</span> sHost <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> System<span class="token punctuation">.</span>Convert<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span>iPort<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span>
        <span class="token operator">+</span> <span class="token string">&quot;Content-Length: &quot;</span> <span class="token operator">+</span> System<span class="token punctuation">.</span>Convert<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span>sReqItem<span class="token punctuation">.</span>Length<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span>
        <span class="token operator">+</span> <span class="token string">&quot;Connection: Keep-Alive\\n&quot;</span>
        <span class="token operator">+</span> <span class="token string">&quot;Cache-Control: no-cache\\n\\n&quot;</span>
        <span class="token operator">+</span> sReq<span class="token punctuation">;</span>

        <span class="token class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>Socket</span> Skt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>Socket</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>AddressFamily<span class="token punctuation">.</span>InterNetwork<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>SocketType<span class="token punctuation">.</span>Stream<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>ProtocolType<span class="token punctuation">.</span>Tcp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        index <span class="token operator">=</span> <span class="token operator">++</span>Count<span class="token punctuation">;</span>
        Skt<span class="token punctuation">.</span><span class="token function">BeginConnect</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>IPEndPoint</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Dns<span class="token punctuation">.</span><span class="token function">Resolve</span><span class="token punctuation">(</span>sHost<span class="token punctuation">)</span><span class="token punctuation">.</span>AddressList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>AsyncCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>BeginConnectAsyncCallback<span class="token punctuation">)</span><span class="token punctuation">,</span> Skt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Socket[&quot;</span> <span class="token operator">+</span> index<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;] 开始连接: {0}&quot;</span><span class="token punctuation">,</span> Skt<span class="token punctuation">.</span>RemoteEndPoint<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">BeginConnectAsyncCallback</span><span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>IAsyncResult</span> IAR<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// try </span>
        <span class="token comment">// {</span>
        <span class="token class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>Socket</span> Skt <span class="token operator">=</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>Socket<span class="token punctuation">)</span>IAR<span class="token punctuation">.</span>AsyncState<span class="token punctuation">;</span>
        Skt<span class="token punctuation">.</span><span class="token function">EndConnect</span><span class="token punctuation">(</span>IAR<span class="token punctuation">)</span><span class="token punctuation">;</span>

        System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Socket[&quot;</span> <span class="token operator">+</span> index<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;] 已连接到: {0}&quot;</span><span class="token punctuation">,</span> Skt<span class="token punctuation">.</span>RemoteEndPoint<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buffer <span class="token operator">=</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span><span class="token function">GetEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;GB2312&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>sReq<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Skt<span class="token punctuation">.</span><span class="token function">BeginSend</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> buffer<span class="token punctuation">.</span>Length<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>SocketFlags<span class="token punctuation">.</span>None<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>AsyncCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>BeginSendAsyncCallback<span class="token punctuation">)</span><span class="token punctuation">,</span> Skt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Socket[&quot;</span> <span class="token operator">+</span> index<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;] 开始发送: {1} Bytes 数据,到 IP: {0} &quot;</span><span class="token punctuation">,</span> Skt<span class="token punctuation">.</span>RemoteEndPoint<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> buffer<span class="token punctuation">.</span>Length<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// } </span>
        <span class="token comment">// catch (Exception e) </span>
        <span class="token comment">// {</span>
        <span class="token comment">// Console.WriteLine(e.ToString());</span>
        <span class="token comment">// }</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">BeginSendAsyncCallback</span><span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>IAsyncResult</span> IAR<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// try </span>
        <span class="token comment">// {</span>
        <span class="token class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>Socket</span> Skt <span class="token operator">=</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>Socket<span class="token punctuation">)</span>IAR<span class="token punctuation">.</span>AsyncState<span class="token punctuation">;</span>
        Skt<span class="token punctuation">.</span><span class="token function">EndSend</span><span class="token punctuation">(</span>IAR<span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Socket[&quot;</span> <span class="token operator">+</span> index<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;] 发送完毕&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//byte[] buffer = new byte[1024];</span>
        Skt<span class="token punctuation">.</span><span class="token function">BeginReceive</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> buffer<span class="token punctuation">.</span>Length<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>SocketFlags<span class="token punctuation">.</span>None<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>AsyncCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>BeginRecieveAsyncCallback<span class="token punctuation">)</span><span class="token punctuation">,</span> Skt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Socket[&quot;</span> <span class="token operator">+</span> index<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;] 开始接收数据,从 IP: {0}&quot;</span><span class="token punctuation">,</span> Skt<span class="token punctuation">.</span>RemoteEndPoint<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// } </span>
        <span class="token comment">// catch (Exception e) </span>
        <span class="token comment">// {</span>
        <span class="token comment">// Console.WriteLine(e.ToString());</span>
        <span class="token comment">// }</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">BeginRecieveAsyncCallback</span><span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>IAsyncResult</span> IAR<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// try </span>
        <span class="token comment">// {</span>
        <span class="token class-name">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>Socket</span> Skt <span class="token operator">=</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>Socket<span class="token punctuation">)</span>IAR<span class="token punctuation">.</span>AsyncState<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> Skt<span class="token punctuation">.</span><span class="token function">EndReceive</span><span class="token punctuation">(</span>IAR<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//buffer.Length = i;</span>
            SB<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span><span class="token function">GetEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;GB2312&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Skt<span class="token punctuation">.</span><span class="token function">BeginReceive</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> buffer<span class="token punctuation">.</span>Length<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>SocketFlags<span class="token punctuation">.</span>None<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>AsyncCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>BeginRecieveAsyncCallback<span class="token punctuation">)</span><span class="token punctuation">,</span> Skt<span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Socket[&quot;</span> <span class="token operator">+</span> index<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;] 已接收 {1} 字节数据,从 IP: {0}&quot;</span><span class="token punctuation">,</span> Skt<span class="token punctuation">.</span>RemoteEndPoint<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> buffer<span class="token punctuation">.</span>Length<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span><span class="token function">GetEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;GB2312&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            Skt<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Skt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>SB<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//Skt.BeginReceive</span>

        <span class="token comment">// } </span>
        <span class="token comment">// catch (Exception e) </span>
        <span class="token comment">// {</span>
        <span class="token comment">// Console.WriteLine(e.ToString());</span>
        <span class="token comment">// }</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,3),e=[o];function c(u,l){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","netcode13.html.vue"]]);export{i as default};
