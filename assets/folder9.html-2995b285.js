import{_ as n,o as s,c as a,a as t}from"./app-f0851ed3.js";const p={},o=t(`<h1 id="visual-c-资源文件编程-创建资源文件" tabindex="-1"><a class="header-anchor" href="#visual-c-资源文件编程-创建资源文件" aria-hidden="true">#</a> Visual C＃资源文件编程--创建资源文件</h1><blockquote><p>你是第112位浏览该文章的人 不详 不详 2003-4-17</p></blockquote><p>资源文件顾名思义就是存放资源的文件。资源文件在程序设计中有着自身独特的优势，他独立于源程序，这样资源文件就可以被多个程序使用。同时在程序设计的时候，有时出于安全或者其他方面因素的考虑，把重要东西存放在资源文件中，也可以达到保密、安全的效果。那么Visual C#所使用的资源文件中到底存放哪些东西呢？在用Visual C#创建资源文件大致可以存放三种类型的数据资源，分别是字节数组、各种对象和字符串。本文将结合一个程序例子来具体说明用Visual C#是如何创建资源文件的。</p><h2 id="一-用visual-c-在创建资源文件用到的一些概念和理论" tabindex="-1"><a class="header-anchor" href="#一-用visual-c-在创建资源文件用到的一些概念和理论" aria-hidden="true">#</a> 一．用Visual C#在创建资源文件用到的一些概念和理论</h2><p>在.Net FrameWork SDK中的一个名字叫System.Resources名称空间，在此名称空间中为应用程序提供了许多创建、存储和使用资源文件的类和接口。其中有一个类叫ResourceWriter，Visual C#就是通过调用这个类来实现创建、存储资源文件的。</p><h2 id="二-visual-c-如何创建资源文件" tabindex="-1"><a class="header-anchor" href="#二-visual-c-如何创建资源文件" aria-hidden="true">#</a> 二．Visual C#如何创建资源文件</h2><p>首先要继承一个ResourceWriter类，然后调用<code>ResourceWriter</code>类的一个方法<code>Generate()</code>，就可以产生一个资源文件了。具体语句如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">ResourceWriter</span> rw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ResourceWriter</span><span class="token punctuation">(</span><span class="token string">&quot;My.resources&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
rw<span class="token punctuation">.</span><span class="token function">Generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>此时在磁盘的中就会产生一个名称为&quot;My.resources&quot;的资源文件，但此时的资源文件没有任何内容，下面我们就来看看如何往资源文件中添加资源。</p><h2 id="三-在资源文件中添加资源" tabindex="-1"><a class="header-anchor" href="#三-在资源文件中添加资源" aria-hidden="true">#</a> 三．在资源文件中添加资源</h2><p>在ResourceWriter类中提供了一个<code>AddResource()</code>方法，这个方法的作用就是往资源文件中添加资源的。在Visual C#中对不同的资源有着不同的加入方式。</p><p>（1）.加入字节数组，语法格式为：</p><p><code>public void AddResource(string , byte []);</code></p><p>注释：其中string是在使用资源文件的时候，此字节数组在程序中的的唯一标识符</p><p>（2）.加入对象，语法格式为：</p><p><code>public void AddResource ( string , object );</code></p><p>注释：其中string是在使用资源文件的时候，此对象在程序中的唯一标识符</p><p>在本文程序中，我们利用这种调用方式来加入图标和图象，具体如下：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">Icon</span> ico <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Icon</span> <span class="token punctuation">(</span><span class="token string">&quot;Demo.ico&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Image</span> canceloff <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;cancel-off.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Image</span> cancelon <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;cancel-on.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Image</span> cancelover <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;cancel-over.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Image</span> okdown <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;ok-down.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Image</span> okoff <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;ok-off.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Image</span> okon <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;ok-on.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;demo.ico&quot;</span> <span class="token punctuation">,</span> ico<span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token comment">//在资源文件中加入图标</span>

<span class="token comment">//以下是在资源文件中加入图象</span>
rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;cancel-off.png&quot;</span><span class="token punctuation">,</span> canceloff<span class="token punctuation">)</span><span class="token punctuation">;</span>
rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;cancel-on.png&quot;</span><span class="token punctuation">,</span> cancelon<span class="token punctuation">)</span><span class="token punctuation">;</span>
rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;cancel-over.png&quot;</span><span class="token punctuation">,</span> cancelover<span class="token punctuation">)</span><span class="token punctuation">;</span>
rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;ok-down.png&quot;</span><span class="token punctuation">,</span> okdown<span class="token punctuation">)</span><span class="token punctuation">;</span>
rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;ok-off.png&quot;</span><span class="token punctuation">,</span> okoff<span class="token punctuation">)</span><span class="token punctuation">;</span>
rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;ok-on.png&quot;</span><span class="token punctuation">,</span> okon<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>（3）.加入字符串，具体语法如下：</p><p><code>public void AddResource(string1 , string2);</code></p><p>注释：其中string1是在使用资源文件的时候，此字符串在程序中的唯一标识符在本文的程序中，是如此使用的：</p><p><code>rw.AddResource(&quot;MyStr&quot; , &quot;从资源文件中读取字符串！&quot;);</code></p><p>至此我们已经创建了一个资源文件，并且在资源文件中加入了若干个资源，当然在这之后，还应该注意，保存此资源文件，并关闭资源文件，具体如下：</p><p><code>rw.Close();</code></p><h2 id="四-创建资源文件的源程序代码" tabindex="-1"><a class="header-anchor" href="#四-创建资源文件的源程序代码" aria-hidden="true">#</a> 四．创建资源文件的源程序代码</h2><p>通过上面的论述，我们不难理解下面这些代码。下列程序代码的作用就是，创建一个名称为&quot;My.resources&quot;资源文件，并且在此资源文件中加入一个图标资源，若干个图象资源，和一个字符串资源。具体代码如下：</p><p>CreatResources.cs：</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Resources</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">CreatResource</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">ResourceWriter</span> rw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ResourceWriter</span><span class="token punctuation">(</span><span class="token string">&quot;My.resources&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Icon</span> ico <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Icon</span><span class="token punctuation">(</span><span class="token string">&quot;Demo.ico&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Image</span> canceloff <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;cancel-off.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Image</span> cancelon <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;cancel-on.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Image</span> cancelover <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;cancel-over.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Image</span> okdown <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;ok-down.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Image</span> okoff <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;ok-off.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Image</span> okon <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;ok-on.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;demo.ico&quot;</span><span class="token punctuation">,</span> ico<span class="token punctuation">)</span><span class="token punctuation">;</span>
        rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;cancel-off.png&quot;</span><span class="token punctuation">,</span> canceloff<span class="token punctuation">)</span><span class="token punctuation">;</span>
        rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;cancel-on.png&quot;</span><span class="token punctuation">,</span> cancelon<span class="token punctuation">)</span><span class="token punctuation">;</span>
        rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;cancel-over.png&quot;</span><span class="token punctuation">,</span> cancelover<span class="token punctuation">)</span><span class="token punctuation">;</span>
        rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;ok-down.png&quot;</span><span class="token punctuation">,</span> okdown<span class="token punctuation">)</span><span class="token punctuation">;</span>
        rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;ok-off.png&quot;</span><span class="token punctuation">,</span> okoff<span class="token punctuation">)</span><span class="token punctuation">;</span>
        rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;ok-on.png&quot;</span><span class="token punctuation">,</span> okon<span class="token punctuation">)</span><span class="token punctuation">;</span>
        rw<span class="token punctuation">.</span><span class="token function">AddResource</span><span class="token punctuation">(</span><span class="token string">&quot;MyStr&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;从资源文件中读取字符串！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        rw<span class="token punctuation">.</span><span class="token function">Generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rw<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>最好还要提醒一下，在成功编译成执行文件后，在执行此文件的时候，必须保证在此执行文件的相同目录，存在上面代码中提到名称的图标和图象，否则在创建资源文件的时候是会出错的。</p><h2 id="五-总结" tabindex="-1"><a class="header-anchor" href="#五-总结" aria-hidden="true">#</a> 五．总结</h2><p>可见用Visual C#创建资源文件并不是一个复杂的过程，在下一篇文章中，我们将介绍如何在Visual C#使用资源文件中资源。这才是Visual C#资源文件编程的重点和难点。当然文中所使用的资源文件就是以本文中创建的资源文件。</p>`,32),c=[o];function e(u,l){return s(),a("div",null,c)}const k=n(p,[["render",e],["__file","folder9.html.vue"]]);export{k as default};
