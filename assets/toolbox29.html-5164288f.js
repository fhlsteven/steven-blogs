import{_ as n,o as s,c as a,a as t}from"./app-d9da1b6d.js";const p="/steven-blogs/assets/toolbox29_1-e6ef3f3d.png",o={},c=t(`<h1 id="透明的usercontrol" tabindex="-1"><a class="header-anchor" href="#透明的usercontrol" aria-hidden="true">#</a> 透明的UserControl</h1><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token function">InformationViewer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">SetStyle</span><span class="token punctuation">(</span>ControlStyles<span class="token punctuation">.</span>UserPaint<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">SetStyle</span><span class="token punctuation">(</span>ControlStyles<span class="token punctuation">.</span>SupportsTransparentBackColor<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnPaint</span><span class="token punctuation">(</span><span class="token class-name">PaintEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">OnPaint</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Graphics</span> g <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">CreateGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Rectangle</span> photoRect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rectangle</span><span class="token punctuation">(</span>DisplayRegion<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> DisplayRegion<span class="token punctuation">.</span>Height<span class="token punctuation">,</span> DisplayRegion<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> DisplayRegion<span class="token punctuation">.</span>Height<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Rectangle</span> infoRect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Photo <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        photoRect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rectangle</span><span class="token punctuation">(</span>DisplayRegion<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> DisplayRegion<span class="token punctuation">.</span>Height<span class="token punctuation">,</span> PhotoSize<span class="token punctuation">.</span>Width <span class="token operator">+</span> DisplayRegion<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> PhotoSize<span class="token punctuation">.</span>Height <span class="token operator">+</span> DisplayRegion<span class="token punctuation">.</span>Height<span class="token punctuation">)</span><span class="token punctuation">;</span>
        g<span class="token punctuation">.</span><span class="token function">DrawImage</span><span class="token punctuation">(</span>Photo<span class="token punctuation">,</span> photoRect<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Photo<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> Photo<span class="token punctuation">.</span>Height<span class="token punctuation">,</span> GraphicsUnit<span class="token punctuation">.</span>Pixel<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Height <span class="token operator">=</span> photoRect<span class="token punctuation">.</span>Height <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> DisplayRegion<span class="token punctuation">.</span>Height<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>DisplayInfo <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">int</span></span> infoLeft <span class="token operator">=</span> photoRect<span class="token punctuation">.</span>Width <span class="token operator">+</span> photoRect<span class="token punctuation">.</span>Left <span class="token operator">+</span> DisplayRegion<span class="token punctuation">.</span>Width<span class="token punctuation">;</span>
        infoRect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rectangle</span><span class="token punctuation">(</span>infoLeft<span class="token punctuation">,</span> DisplayRegion<span class="token punctuation">.</span>Height<span class="token punctuation">,</span> Width <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> DisplayRegion<span class="token punctuation">.</span>Width <span class="token operator">-</span> photoRect<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> Height <span class="token operator">-</span> DisplayRegion<span class="token punctuation">.</span>Height<span class="token punctuation">)</span><span class="token punctuation">;</span>
        g<span class="token punctuation">.</span><span class="token function">DrawString</span><span class="token punctuation">(</span>DisplayInfo<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Font<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SolidBrush</span><span class="token punctuation">(</span>ForeColor<span class="token punctuation">)</span><span class="token punctuation">,</span> infoRect<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name"><span class="token keyword">float</span></span> rr <span class="token operator">=</span> DisplayRegion<span class="token punctuation">.</span>Height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token class-name">PointF<span class="token punctuation">[</span><span class="token punctuation">]</span></span> points <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PointF</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PointF</span><span class="token punctuation">(</span>rr<span class="token punctuation">,</span> rr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    points<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PointF</span><span class="token punctuation">(</span>Width <span class="token operator">-</span> rr<span class="token punctuation">,</span> rr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    points<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PointF</span><span class="token punctuation">(</span>Width <span class="token operator">-</span> rr<span class="token punctuation">,</span> Height <span class="token operator">-</span> rr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    points<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PointF</span><span class="token punctuation">(</span>rr<span class="token punctuation">,</span> Height <span class="token operator">-</span> rr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    points<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PointF</span><span class="token punctuation">(</span>rr<span class="token punctuation">,</span> rr<span class="token punctuation">)</span><span class="token punctuation">;</span>

    g<span class="token punctuation">.</span><span class="token function">DrawLines</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Pen</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SolidBrush</span><span class="token punctuation">(</span>ForeColor<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> points<span class="token punctuation">)</span><span class="token punctuation">;</span>
    BackColor <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">FromArgb</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span> BackColor<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 注意这里啊啊啊啊</span>
<span class="token punctuation">}</span>
</code></pre></div><p>设计时效果如下所示： 设计时和运行时差不多就不帖图了</p><p><img src="`+p+'" alt="img_1"></p>',4),e=[c];function u(l,i){return s(),a("div",null,e)}const r=n(o,[["render",u],["__file","toolbox29.html.vue"]]);export{r as default};
